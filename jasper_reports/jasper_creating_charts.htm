<!doctype html>
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--><html lang="en"><!--<![endif]-->

<!-- Mirrored from www.tutorialspoint.com/jasper_reports/jasper_creating_charts.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 21:18:21 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="utf-8">
<title>JasperReports - Creating Charts</title>
<link rel="shortcut icon" href="../favicon.png" type="image/x-icon" />
<meta name="description" content="JasperReports, Tutorials, Learning, Beginners, Basics, Environment, Environment setup, Report Designs, Compiling Report Design, Filling Reports, View and Print Reports, Exporting, Parameters, Data Sources, Fields, Expression, Variables, Sections, Groups, Styles, Scriplets, Subreports, Charts, Corsstabs and Internationalization." />
<meta name="keywords" content="JasperReports Creating Charts-  Learning designing and creating JasperReports in simple and easy steps using this beginner's tutorial containing basic to advanced knowledge starting from Environment Setup, Report Designs, Compiling Report Design, Filling Reports, View and Print Reports, Exporting, Parameters, Data Sources, Fields, Expression, Variables, Sections, Groups, Styles, Scriplets, Subreports, Charts, Corsstabs and Internationalization." />
<base  />
<link rel="stylesheet" type="text/css" href="../scripts/style.css" />
<link rel="stylesheet" type="text/css" href="../scripts/prettify.css" />
<script type="text/javascript" src="../scripts/prettify.js"></script>
<style media="screen" type="text/css">
#topmenu a:hover {text-decoration:none;color:#bfc82f  !important;background-color:transparent;font-weight:bold;}
#header{
background:#bfc82f  !important;
}
#topmenu
{
background-color:#298f79 !important;
}
#leftcol ul.menu li.heading
{
background:#bfc82f !important;
border:1px solid #298f79  !important;
}
#leftcol, #middlecol, #rightcol {min-height:1200px; padding:0px;}
</style>
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";urchinTracker();
</script>
</head>
<body onload="prettyPrint()">
<div id="header">
<div class="wrapper">
<h1 class="logo"><a href="../index.htm">Tutorials Point - Simply Easy Learning</a></h1>
<div id="search">
<form method="get" id="searchform" name="searchform" action="http://www.google.com/search" target="_blank">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com"/>
<input type="text" name="as_q" id="s" value="Search this site..." onfocus="if (this.value == 'Search this site...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search this site...';}"/>
<input value="FORID:11" name="cof" type="hidden"/>
<input type="hidden" name="ie" value="ISO-8859-1" />
<input class="submit btn" type="image" src="../images/icon-search.png" alt="Go"/>
</form>
</div>
</div>
</div>
<div id="topmenu">
<div class="wrapper">
<div id="left">
<a href="../index.htm" target="_top">HOME </a>
<a href="../java/index.htm" target="_top">JAVA </a>
<a href="../php/index.htm" target="_top">PHP </a>
<a href="../python/index.htm" target="_top">Python </a>
<a href="../ruby/index.htm" target="_top">Ruby </a>
<a href="../perl/index.htm" target="_top">Perl </a>
<a href="../html/index.htm" target="_top">HTML </a>
<a href="../css/index.htm" target="_top">CSS </a>
<a href="../javascript/index.htm" target="_top">Javascript </a>
<a href="../mysql/index.htm" target="_top">MySQL </a>
<a href="../cplusplus/index.htm" target="_top">C++ </a>
<a href="../unix/index.htm" target="_top">UNIX </a>
<a href="../more.htm" target="_top">MORE...</a>
</div>
<div id="right">
<a href="../references.htm" target="_top">REFERENCES</a> |
<a href="../forums/index.html" target="_top">FORUM</a> |
<a href="../about/index.htm" target="_top">ABOUT</a> |
<a href="../about/contact_us.htm" target="_top">CONTACT</a>
</div>
</div>
</div>
<div class="wrapper">
<div id="leftcol">
<div class="mini-logo">
<img src="../images/jasper-mini-logo.png" alt="JasperReports Tutorial" />
</div>
<ul class="menu">
<li class="heading">JasperReports Tutorial</li>
<li><a target="_top" href="index.htm">Home</a></li>
<li><a target="_top" href="jasper_getting_started.htm">Getting Started</a></li>
<li><a target="_top" href="jasper_environment_setup.htm">Environment Setup</a></li>
<li><a target="_top" href="jasper_report_life_cycle.htm">Report Life Cycle</a></li>
<li><a target="_top" href="jasper_report_designs.htm">Report Designs</a></li>
<li><a target="_top" href="jasper_compiling_report_design.htm">Compiling Report Design</a></li>
<li><a target="_top" href="jasper_filling_reports.htm">Filling Reports</a></li>
<li><a target="_top" href="jasper_view_and_print_reports.htm">View and Print Reports</a></li>
<li><a target="_top" href="jasper_exporting_reports.htm">Exporting Reports</a></li>
<li><a target="_top" href="jasper_report_parameters.htm">Report Parameters</a></li>
<li><a target="_top" href="jasper_report_data_sources.htm">Report Data Sources</a></li>
<li><a target="_top" href="jasper_report_fields.htm">Report Fields</a></li>
<li><a target="_top" href="jasper_report_expression.htm">Report Expression</a></li>
<li><a target="_top" href="jasper_report_variables.htm">Report Variables</a></li>
<li><a target="_top" href="jasper_report_sections.htm">Report Sections</a></li>
<li><a target="_top" href="jasper_report_groups.htm">Report Groups</a></li>
<li><a target="_top" href="jasper_report_fonts.htm">Report Fonts</a></li>
<li><a target="_top" href="jasper_unicode_support.htm">Unicode Support</a></li>
<li><a target="_top" href="jasper_report_styles.htm">Report Styles</a></li>
<li><a target="_top" href="jasper_report_scriptlets.htm">Report Scriptlets</a></li>
<li><a target="_top" href="jasper_create_subreports.htm">Create Subreports</a></li>
<li><a target="_top" href="jasper_creating_charts.htm"><b>Creating Charts</b></a></li>
<li><a target="_top" href="jasper_crosstabs.htm">Crosstabs</a></li>
<li><a target="_top" href="jasper_Internationalization.htm">Internationalization</a></li>
</ul>
<ul class="menu">
<li class="heading">JasperReports Resources</li>
<li><a target="_top" href="jasper_quick_guide.htm">Quick Guide</a></li>
<li><a target="_top" href="jasper_useful_resources.htm">Useful Resources</a></li>
</ul>
<ul class="menu">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="../developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="../computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="../computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div><!-- leftcol -->
<div id="middlecol">
<!-- PRINTING STARTS HERE -->
<div class="content">
<h1>JasperReports - Creating Charts</h1>
<div class="topgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<hr />
<div class="pre-btn">
<a href="jasper_create_subreports.htm">Previous Page</a>
</div>
<div class="nxt-btn">
<a href="jasper_crosstabs.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
<p>Earlier people had to rely on scriptlets to gather the chart data and render the chart using an image element in the report template. JasperReports makes it simple now, as it has a built-in support for charts using the new chart component.</p>
<p>Using the new chart component, user need to apply only the visual settings and define expressions that will help build the chart dataset. JasperReports uses JFreeChart as the underlying charting library. When configuring a new chart component, following three components are involved:</p>
<ul class="list">
<li><p>The overall chart component.</p></li>
<li><p>The chart dataset (which groups chart data-related settings).</p></li>
<li><p>The chart plot (which groups visual settings related to the way the chart items
are rendered).</p></li>
</ul>
<p>JasperReports currently supports the following types of charts: Pie, Pie 3D, Bar, Bar 3D, XY Bar, Stacked Bar, Stacked Bar 3D, Line, XY Line, Area, XY Area, Stacked Area, Scatter, Bubble, Time Series, High-Low-Open-Close, Candlestick, Multiple Axis, Meter, Thermometer and Gantt.</p>
<h2>Chart Properties</h2>
<p>Charts are normal report elements, so they share some of their properties with all the other report elements. There is a JRXML element called <b>&lt;chart&gt;</b>, used to create each type of chart. This element groups special chart-specific settings that apply to all types of charts.</p>

<h3>Chart Sub-Elements</h3>
<p>The sub-elements of &lt;chart&gt; element are:</p>
<ul class="list">
<li><p><b>&lt;reportElement&gt;</b>: These are displayable objects like static texts, text fields, images, lines, and rectangles that you put in your report template sections</p></li>
<li><p><b>&lt;Box&gt;</b>: This element is used to surround charts by a border that's customizable on each side.</p></li>
<li><p><b>&lt;chartTitle&gt;</b>:  This element is used to place the title of the chart. The <i>position</i> attribute decides the title position of the chart in the report. This element has attributes - <b>Position</b> (Values could be <i>Top</i>, <i>Bottom</i>, <i>Left</i>, <i>Right</i>. Deafult value is <i>Top</i>), <b>color</b>. &lt;chartTitle&gt; has <i>font</i> and <i>titleExpression</i> as subelements.</p></li>
<li><p><b>&lt;chartSubtitle&gt;</b>: This element is used to place the subtitle of the chart. This element has attribute - <b>color</b>. &lt;chartSubtitle&gt; has <i>font</i> and <i>subtitleExpression</i> as subelements. </p></li>
<li><p><b>&lt;chartLegend&gt;</b>: The element can control the font-related properties as well as the text color and the background
color of the chart legend using this element. This element has attributes - <b>textColor</b>, <b>backgroundColor</b> </p></li>
<li><p><b>&lt;anchorNameExpression&gt;</b>: This element creates the target for the anchor.</p></li>
<li><p><b>&lt;hyperlinkReferenceExpression&gt;</b>: This element contains a report expression indicating the name of the external resource (usually a URL).</p></li>
<li><p><b>&lt;hyperlinkAnchorExpression&gt;</b>: Hyperlink points to an anchor in an external resource.</p></li>
<li><p><b>&lt;hyperlinkPageExpression&gt;</b>: Hyperlink points to a page in the current report.</p></li>
<li><p><b>&lt;hyperlinkTooltipExpression&gt;</b>: This element controls the ToolTip of hyperlink. The type of the expression should be
<i>java.lang.String</i>.</p></li>
<li><p><b>&lt;hyperlinkParameter&gt;</b>: This element when present generates a final hyperlink depending on the parameter values.</p></li>
</ul>

<h3>Chart attributes</h3>
<p>Attributes in the &lt;chart&gt; element available for all chart types are: </p>

<ul class="list">
<li><p><b>isShowLegend</b>: This attribute is used to determine if a chart legend will be displayed on the report. Values could be <i>true</i>, <i>false</i>. Default value is <i>true</i></p></li>
<li><p><b>evaluationTime</b>: Determines when the chart's expression will be evaluated. Values could be <i>Now</i>, <i>Report</i>, <i> Page</i>, <i>Column</i>, <i>Group</i>, <i>Band</i>. Default value is <i>Now</i>.</p></li>
<li><p><b>evaluationGroup</b>: This attribute determines the name of the group to be used to evaluate the chart's expressions. The value for this attribute must match the name of the group we would like to use as the chart's evaluation group. </p></li>
<li><p><b>hyperlinkType</b>: This attribute can hold any text value. Default value is <i>None</i>. This means neither the text fields nor the images represent hyperlinks, even if the special hyperlink expressions are present. </p></li>
<li><p><b>hyperlinkTarget</b>: This attribute help customize the behavior of the specified link when it is clicked in the viewer. Values could be <i>Self</i>, <i>Blank</i>. Default value is <i>Self</i></p></li>
<li><p><b>bookmarkLevel</b>: This attribute when set to a positive integer, generate bookmarks in reports exported to PDF. Deafult value is <i>0</i>.</p></li>
<li><p><b>customizerClass</b>: This is the name of a class (optional) that can be used to customize the chart. The value for this element must be a String containing the name of a customizer class.</p></li>
</ul>

<h3>Chart customization</h3>
<p>As mentioned above JasperReports uses <i>JFreeChart</i> as the underlying charting library. <i>JFreeChart</i> contains features that are directly not supported by JasperReports. We can take advantage of these features by supplying a customizer class via the <i>customizerClass</i> attribute in &lt;chart&gt; element. A customizer class is nothing but an implementation of the <i>net.sf.jasperreports.engine.JRChartCustomizer</i> interface. The easiest way to implement this interface is by extending the
<i>net.sf.jasperreports.engine.JRAbstractChartCustomizer</i> class and thus having access to parameters, fields, and variables, for more flexible chart customization based on report data.</p>

<h2>Chart Datasets</h2>
<p>One of the common properties across all chart types is <b>&lt;dataset&gt;</b> element. Chart datasets help mapping report data and retrieving chart data at runtime. Each chart type contains different sub-elements to define a chart's expressions that define the data used to generate the chart. All of these sub-elements contain a &lt;dataset&gt; element that defines when the chart's expressions are evaluated and reset.</p>
<p>Several types of chart datasets are available in JasperReports because each type of chart works with certain datasets: Pie, Category, XY, Time Series, Time Period, XYZ, and High-Low. Each of these dataset types implements <i>net.sf.jasperreports.engine.JRChartDataset</i> interface that define chart datasets. All chart datasets initialize and increment in the same way, and differ only in the type of data or data series they map.</p>

<h3>Dataset Properties</h3>
<p>Table below summarizes the attributes of the element &lt;dataset&gt;</p>
<table class="src">
<tr><th>Attribute</th><th>Description</th><th>Values</th></tr>
<tr><td>resetType</td><td>This attribute determines when the value of the chart expression is to be reset.</td><td>None, Report, Page, Column, Group.<br> Default value is <b>Report</b></td></tr>
<tr><td>resetGroup</td><td>this attribute determines the name of the group at which the chart expression value is reset.</td><td>The value for this attribute must match the name of any group declared in the JRXML report template.</td></tr>
<tr><td>incrementType</td><td>This attribute determines when to recalculate the value of the chart expression.</td><td>None, Report, Page, Column, Group.<br> Default value is <b>"None"</b>.</td></tr>
<tr><td>incrementGroup</td><td>This attribute determines the name of the group at which the chart expression is recalculated. </td><td>The value for this attribute must match the name of a group declared in the JRXML report template.</td></tr>
</table>
<p>Table below summarizes the sub elements of the element &lt;dataset&gt;</p>
<table class="src">
<tr><th>Sub element</th><th>Description</th></tr>
<tr><td>&lt;incrementWhenExpression&gt;</td><td>The way a chart dataset is incremented can be customized by filtering out
unwanted data through the use of this sub element.</td></tr>
<tr><td>&lt;datasetRun&gt;</td><td>This contains information required to instantiate a report subdataset.</td></tr>
</table>

<h2>Dataset Types</h2>
<p>Specific dataset types are explained below:</p>
<h3>Pie Dataset</h3>
<p>A pie dataset is characterized by the following expressions:</p>
<ul class="list">
<li><p>&lt;keyExpression&gt; - represent the categories that will make up the slices in the pie chart. This expression can return any java.lang.Comparable object. </p></li>
<li><p>&lt;valueExpression &gt; - produces the values that correspond to each category/key in the dataset. Values are always java.lang.Number objects.</p></li>
<li><p>&lt;labelExpression&gt; - if this expression is missing, the chart will display default labels for each slice in the pie chart. Use this expression, which returns java.lang.String values, to customize the item labels for the pie chart.</p></li>
<li><p>&lt;sectionHyperlink&gt; - sets hyperlinks associated with pie sections.</p></li></ul>

<h3>Category Dataset</h3>
<p>A category dataset is characterized by the &lt;categorySeries &gt; element, which contains:</p>
<ul class="list">
<li><p>&lt;seriesExpression &gt; - indicates the name of the series. This expression can return any java.lang.Comparable object.</p></li>
<li><p>&lt;categoryExpression &gt; - returns the name of the category for each value inside the series specified by the series expression. Categories are java.lang.Comparable objects.</p></li>
<li><p>&lt;valueExpression &gt; - produces the values that correspond to each category in the dataset. Values are always java.lang.Number objects.</p></li>
<li><p>&lt;labelExpression &gt; - if this expression is missing, the chart will display default labels for each item in the chart. Use this expression, which returns java.lang.String values, to customize the item labels for the chart.</p></li>
<li><p>&lt;itemHyperlink &gt; - sets hyperlinks associated with chart items</p></li>
</ul>

<h3>XY Dataset</h3>
<p>An XY dataset is characterized by the &lt;xySeries &gt; element, which contains:</p>
<ul class="list">
<li><p>&lt;seriesExpression &gt; - indicates the name of the series. This expression can return any java.lang.Comparable object.</p></li>
<li><p>&lt;xValueExpression &gt; - returns the java.lang.Number value representing the X value from the (x, y) pair that will be added to the current data series.</p></li>
<li><p>&lt;yValueExpression &gt; - returns the java.lang.Number value representing the Y value from the (x, y) pair that will be added to the current data series.</p></li>
<li><p>&lt;labelExpression &gt; - if this expression is missing, the chart will display default labels for each item in the chart. Use this expression, which returns java.lang.String values, to customize the item labels for the chart.</p></li>
<li><p>&lt;itemHyperlink &gt; - sets hyperlinks associated with chart items.</p></li>
</ul>
<h3>XYZ Dataset</h3>
<p>An XYZ dataset is characterized by the &lt;xyzSeries &gt; element, which contains:</p>
<ul class="list">
<li><p>&lt;seriesExpression &gt; - indicates the name of the series. This expression can return any java.lang.Comparable object.</p></li>
<li><p>&lt;xValueExpression &gt; - returns the java.lang.Number value representing the X value from the (x, y, z) item that will be added to the current data series.</p></li>
<li><p>&lt;yValueExpression &gt; - returns the java.lang.Number value representing the Y value from the (x, y, z) item that will be added to the current data series.</p></li>
<li><p>&lt;zValueExpression &gt; - returns the java.lang.Number value representing the Z value from the (x, y, z) item that will be added to the current data series.</p></li>
<li><p>&lt;labelExpression &gt; - if this expression is missing, the chart will display default labels for each item in the chart. Use this expression, which returns java.lang.String values, to customize the item labels for the chart.</p></li>
<li><p>&lt;itemHyperlink &gt; - sets hyperlinks associated with chart items.</p></li>
</ul>

<h3>Time Series Dataset</h3>
<p>A time series dataset is characterized by the timePeriod attribute, and the &lt;timeSeries &gt; element.
The timePeriod attribute specifies the type of the data series inside the dataset. Time series can contain numeric values associated with days, months, years, or other predefined time periods. Possible values are: <i>Year, Quarter, Month, Week, Day - this is the default value, Hour, Minute, Second, Millisecond.</i></p>
<p>The &lt;timeSeries &gt; element contains:</p>
<ul class="list">
<li><p>&lt;seriesExpression &gt; - indicates the name of the series. This expression can return any java.lang.Comparable object.</p></li>
<li><p>&lt;timePeriodExpression &gt; - returns a java.util.Date value from which the engine will extract the corresponding time period depending on the value set for the timePeriod attribute mentioned above.</p></li>
<li><p>&lt;valueExpression &gt; - returns the java.lang.Number value to associate with the corresponding time period value when incrementing the current series of the dataset.</p></li>
<li><p>&lt;labelExpression &gt; - if this expression is missing, the chart will display default labels for each item in the chart. Use this expression, which returns java.lang.String values, to customize the item labels for the chart.</p></li>
<li><p>&lt;itemHyperlink &gt; - sets hyperlinks associated with chart items.</p></li>
</ul>
<h3>Time Period Dataset</h3>
<p>A time period dataset is characterized by the &lt;timePeriodSeries &gt; element which contains:</p>
<ul class="list">
<li><p>&lt;seriesExpression &gt; - indicates the name of the series. This expression can return any java.lang.Comparable object.</p></li>
<li><p>&lt;startDateExpression &gt; - specifies the beginning of the date interval with which the numeric value will be associated when it is added to the time period series.</p></li>
<li><p>&lt;endDateExpression &gt; - specifies the end of the date interval with which the numeric value will be associated when it is added to the time period series.</p></li>
<li><p>&lt;valueExpression &gt; - returns the java.lang.Number value to associate with the current date interval specified by the start date and end date expressions.</p></li>
<li><p>&lt;labelExpression &gt; - if this expression is missing, the chart will display default labels for each item in the chart. Use this expression, which returns java.lang.String values, to customize the item labels for the chart.</p></li>
<li><p>&lt;itemHyperlink &gt; - sets hyperlinks associated with chart items.</p></li>
</ul>
<h3>High Low Dataset</h3>
<p>A high low dataset is characterized by the following expressions:</p>
<ul class="list">
<li><p>&lt;seriesExpression &gt; - currently only one series is supported inside a High-Low or Candlestick chart. However, this single series must be identified by a java.lang.Comparable value returned by this expression, and it must also be used as the series name in the chart's legend.</p></li>
<li><p>&lt;dateExpression &gt; - returns the date to which the current (high, low, open, close, volume) item refers.</p></li>
<li><p>&lt;highExpression &gt; - returns a java.lang.Number value, which will be part of the data item added to the series when the dataset gets incremented.</p></li>
<li><p>&lt;lowExpression &gt; - returns a java.lang.Number value, which will be part of the data item added to the series when the dataset gets incremented.</p></li>
<li><p>&lt;openExpression &gt; - returns a java.lang.Number value, which will be part of the data item added to the series when the dataset gets incremented.</p></li>
<li><p>&lt;closeExpression &gt; - returns a java.lang.Number value, which will be part of the data item added to the series when the dataset gets incremented.</p></li>
<li><p>&lt;volumeExpression &gt; - a numeric expression that returns the volume value to use for the current data item. It is used only for Candlestick charts.</p></li>
<li><p>&lt;itemHyperlink &gt; - sets hyperlinks associated with chart items.</p></li>
</ul>

<h3>Value Dataset</h3>
<p>This is a special chart dataset implementation that contains a single value and is used for rendering Meter and Thermometer charts. The value is collected using the &lt;valueExpression &gt; expression. </p>
<h2>Chart Plots</h2>
<p>Another common JRXML element through all chart types is the <b>&lt;plot&gt;</b> element. This allows us to define several of chart's characteristics like orientation and background color.  Plots differ based on the type of chart.</p>
<h3>Plot Attribute</h3>
<p>The table below summarizes the attributes of &lt;plot&gt; element.</p>
<table class="src">
<tr><th>Attribute</th><th>Description</th><th>Values</th></tr>
<tr><td>backcolor</td><td>This attribute defines the chart's background color.</td><td>Any six digit hexadecimal value is a valid value for this attribute. The hexadecimal value must be preceded by a #.</td></tr>
<tr><td>orientation</td><td>This attribute defines the chart's orientation.</td><td>Horizontal,Vertical<br> Default value is <b>"Vertical"</b></td></tr>
<tr><td>backgroundAlpha</td><td>This attribute defines the transparency of the chart's background color.</td><td>The valid values for this attribute include any decimal number between 0 and 1, inclusive. The higher the number, the less transparent the background will be.<br>Default value is <b>"1"</b>.</td></tr>
<tr><td>foregroundAlpha</td><td>This attribute defines the transparency of the chart's foreground colors.</td><td>The valid values for this attribute include any decimal number between 0 and 1, inclusive. The higher the number, the less transparent the background will be.<br>Default value is <b>"1"</b>.</td></tr>
<tr><td>labelRotation</td><td>This attribute allows rotation of text labels on x-axis to rotate clockwise or anti-clockwise. This attribute applies only to charts for which the x axis is not numeric or does not display dates.</td><td>Default value is <b>"0.0"</b>.</td></tr>
</table>
<p>The &lt;plot&gt; element has a subelement &lt;seriesColor&gt; whose attributes are: <i>seriesOrder</i> and <i>color</i>. This element customizes colors for series, and their position within in the color sequence. </p>
<p>Specific Settings for Chart Plots</p>

<ul class="list">
<li><p><b>piePlot</b>: It has no specific settings</p></li>
<li><p><b>pie3DPlot</b>: Contains the <i>depthFactor</i> attribute, a numeric value ranging from 0 to 1 that represents the depth of the pie as a percentage of the height of the plot area.</p></li>
<li><p><b>barPlot</b>: One can show or hide tick labels, tick marks or item labels, and provides settings for both axis.</p></li>
<li><p><b>bar3DPlot</b>: provides the same settings as the barPlot, and generates a 3D effect using the xOffset and yOffset attributes.</p></li>
<li><p><b>linePlot</b>: One can show or hide lines connecting item points, can show or hide shapes associated with item points, and provides settings for both axis.</p></li>
<li><p><b>scatterPlot</b>: Similar to the linePlot, it can show or hide lines connecting item points, can show or hide shapes associated with item points, and provides settings for both axis.</p></li>
<li><p><b>areaPlot</b>: Provides settings for both axis.</p></li>
<li><p><b>bubblePlot</b>: One can set the bubble dimensions by setting the scaleType attribute, and provides settings for both axis.</p></li>
<li><p><b>timeSeriesPlot</b>: One can show or hide lines connecting item points, can show or hide shapes associated with item points, and provides settings for both axis.</p></li>
<li><p><b>highLowPlot</b>: One can show or hide open ticks, can show or hide close ticks, and provides settings for both axis.</p></li>
<li><p><b>candlestickPlot</b>: One can show or hide the volume, and provides settings for both axis.</p></li>
<li><p><b>meterPlot</b>: Contains specific settings for the dial shape, scale angle, measurement units, tick interval, dial color, needle color, tick color, value display font, color and format pattern, data range and meter intervals.</p></li>
<li><p><b>thermometerPlot</b>: Contains specific settings for the value location, mercury color, show/hide value lines, value display font, color and format pattern, data range, low range, medium range and high range. </p></li>
<li><p><b>multiAxisChart </b>: Contains specific settings for axis included in the plot</p></li>
</ul>

<h2>Types of Charts</h2>
<p>JasperReports offers built-in support for several chart types. They are listed as below:</p>
<ul class="list">
<li><p><b>pieChart</b>: A combination of a Pie dataset and a Pie plot.</p></li>
<li><p><b>pie3DChart</b>: Groups a Pie dataset and a Pie 3D plot.</p></li>
<li><p><b>barChart</b>: A basic combination of a Category dataset and a Bar plot.</p></li>
<li><p><b>bar3DChart</b>: Wraps a Category dataset and a Bar 3D plot.</p></li>
<li><p><b>xyBarChart</b>: Supports Time Period datasets, Time Series datasets, and XY datasets, and uses a Bar plot to render the axis and the items.</p></li>
<li><p><b>stackedBarChart</b>: Uses data from a Category dataset and renders its content using a Bar plot.</p></li>
<li><p><b>stackedBar3DChart</b>: Uses data from a Category dataset and renders its content using a Bar 3D plot.</p></li>
<li><p><b>lineChart</b>: Groups a Category dataset and a Line plot.</p></li>
<li><p><b>xyLineChart</b>: Groups an XY dataset and a Line plot.</p></li>
<li><p><b>areaChart</b>: Items from a Category dataset are rendered using an Area plot.</p></li>
<li><p><b>stackedAreaChart</b>: Items from a Category dataset are rendered using an Area plot.</p></li>
<li><p><b>xyAreaChart</b>: Uses data from an XY dataset and renders it through an Area plot.</p></li>
<li><p><b>scatterChart</b>: Wraps an XY dataset with a Scatter plot.</p></li>
<li><p><b>bubbleChart </b>: Combines an XYZ dataset with a Bubble plot.</p></li>
<li><p><b>timeSeriesChart </b>: Groups a Time Series dataset and a Time Series plot.</p></li>
<li><p><b>highLowChart </b>: A combination of a High-Low dataset and a High-Low plot.</p></li>
<li><p><b>candlestickChart </b>: Uses data from a High-Low dataset but with a special Candlestick plot.</p></li>
<li><p><b>meterChart </b>: Displays a single value from a Value dataset on a dial, using rendering options from a Meter plot.</p></li>
<li><p><b>thermometerChart </b>: Displays the single value in a Value dataset using rendering options from a Thermometer plot.</p></li>
<li><p><b>multiAxisChart </b>: Contains multiple range axes, all sharing a common domain axis.</p></li>
</ul>

<h2>Example</h2>
<p>To demonstrate the charts, let's write a new report template (jasper_report_template.jrxml). Here we will add the <b>&lt;barChart&gt;</b> element to the &lt;pageHeader&gt; section and <b>&lt;pieChart&gt;</b> to &lt;summary&gt; section. We would be displaying in charts the marks obtained for each subject. Save it to the directory <b>C:\tools\jasperreports-5.0.1\test</b> directory. The contents of the file are as below:</p>
<pre class="prettyprint">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;jasperReport xmlns="http://jasperreports.sourceforge.net/jasperreports"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://jasperreports.sourceforge.net/jasperreports
http://jasperreports.sourceforge.net/xsd/jasperreport.xsd"
name="jasper_report_template" pageWidth="595" pageHeight="860"
columnWidth="515" leftMargin="40" rightMargin="40"
topMargin="50" bottomMargin="50"&gt;

   &lt;field name="subjectName" class="java.lang.String"/&gt;
   &lt;field name="marks" class="java.lang.Integer"/&gt;
   &lt;variable name="countNumber" class="java.lang.Integer"
      calculation="Count"&gt;
      &lt;variableExpression&gt;
         &lt;![CDATA[Boolean.TRUE]]&gt;
      &lt;/variableExpression&gt;
      &lt;/variable&gt;
   &lt;background&gt;
      &lt;band splitType="Stretch"/&gt;
   &lt;/background&gt;
   &lt;title&gt;
      &lt;band height="79" splitType="Stretch"/&gt;
   &lt;/title&gt;
   &lt;pageHeader&gt;
   &lt;band height="200"&gt;
   &lt;barChart&gt;
      &lt;chart evaluationTime="Report"&gt;
         &lt;reportElement x="0" y="0" width="555" height="200"/&gt;
         &lt;chartTitle&gt;
            &lt;titleExpression&gt;
               &lt;![CDATA["My First JR Bar Chart"]]&gt;
            &lt;/titleExpression&gt;
         &lt;/chartTitle&gt;
      &lt;/chart&gt;
      &lt;categoryDataset&gt;
         &lt;dataset incrementType="None"/&gt;
         &lt;categorySeries&gt;
            &lt;seriesExpression&gt;
               &lt;![CDATA[$F{subjectName}]]&gt;
            &lt;/seriesExpression&gt;
            &lt;categoryExpression&gt;
               &lt;![CDATA[$F{subjectName}]]&gt;
            &lt;/categoryExpression&gt;
            &lt;valueExpression&gt;
               &lt;![CDATA[$F{marks}]]&gt;
            &lt;/valueExpression&gt;

         &lt;/categorySeries&gt;
      &lt;/categoryDataset&gt;
      &lt;barPlot isShowTickMarks="false"&gt;
         &lt;plot/&gt;
      &lt;/barPlot&gt;
   &lt;/barChart&gt;
   &lt;/band&gt;

   &lt;/pageHeader&gt;
   &lt;columnHeader&gt;
      &lt;band height="20" splitType="Stretch"/&gt;
   &lt;/columnHeader&gt;
   &lt;detail&gt;
      &lt;band height="20" splitType="Stretch"/&gt;
   &lt;/detail&gt;
   &lt;columnFooter&gt;
      &lt;band height="20" splitType="Stretch"/&gt;
   &lt;/columnFooter&gt;
   &lt;pageFooter&gt;
      &lt;band height="20" splitType="Stretch"/&gt;
   &lt;/pageFooter&gt;
   &lt;summary&gt;
      &lt;band height="400" splitType="Stretch"&gt;
      &lt;pieChart&gt;
         &lt;chart evaluationTime="Report"&gt;
            &lt;reportElement x="135" y="0" width="270" height="300"/&gt;
            &lt;chartTitle&gt;
            &lt;titleExpression&gt;
               &lt;![CDATA["My First JR Pie Chart"]]&gt;
            &lt;/titleExpression&gt;
            &lt;/chartTitle&gt;
            &lt;/chart&gt;
         &lt;pieDataset&gt;
            &lt;dataset incrementType="None"/&gt;
            &lt;keyExpression&gt;
               &lt;![CDATA[$F{subjectName}]]&gt;
            &lt;/keyExpression&gt;
            &lt;valueExpression&gt;
               &lt;![CDATA[$F{marks}]]&gt;
            &lt;/valueExpression&gt;
         &lt;/pieDataset&gt;
         &lt;piePlot&gt;
            &lt;plot/&gt;
            &lt;itemLabel/&gt;
         &lt;/piePlot&gt;
      &lt;/pieChart&gt;
      &lt;/band&gt;
   &lt;/summary&gt;
&lt;/jasperReport&gt;
</pre>
<p>The details of the above file are as below:</p>
<ul class="list">
<li><p>The JRXML element used to create a bar chart is &lt;/barChart&gt; in the  &lt;pageHeader&gt;. It contains a &lt;/chart&gt; sub-element, which contains a &lt;reportElement&gt; sub-element defining the chart's dimensions and position.</p></li>
<li><p>The <dataset> element in a bar chart must be enclosed between &lt;categoryDataset&gt; and &lt;/categoryDataset&gt; JRXML elements.</p></li>
<li><p>&lt;categoryDataset&gt; must contain a &lt;categorySeries&gt; element. This element defines what data element the bars will represent (subject names, in this example).</p></li>
<li><p>&lt;categoryDataset&gt; must also contain a <categoryExpression> element, which defines how the data will be separated into categories for comparison. Here data is separated by subject names. </p></li>
<li><p>The &lt;valueExpression&gt; element defines what expression to use to determine the value of each bar in the chart. Here we are using "marks".</p></li>
<li><p>For the pie chart, we have used the element &lt;pieChart&gt; under the &lt;summary&gt; section. It contains a &lt;/chart&gt; sub-element.</p></li>
<li><p>The <keyExpression> sub-element contains a report expression indicating what to use as a key in the chart. Here we have used subjectName.</p></li>
<li><p>The <valueExpression> sub-element contains an expression used to calculate the value for the key. Here we have used marks.</p></li>
</ul>
<p>The java codes for report filling remains unchanged. The contents of the file <b>C:\tools\jasperreports-5.0.1\test\src\com\tutorialspoint\JasperReportFill.java</b> are as below.</p>
<pre class="prettyprint">
package com.tutorialspoint;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;

public class JasperReportFill {
   @SuppressWarnings("unchecked")
   public static void main(String[] args) {
      String sourceFileName =
      "C://tools/jasperreports-5.0.1/test/jasper_report_template.jasper";

      DataBeanList DataBeanList = new DataBeanList();
      ArrayList&lt;DataBean&gt; dataList = DataBeanList.getDataBeanList();

      JRBeanCollectionDataSource beanColDataSource =
      new JRBeanCollectionDataSource(dataList);

      Map parameters = new HashMap();

      try {
         JasperFillManager.fillReportToFile(
         sourceFileName, parameters, beanColDataSource);
      } catch (JRException e) {
         e.printStackTrace();
      }
   }
}
</pre>
<p>As we would be displaying the marks obtained for each subject, POJO needs to be changed. The file <b>C:\tools\jasperreports-5.0.1\test\src\com\tutorialspoint\DataBean.java</b> contents are as below:</p>
<pre class="prettyprint">
package com.tutorialspoint;

public class DataBean {
   private String subjectName;
   private Integer marks;

   public String getSubjectName() {
      return subjectName;
   }

   public void setSubjectName(String subjectName) {
      this.subjectName = subjectName;
   }

   public Integer getMarks() {
      return marks;
   }

   public void setMarks(Integer marks) {
      this.marks = marks;
   }

}
</pre>
<p>Even the contents of the file <b>C:\tools\jasperreports-5.0.1\test\src\com\tutorialspoint\DataBeanList.java</b> need to be updated as below:</p>
<pre class="prettyprint">
package com.tutorialspoint;

import java.util.ArrayList;

public class DataBeanList {
   public ArrayList<DataBean> getDataBeanList() {
      ArrayList<DataBean> dataBeanList = new ArrayList<DataBean>();

      dataBeanList.add(produce("English", 58));
      dataBeanList.add(produce("SocialStudies", 68));
      dataBeanList.add(produce("Maths", 38));
      dataBeanList.add(produce("Hindi", 88));
      dataBeanList.add(produce("Scince", 78));
      return dataBeanList;
   }

   /*
    * This method returns a DataBean object, with subjectName ,
    * and marks set in it.
    */
   private DataBean produce(String subjectName, Integer marks) {
      DataBean dataBean = new DataBean();

      dataBean.setSubjectName(subjectName);
      dataBean.setMarks(marks);

      return dataBean;
   }
}
</pre>
<h2>Report Generation</h2>
<p>Next, let's compile and execute the above files using our regular ANT build process. The contents of the file build.xml (saved under directory C:\tools\jasperreports-5.0.1\test) are as below.
<blockquote>The import file - baseBuild.xml is picked from chapter <a href="jasper_environment_setup.htm">Environment Setup</a> and should be placed in the same directory as the build.xml.</blockquote>
<pre class="prettyprint">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;project name="JasperReportTest" default="viewFillReport" basedir="."&gt;
   &lt;import file="baseBuild.xml" /&gt;
   &lt;target name="viewFillReport"
      depends="compile,compilereportdesing,run"
      description="Launches the report viewer to preview
      the report stored in the .JRprint file."&gt;
      &lt;java classname="net.sf.jasperreports.view.JasperViewer"
      fork="true"&gt;
         &lt;arg value="-F${file.name}.JRprint" /&gt;
         &lt;classpath refid="classpath" /&gt;
      &lt;/java&gt;
   &lt;/target&gt;
   &lt;target name="compilereportdesing"
      description="Compiles the JXML file and
      produces the .jasper file."&gt;
      &lt;taskdef name="jrc"
      classname="net.sf.jasperreports.ant.JRAntCompileTask"&gt;
         &lt;classpath refid="classpath" /&gt;
      &lt;/taskdef&gt;
      &lt;jrc destdir="."&gt;
         &lt;src&gt;
         &lt;fileset dir="."&gt;
            &lt;include name="*.jrxml" /&gt;
         &lt;/fileset&gt;
         &lt;/src&gt;
         &lt;classpath refid="classpath" /&gt;
      &lt;/jrc&gt;
   &lt;/target&gt;
&lt;/project&gt;
</pre>
<p>Next, let's open command line window and go to the directory where build.xml is placed. Finally execute the command <b>ant -Dmain-class=com.tutorialspoint.JasperReportFill</b> (viewFullReport is the default target) as follows:</p>
<pre class="result">
C:\tools\jasperreports-5.0.1\test>ant -Dmain-class=com.tutorialspoint.JasperReportFill
Buildfile: C:\tools\jasperreports-5.0.1\test\build.xml

clean-sample:
   [delete] Deleting directory C:\tools\jasperreports-5.0.1\test\classes
   [delete] Deleting: C:\tools\jasperreports-5.0.1\test\jasper_report_template.jasper
   [delete] Deleting: C:\tools\jasperreports-5.0.1\test\jasper_report_template.jrprint

compile:
    [mkdir] Created dir: C:\tools\jasperreports-5.0.1\test\classes
    [javac] C:\tools\jasperreports-5.0.1\test\baseBuild.xml:28:
    warning: 'includeantruntime' was not set, defaulting to bu
    [javac] Compiling 3 source files to C:\tools\jasperreports-5.0.1\test\classes

compilereportdesing:
      [jrc] Compiling 1 report design files.
      [jrc] log4j:WARN No appenders could be found for logger
      (net.sf.jasperreports.engine.xml.JRXmlDigesterFactory).
      [jrc] log4j:WARN Please initialize the log4j system properly.
      [jrc] log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
      [jrc] File : C:\tools\jasperreports-5.0.1\test\jasper_report_template.jrxml ... OK.

run:
     [echo] Runnin class : com.tutorialspoint.JasperReportFill
     [java] log4j:WARN No appenders could be found for logger
     (net.sf.jasperreports.extensions.ExtensionsEnvironment).
     [java] log4j:WARN Please initialize the log4j system properly.

viewFillReport:
     [java] log4j:WARN No appenders could be found for logger
     (net.sf.jasperreports.extensions.ExtensionsEnvironment).
     [java] log4j:WARN Please initialize the log4j system properly.

BUILD SUCCESSFUL
Total time: 19 minutes 45 seconds
</pre>
<p>As a result of above compilation, a JasperViewer window opens up as in the screen below:</p>
<img src="images/report_bar_chart_example.jpg" alt="Jasper Bar  Chart" />
<img src="images/report_pie_chart_example.jpg" alt="Jasper Pie Chart" />
<p>Here we see that the bar chart is created in the pageheader and the pie chart is created in the summary sections.</p>


<hr />
<div class="pre-btn">
<a href="jasper_create_subreports.htm">Previous Page</a>
</div>
<div class="print-btn">
<a href="../cgi-bin/printpage.html" target="_blank">Print Version</a>
</div>
<div class="pdf-btn">
<a href="pdf/jasper_creating_charts.pdf" alt="JasperReports - Creating Charts" target="_blank">PDF Version</a>
</div>
<div class="nxt-btn">
<a href="jasper_crosstabs.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
</div>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</div>
</div><!-- middlecol -->
<div id="rightcol">
<!-- AddThis Button BEGIN -->
<div class="addthis">
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook"></a>
<a class="addthis_button_twitter"></a>
<script type="text/javascript">
<!--
 document.write('<a class="addthis_button_google_plusone" g:plusone:count="false"></a>');
//-->
</script>
<a class="addthis_button_linkedin"></a>
<a class="addthis_button_email"></a>
<a class="addthis_button_compact"></a>
</div>
<script type="text/javascript" src="../../s7.addthis.com/js/250/addthis_widget.js#pubid=ra-4f661ec623a400f0"></script>
</div>
<!-- AddThis Button END -->
<div class="localad">
<a rel="nofollow" href="http://www.modernindianbabynames.com/" target="_blank" title="Modern Baby Names">Modern Baby Names</a>
</div>
<div class="localad">
<a rel="nofollow" href="http://www.photofuntoos.com/" target="_blank" title="Online Photo Editing">Online Photo Editing</a>
</div>
<div class="rightgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
</div><!-- rightcol -->
<div style="clear:both;"></div>
</div><!-- wrapper -->
<div id="footer">
<div class="wrapper">
<div id="bottommenu">
<a href="../asp.net/index.htm" target="_top">ASP.NET </a> |
<a href="../jquery/index.htm" target="_top">jQuery </a> |
<a href="../ajax/index.htm" target="_top">AJAX </a> |
<a href="../ant/index.htm" target="_top">ANT</a> |
<a href="index.htm" target="_top">iOS </a> |
<a href="../servlets/index.htm" target="_top">Servlets </a> |
<a href="../log4j/index.htm" target="_top">log4j </a> |
<a href="../ibatis/index.htm" target="_top">iBATIS </a> |
<a href="../hibernate/index.htm" target="_top">Hibernate </a> |
<a href="../jdbc/index.htm" target="_top">JDBC </a> |
<a href="../struts_2/index.htm" target="_top">Struts </a> |
<a href="../html5/index.htm" target="_top">HTML5 </a> |
<a href="../sql/index.htm" target="_top">SQL </a> |
<a href="../mysql/index.htm" target="_top">MySQL </a> |
<a href="../cplusplus/index.htm" target="_top">C++ </a> |
<a href="../unix/index.htm" target="_top">UNIX </a>
</div>
<div id="copyright">
<p>Copyright &copy; 2012 by tutorialspoint. All Rights Reserved.</p>
</div>
</div>
</div>
</body>

<!-- Mirrored from www.tutorialspoint.com/jasper_reports/jasper_creating_charts.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 21:18:33 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>
