<!doctype html> 
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--><html lang="en"><!--<![endif]-->

<!-- Mirrored from www.tutorialspoint.com/mysql/mysql-numeric-functions.htm by HTTrack Website Copier/3.x [XR&CO'2010], Mon, 15 Apr 2013 05:03:56 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="utf-8">
<title>MySQL Numeric Functions</title>
<link rel="shortcut icon" href="../favicon.png" type="image/x-icon" />
<meta name="Keywords" content="Learning, MySQL, Programming, Database, Clauses, Commands, Functions, Administration, Queries, Simple, Steps, Basic, Advanced, Concepts" />
<meta name="description" content="MySQL Numeric Functions - Learn MySQL from basic to advanced convering database programming clauses command functions administration queries and usgae alongwith PHP in simple steps. This tutorial takes you starting from basic to advance MySQL concepts." />
<base  />
<link rel="stylesheet" type="text/css" href="../scripts/style.css" />
<link rel="stylesheet" type="text/css" href="../scripts/prettify.css" />
<script type="text/javascript" src="../scripts/prettify.js"></script>
<style media="screen" type="text/css">
/* MySQL Scheme */
#topmenu a:link {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#topmenu a:visited {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#topmenu a:hover {text-decoration:none;color:#e0b50c !important;background-color:transparent;font-weight:bold;}
#header{ 
background:#F0CD45 !important;
}
#topmenu
{
background-color:#00618a !important;
}
#leftcol ul.menu li.heading 
{
background:#F0CD45 !important;
border:1px solid #00618a !important;
}
#leftcol, #middlecol, #rightcol {min-height:1250px; padding:0px;}
</style>
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
</script>
</head>
<body onload="prettyPrint()">
<div id="header">
<div class="wrapper">
<h1 class="logo"><a href="../index-2.html">Tutorials Point - Simply Easy Learning</a></h1>
<div id="search">
<form method="get" id="searchform" name="searchform" action="http://www.google.com/search" target="_blank">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com"/>
<input type="text" name="as_q" id="s" value="Search this site..." onfocus="if (this.value == 'Search this site...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search this site...';}"/>
<input value="FORID:11" name="cof" type="hidden"/>
<input type="hidden" name="ie" value="ISO-8859-1" />
<input class="submit btn" type="image" src="../images/icon-search.png" alt="Go"/>
</form>
</div>
</div>
</div>
<div id="topmenu">
<div class="wrapper">
<div id="left">
<a href="../index-2.html" target="_top">HOME </a>
<a href="../java/index.html" target="_top">JAVA </a>
<a href="../php/index.html" target="_top">PHP </a>
<a href="../python/index.html" target="_top">Python </a>
<a href="../ruby/index.html" target="_top">Ruby </a>
<a href="../perl/index.html" target="_top">Perl </a>
<a href="../html/index.html" target="_top">HTML </a>
<a href="../css/index.html" target="_top">CSS </a>
<a href="../javascript/index.html" target="_top">Javascript </a>
<a href="index.html" target="_top">MySQL </a>
<a href="../cplusplus/index.html" target="_top">C++ </a>
<a href="../unix/index.html" target="_top">UNIX </a>
<a href="../more.html" target="_top">MORE...</a>
</div>
<div id="right">
<a href="../references.html" target="_top">REFERENCES</a> |
<a href="../forums/index.html" target="_top">FORUM</a> |
<a href="../about/index.html" target="_top">ABOUT</a> |
<a href="../about/contact_us.html" target="_top">CONTACT</a>
</div>
</div>
</div>
<div class="wrapper">
<div id="leftcol">
<div class="mini-logo">
<img src="../images/mysql-mini-logo.png" alt="MySQL Tutorial" />
</div>
<ul class="menu">
<li class="heading">Learn MySQL</li>
<li><a target="_top" href="index.html">MySQL Home</a></li>
<li><a target="_top" href="mysql-introduction.html">MySQL Introduction</a></li>
<li><a target="_top" href="mysql-installation.html">MySQL Installation</a></li>
<li><a target="_top" href="mysql-administration.html" >MySQL Administration</a></li>
<li><a target="_top" href="mysql-php-syntax.html">MySQL PHP Syntax</a></li>
<li><a target="_top" href="mysql-connection.html">MySQL Connection</a></li>
<li><a target="_top" href="mysql-create-database.html">MySQL Create Database</a></li>
<li><a target="_top" href="mysql-drop-database.html">MySQL Drop Database</a></li>
<li><a target="_top" href="mysql-select-database.html">MySQL Select Database</a></li>
<li><a target="_top" href="mysql-data-types.html">MySQL Data Types</a></li>
<li><a target="_top" href="mysql-create-tables.html">MySQL Create Tables</a></li>
<li><a target="_top" href="mysql-drop-tables.html">MySQL Drop Tables</a></li>
<li><a target="_top" href="mysql-insert-query.html">MySQL Insert Query</a></li>
<li><a target="_top" href="mysql-select-query.html">MySQL Select Query</a></li>
<li><a target="_top" href="mysql-where-clause.html">MySQL Where Clause</a></li>
<li><a target="_top" href="mysql-update-query.html">MySQL Update Query</a></li>
<li><a target="_top" href="mysql-delete-query.html">MySQL Delete Query</a></li>
<li><a target="_top" href="mysql-like-clause.html">MySQL Like Clause</a></li>
<li><a target="_top" href="mysql-sorting-results.html">MySQL Sorting Results</a></li>
<li><a target="_top" href="mysql-using-joins.html">MySQL Using Join</a></li>
<li><a target="_top" href="mysql-null-values.html">MySQL NULL Values</a></li>
<li><a target="_top" href="mysql-regexps.html">MySQL Regexps</a></li>
<li><a target="_top" href="mysql-transactions.html">MySQL Transactions</a></li>
<li><a target="_top" href="mysql-alter-command.html">MySQL Alter Command</a></li>
<li><a target="_top" href="mysql-indexes.html">MySQL Indexes</a></li>
<li><a target="_top" href="mysql-temporary-tables.html">MySQL Temporary Tables</a></li>
<li><a target="_top" href="mysql-clone-tables.html">MySQL Clone Tables</a></li>
<li><a target="_top" href="mysql-database-info.html">MySQL Database Info</a></li>
<li><a target="_top" href="mysql-using-sequences.html">MySQL Using Sequences</a></li>
<li><a target="_top" href="mysql-handling-duplicates.html">MySQL Handling Duplicates</a></li>
<li><a target="_top" href="mysql-sql-injection.html">MySQL SQL Injection</a></li>
<li><a target="_top" href="mysql-database-export.html">MySQL Database Export</a></li>
<li><a target="_top" href="mysql-database-import.html">MySQL Database Import</a></li>
</ul>
<ul class="menu">
<li class="heading">MySQL Useful Resources</li>
<li><a target="_top" href="mysql-useful-functions.html"><b>MySQL Useful Functions</b></a></li>
<li><a target="_top" href="mysql-useful-resources.html">MySQL Useful Resources</a></li>
</ul>
<ul class="menu">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="../developers_best_practices/index.html">Developer's Best Practices</a></li>
<li><a target="_top" href="../computer_glossary.html">Computer Glossary</a></li>
<li><a target="_top" href="../computer_whoiswho.html">Who is Who</a></li>
</ul>
</div><!-- leftcol -->
<div id="middlecol">
<!-- PRINTING STARTS HERE -->
<div class="content">
<h1>MySQL Numeric Functions</h1>
<div class="topgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
<hr />
<div class="pre-btn">
<a href="mysql-useful-functions.html">Previous Page</a>
</div>
<div class="nxt-btn">
<a href="mysql-useful-functions.html">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
<p>MySQL numeric functions are used primarily for numeric manipulation and/or mathematical calculations. The following table details the numeric functions that are available in the MySQL implementation.</p>
<table class="src">
<tr>
<th><strong>Name</strong></span></th>
<th><strong>Description</strong></th>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_abs">ABS()</a></td>
<td>Returns the absolute value of numeric expression.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_acos">ACOS()</a></td>
<td>Returns the arccosine of numeric expression. Returns NULL if the value is not in the range -1 to 1.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_asin">ASIN()</a></td>
<td>Returns the arcsine of numeric expression. Returns NULL if value is not in the range -1 to 1</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_atan">ATAN()</a></td>
<td>Returns the arctangent of numeric expression.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_atan2">ATAN2()</a></td>
<td>Returns the arctangent of the two variables passed to it.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_bit_and">BIT_AND()</a></td>
<td>Returns the bitwise AND all the bits in expression.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_bit_count">BIT_COUNT()</a></td>
<td>Returns the string representation of the binary value passed to it.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_bit_or">BIT_OR()</a></td>
<td>Returns the bitwise OR of all the bits in the passed expression.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_ceil">CEIL()</a></td>
<td>Returns the smallest integer value that is not less than passed numeric expression</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_ceiling">CEILING()</a></td>
<td>Returns the smallest integer value that is not less than passed numeric expression</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_conv">CONV()</a></td>
<td>Convert numeric expression from one base to another.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_cos">COS()</a></td>
<td>Returns the cosine  of passed numeric expression. The numeric expression should be expressed in radians.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_cot">COT()</a></td>
<td>Returns the cotangent  of passed numeric expression.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_degrees">DEGREES()</a></td>
<td>Returns numeric expression converted from radians to degrees.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_exp">EXP()</a></td>
<td>Returns the base of the natural logarithm (e) raised to the power of passed numeric expression.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_floor">FLOOR()</a></td>
<td>Returns the largest integer value that is not greater than passed numeric expression.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_format">FORMAT()</a></td>
<td>Returns a numeric expression rounded  to a number of  decimal places.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_greatest">GREATEST()</a></td>
<td>Returns the largest value of the input expressions.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_interval">INTERVAL()</a></td>
<td>Takes multiple expressions exp1, exp2 and exp3 so on.. and returns 0 if exp1 is less than exp2, returns 1 if exp1 is less than exp3 and so on.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_least">LEAST()</a></td>
<td>Returns the minimum-valued input when given two or more.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_least">LOG()</a></td>
<td>Returns the natural logarithm of the passed numeric expression.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_log10">LOG10()</a></td>
<td>Returns the base-10 logarithm of the passed numeric expression.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_mod">MOD()</a></td>
<td>Returns the remainder of one expression by diving by another expression.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_oct">OCT()</a></td>
<td>Returns the string representation of the octal value of the passed numeric expression. Returns NULL if passed value is NULL.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_pi">PI()</a></td>
<td>Returns the value of pi</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_pow">POW()</a></td>
<td>Returns the value of one expression raised to the power of another expression</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_power">POWER()</a></td>
<td>Returns the value of one expression raised to the power of another expression</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_radians">RADIANS()</a></td>
<td>Returns the value of passed expression converted from degrees to radians.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_round">ROUND()</a></td>
<td>Returns numeric expression rounded to an integer. Can be used to round an expression to a number of decimal points</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_round">SIN()</a></td>
<td>Returns the sine of numeric expression given in radians.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_sqrt">SQRT()</a></td>
<td>Returns the non-negative square root of numeric expression.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_std">STD()</a></td>
<td>Returns the standard deviation of the numeric expression.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_stddev">STDDEV()</a></td>
<td>Returns the standard deviation of the numeric expression.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_tan">TAN()</a></td>
<td>Returns the tangent of numeric expression expressed in radians.</td>
</tr>
<tr>
<td><a href="mysql-numeric-functions.htm#function_truncate">TRUNCATE()</a></td>
<td>Returns numeric exp1 truncated to exp2 decimal places. If exp2 is 0, then the result will have no decimal point.</td>
</tr>
</table>
<br />
<a name="function_abs"></a>
<h2>ABS(X)</h2>
<p>The ABS() function returns the absolute value of X. Consider the following example:</p>
<pre class="prettyprint">
mysql&gt; SELECT ABS(2);
+---------------------------------------------------------+
| ABS(2)                                                  |
+---------------------------------------------------------+
| 2                                                       |
+---------------------------------------------------------+
1 row in set (0.00 sec)

mysql&gt; SELECT ABS(-2);
+---------------------------------------------------------+
| ABS(2)                                                  |
+---------------------------------------------------------+
| 2                                                       |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_acos"></a>
<h2>ACOS(X)</h2>
<p>This function returns the arccosine of X. The value of X must range between .1 and 1 or NULL will be returned. Consider the following example:</p>
<pre class="prettyprint">
mysql&gt; SELECT ACOS(1);
+---------------------------------------------------------+
| ACOS(1)                                                 |
+---------------------------------------------------------+
| 0.000000                                                |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_asin"></a>
<h2>ASIN(X)</h2>
<p>The ASIN() function returns the arcsine of X. The value of X must be in the range of .1 to 1 or NULL is returned.</p>
<pre class="prettyprint">
mysql&gt; SELECT ASIN(1);
+---------------------------------------------------------+
| ASIN(1)                                                 |
+---------------------------------------------------------+
| 1.5707963267949                                         |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_atan"></a>
<h2>ATAN(X)</h2>
<p>This function returns the arctangent of X.</p>
<pre class="prettyprint">
mysql&gt; SELECT ATAN(1);
+---------------------------------------------------------+
| ATAN(1)                                                 |
+---------------------------------------------------------+
| 0.78539816339745                                        |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_atan2"></a>
<h2>ATAN2(Y,X)</h2>
<p>This function returns the arctangent of the two arguments: X and Y. It is similar to the arctangent of Y/X, except that the signs of both are used to find the quadrant of the result.</p>
<pre class="prettyprint">
mysql&gt; SELECT ATAN2(3,6);
+---------------------------------------------------------+
| ATAN2(3,6)                                              |
+---------------------------------------------------------+
| 0.46364760900081                                        |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_bit_and"></a>
<h2>BIT_AND(expression)</h2>
<p>The BIT_AND function returns the bitwise AND of all bits in expression. The basic premise is that if two corresponding bits are the same, then a bitwise AND operation will return 1, while if they are different, a bitwise AND operation will return 0. The function itself returns a 64-bit integer value. If there are no matches, then it will return 18446744073709551615. The following example performs the BIT_AND function on the PRICE column grouped by the MAKER of the car:</p>
<pre class="prettyprint">
mysql&gt; SELECT 
          MAKER, BIT_AND(PRICE) BITS
          FROM CARS GROUP BY MAKER
+---------------------------------------------------------+
|MAKER           BITS                                     |
+---------------------------------------------------------+
|CHRYSLER        512                                      |
|FORD            12488                                    |
|HONDA           2144                                     |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_bit_count"></a>
<h2>BIT_COUNT(numeric_value)</h2>
<p>The BIT_COUNT() function returns the number of bits that are active in numeric_value. The following example demonstrates using the BIT_COUNT() function to return the number of active bits for a range of numbers:</p>
<pre class="prettyprint">
mysql&gt; SELECT
          BIT_COUNT(2) AS TWO,
          BIT_COUNT(4) AS FOUR,
          BIT_COUNT(7) AS SEVEN
+-----+------+-------+
| TWO | FOUR | SEVEN |
+-----+------+-------+
|   1 |    1 |     3 |
+-----+------+-------+
1 row in set (0.00 sec)
</pre>
<a name="function_bit_or"></a>
<h2>BIT_OR(expression)</h2>
<p>The BIT_OR() function returns the bitwise OR of all the bits in expression. The basic premise of the bitwise
OR function is that it returns 0 if the corresponding bits match, and 1 if they do not. The function returns a
64-bit integer, and, if there are no matching rows, then it returns 0. The following example performs the
BIT_OR() function on the PRICE column of the CARS table, grouped by the MAKER:</p>
<pre class="prettyprint">
mysql&gt; SELECT 
          MAKER, BIT_OR(PRICE) BITS
          FROM CARS GROUP BY MAKER
+---------------------------------------------------------+
|MAKER           BITS                                     |
+---------------------------------------------------------+
|CHRYSLER        62293                                    |
|FORD            16127                                    |
|HONDA           32766                                    |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_ceil"></a>
<a name="function_ceiling"></a>
<h2>CEIL(X)</h2>
<h2>CEILING(X)</h2>
<p>These function return the smallest integer value that is not smaller than X. Consider the following example:</p>
<pre class="prettyprint">
mysql&gt; SELECT CEILING(3.46);
+---------------------------------------------------------+
| CEILING(3.46)                                           |
+---------------------------------------------------------+
| 4                                                       |
+---------------------------------------------------------+
1 row in set (0.00 sec)

mysql&gt; SELECT CEIL(-6.43);
+---------------------------------------------------------+
| CEIL(-6.43)                                             |
+---------------------------------------------------------+
| -6                                                      |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_conv"></a>
<h2>CONV(N,from_base,to_base)</h2>
<p>The purpose of the CONV() function is to convert numbers between different number bases. The function returns a string of the value N converted from from_base to to_base. The minimum base value is 2 and the maximum is 36. If any of the arguments are NULL, then the function returns NULL. Consider the following example, which converts the number 5 from base 16 to base 2:</p>
<pre class="prettyprint">
mysql&gt; SELECT CONV(5,16,2);
+---------------------------------------------------------+
| CONV(5,16,2)                                            |
+---------------------------------------------------------+
| 101                                                     |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_cos"></a>
<h2>COS(X)</h2>
<p>This function returns the cosine of X. The value of X is given in radians.</p>
<pre class="prettyprint">
mysql&gt;SELECT COS(90);
+---------------------------------------------------------+
| COS(90)                                                 |
+---------------------------------------------------------+
| -0.44807361612917                                       |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_cot"></a>
<h2>COT(X)</h2>
<p>This function returns the cotangent of X. Consider the following example:</p>
<pre class="prettyprint">
mysql&gt;SELECT COT(1);
+---------------------------------------------------------+
| COT(1)                                                  |
+---------------------------------------------------------+
| 0.64209261593433                                        |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_degrees"></a>
<h2>DEGREES(X)</h2>
<p>This function returns the value of X converted from radians to degrees.</p>
<pre class="prettyprint">
mysql&gt;SELECT DEGREES(PI());
+---------------------------------------------------------+
| DEGREES(PI())                                           |
+---------------------------------------------------------+
| 180.000000                                              |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_exp"></a>
<h2>EXP(X)</h2>
<p>This function returns the value of e (the base of the natural logarithm) raised to the power of X.</p>
<pre class="prettyprint">
mysql&gt;SELECT EXP(3);
+---------------------------------------------------------+
| EXP(3)                                                  |
+---------------------------------------------------------+
| 20.085537                                               |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_floor"></a>
<h2>FLOOR(X)</h2>
<p>This function returns the largest integer value that is not greater than X.</p>
<pre class="prettyprint">
mysql&gt;SELECT FLOOR(7.55);
+---------------------------------------------------------+
| FLOOR(7.55)                                             |
+---------------------------------------------------------+
| 7                                                       |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_format"></a>
<h2>FORMAT(X,D)</h2>
<p>The FORMAT() function is used to format the number X in the following format: ###,###,###.## truncated
to D decimal places. The following example demonstrates the use and output of the FORMAT() function:</p>
<pre class="prettyprint">
mysql&gt;SELECT FORMAT(423423234.65434453,2);
+---------------------------------------------------------+
| FORMAT(423423234.65434453,2)                            |
+---------------------------------------------------------+
| 423,423,234.65                                          |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_greatest"></a>
<h2>GREATEST(n1,n2,n3,..........)</h2>
<p>The GREATEST() function returns the greatest value in the set of input parameters (n1, n2, n3, a nd so on). The following example uses the GREATEST() function to return the largest number from a set of numeric values:</p>
<pre class="prettyprint">
mysql&gt;SELECT GREATEST(3,5,1,8,33,99,34,55,67,43);
+---------------------------------------------------------+
| GREATEST(3,5,1,8,33,99,34,55,67,43)                     |
+---------------------------------------------------------+
| 99                                                      |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_interval"></a>
<h2>INTERVAL(N,N1,N2,N3,..........)</h2>
<p>The INTERVAL() function compares the value of N to the value list (N1, N2, N3, and so on ). The function returns 0 if N &lt; N1, 1 if N &lt; N2, 2 if N &lt;N3, and so on. It will return .1 if N is NULL. The value list must be in the form N1 &lt; N2 &lt; N3 in order to work properly. The following code is a simple example of how the INTERVAL() function works:</p>
<pre class="prettyprint">
mysql&gt;SELECT INTERVAL(6,1,2,3,4,5,6,7,8,9,10);
+---------------------------------------------------------+
| INTERVAL(6,1,2,3,4,5,6,7,8,9,10)                        |
+---------------------------------------------------------+
| 6                                                       |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_interval"></a>
<h2>INTERVAL(N,N1,N2,N3,..........)</h2>
<p>The INTERVAL() function compares the value of N to the value list (N1, N2, N3, and so on ). The function returns 0 if N &lt; N1, 1 if N &lt; N2, 2 if N &lt;N3, and so on. It will return .1 if N is NULL. The value list must be in the form N1 &lt; N2 &lt; N3 in order to work properly. The following code is a simple example of how the INTERVAL() function works:</p>
<pre class="prettyprint">
mysql&gt;SELECT INTERVAL(6,1,2,3,4,5,6,7,8,9,10);
+---------------------------------------------------------+
| INTERVAL(6,1,2,3,4,5,6,7,8,9,10)                        |
+---------------------------------------------------------+
| 6                                                       |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<p>Remember that 6 is the zero-based index in the value list of the first value that was greater than N. In our case, 7 was the offending value and is located in the sixth index slot.</p>
<a name="function_least"></a>
<h2>LEAST(N1,N2,N3,N4,......)</h2>
<p>The LEAST() function is the opposite of the GREATEST() function. Its purpose is to return the least-valued item from the value list (N1, N2, N3, and so on). The following example shows the proper usage and output for the LEAST() function:</p>
<pre class="prettyprint">
mysql&gt;SELECT LEAST(3,5,1,8,33,99,34,55,67,43);
+---------------------------------------------------------+
| LEAST(3,5,1,8,33,99,34,55,67,43)                        |
+---------------------------------------------------------+
| 1                                                       |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_log"></a>
<h2>LOG(X)</h2>
<h2>LOG(B,X)</h2>
<p>The single argument version of the function will return the natural logarithm of X. If it is called with two arguments, it returns the logarithm of X for an arbitrary base B. Consider the following example:</p>
<pre class="prettyprint">
mysql&gt;SELECT LOG(45);
+---------------------------------------------------------+
| LOG(45)                                                 |
+---------------------------------------------------------+
| 3.806662                                                |
+---------------------------------------------------------+
1 row in set (0.00 sec)

mysql&gt;SELECT LOG(2,65536);
+---------------------------------------------------------+
| LOG(2,65536)                                            |
+---------------------------------------------------------+
| 16.000000                                               |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_log10"></a>
<h2>LOG10(X)</h2>
<p>This function returns the base-10 logarithm of X.</p>
<pre class="prettyprint">
mysql&gt;SELECT LOG10(100);
+---------------------------------------------------------+
| LOG10(100)                                              |
+---------------------------------------------------------+
| 2.000000                                                |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_mod"></a>
<h2>MOD(N,M)</h2>
<p>This function returns the remainder of N divided by M. Consider the following example:</p>
<pre class="prettyprint">
mysql&gt;SELECT MOD(29,3);
+---------------------------------------------------------+
| MOD(29,3)                                               |
+---------------------------------------------------------+
| 2                                                       |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_oct"></a>
<h2>OCT(N)</h2>
<p>The OCT() function returns the string representation of the octal number N. This is equivalent to using CONV(N,10,8). </p>
<pre class="prettyprint">
mysql&gt;SELECT OCT(12);
+---------------------------------------------------------+
| OCT(12)                                                 |
+---------------------------------------------------------+
| 14                                                      |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_pi"></a>
<h2>PI()</h2>
<p>This function simply returns the value of pi. MySQL internally stores the full double-precision value of pi. </p>
<pre class="prettyprint">
mysql&gt;SELECT PI();
+---------------------------------------------------------+
| PI()                                                    |
+---------------------------------------------------------+
| 3.141593                                                |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_pow"></a>
<a name="function_power"></a>
<h2>POW(X,Y)</h2>
<h2>POWER(X,Y)</h2>
<p>These two functions return the value of X raised to the power of Y.</p>
<pre class="prettyprint">
mysql&gt; SELECT POWER(3,3);
+---------------------------------------------------------+
| POWER(3,3)                                              |
+---------------------------------------------------------+
| 27                                                      |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_radians"></a>
<h2>RADIANS(X)</h2>
<p>This function returns the value of X, converted from degrees to radians.</p>
<pre class="prettyprint">
mysql&gt;SELECT RADIANS(90);
+---------------------------------------------------------+
| RADIANS(90)                                             |
+---------------------------------------------------------+
|1.570796                                                 |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_round"></a>
<h2>ROUND(X)</h2>
<h2>ROUND(X,D)</h2>
<p>This function returns X rounded to the nearest integer. If a second argument, D, is supplied, then the function returns X rounded to D decimal places. D must be positive or all digits to the right of the decimal point will be removed. Consider the following example:</p>
<pre class="prettyprint">
mysql&gt;SELECT ROUND(5.693893);
+---------------------------------------------------------+
| ROUND(5.693893)                                         |
+---------------------------------------------------------+
| 6                                                       |
+---------------------------------------------------------+
1 row in set (0.00 sec)

mysql&gt;SELECT ROUND(5.693893,2);
+---------------------------------------------------------+
| ROUND(5.693893,2)                                       |
+---------------------------------------------------------+
| 5.69                                                    |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_sign"></a>
<h2>SIGN(X)</h2>
<p>This function returns the sign of X (negative, zero, or positive) as .1, 0, or 1.</p>
<pre class="prettyprint">
mysql&gt;SELECT SIGN(-4.65);
+---------------------------------------------------------+
| SIGN(-4.65)                                             |
+---------------------------------------------------------+
| -1                                                      |
+---------------------------------------------------------+
1 row in set (0.00 sec)

mysql&gt;SELECT SIGN(0);
+---------------------------------------------------------+
| SIGN(0)                                                 |
+---------------------------------------------------------+
| 0                                                       |
+---------------------------------------------------------+
1 row in set (0.00 sec)

mysql&gt;SELECT SIGN(4.65);
+---------------------------------------------------------+
| SIGN(4.65)                                              |
+---------------------------------------------------------+
| 1                                                       |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_sin"></a>
<h2>SIN(X)</h2>
<p>This function returns the sine of X. Consider the following example:</p>
<pre class="prettyprint">
mysql&gt;SELECT SIN(90);
+---------------------------------------------------------+
| SIN(90)                                                 |
+---------------------------------------------------------+
| 0.893997                                                |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_sqrt"></a>
<h2>SQRT(X)</h2>
<p>This function returns the non-negative square root of X. Consider the following example:</p>
<pre class="prettyprint">
mysql&gt;SELECT SQRT(49);
+---------------------------------------------------------+
| SQRT(49)                                                |
+---------------------------------------------------------+
| 7                                                       |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>

<a name="function_std"></a>
<a name="function_stddev"></a>
<h2>STD(expression)</h2>
<h2>STDDEV(expression)</h2>
<p>The STD() function is used to return the standard deviation of expression. This is equivalent to taking the square root of the VARIANCE() of expression. The following example computes the standard deviation of the PRICE column in our CARS table:</p>
<pre class="prettyprint">
mysql&gt;SELECT STD(PRICE) STD_DEVIATION FROM CARS;
+---------------------------------------------------------+
| STD_DEVIATION                                           |
+---------------------------------------------------------+
| 7650.2146                                               |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_tan"></a>
<h2>TAN(X)</h2>
<p>This function returns the tangent of the argument X, which is expressed in radians.</p>
<pre class="prettyprint">
mysql&gt;SELECT TAN(45);
+---------------------------------------------------------+
| TAN(45)                                                 |
+---------------------------------------------------------+
| 1.619775                                                |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<a name="function_truncate"></a>
<h2>TRUNCATE(X,D)</h2>
<p>This function is used to return the value of X truncated to D number of decimal places. If D is 0, then the decimal point is removed. If D is negative, then D number of values in the integer part of the value is truncated. Consider the following example:</p>
<pre class="prettyprint">
mysql&gt;SELECT TRUNCATE(7.536432,2);
+---------------------------------------------------------+
| TRUNCATE(7.536432,2)                                    |
+---------------------------------------------------------+
| 7.53                                                    |
+---------------------------------------------------------+
1 row in set (0.00 sec)
</pre>
<hr />
<div class="pre-btn">
<a href="mysql-useful-functions.html">Previous Page</a>
</div>
<div class="print-btn">
<a href="../cgi-bin/printpage.html" target="_blank">Print Version</a>
</div>
<div class="pdf-btn">
<a href="pdf/mysql-numeric-functions.html" alt="MySQL Numeric Functions" target="_blank">PDF Version</a>
</div>
<div class="nxt-btn">
<a href="mysql-useful-functions.html">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
</div>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</div>
</div><!-- middlecol -->
<div id="rightcol">
<!-- AddThis Button BEGIN -->
<div class="addthis">
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook"></a>
<a class="addthis_button_twitter"></a>
<script type="text/javascript">
<!--
 document.write('<a class="addthis_button_google_plusone" g:plusone:count="false"></a>');
//-->
</script>
<a class="addthis_button_linkedin"></a>
<a class="addthis_button_email"></a>
<a class="addthis_button_compact"></a>
</div>
<script type="text/javascript" src="../../s7.addthis.com/js/250/addthis_widget.js#pubid=ra-4f661ec623a400f0"></script>
</div>
<!-- AddThis Button END -->
<div class="localad">
<a rel="nofollow" href="http://www.modernindianbabynames.com/" target="_blank" title="Modern Baby Names">Modern Baby Names</a>
</div>
<div class="localad">
<a rel="nofollow" href="http://www.photofuntoos.com/" target="_blank" title="Online Photo Editing">Online Photo Editing</a>
</div>
<div class="rightgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
</div><!-- rightcol -->
<div style="clear:both;"></div>
</div><!-- wrapper -->
<div id="footer">
<div class="wrapper">
<div id="bottommenu">
<a href="../asp.net/index.html" target="_top">ASP.NET </a> |
<a href="../jquery/index.html" target="_top">jQuery </a> |
<a href="../ajax/index.html" target="_top">AJAX </a> |
<a href="../ant/index.html" target="_top">ANT</a> |
<a href="../jsp/index.html" target="_top">JSP </a> |
<a href="../servlets/index.html" target="_top">Servlets </a> |
<a href="../log4j/index.html" target="_top">log4j </a> |
<a href="../ibatis/index.html" target="_top">iBATIS </a> |
<a href="../hibernate/index.html" target="_top">Hibernate </a> |
<a href="../jdbc/index.html" target="_top">JDBC </a> |
<a href="../struts_2/index.html" target="_top">Struts </a> |
<a href="../html5/index.html" target="_top">HTML5 </a> |
<a href="../sql/index.html" target="_top">SQL </a> |
<a href="index.html" target="_top">MySQL </a> |
<a href="../cplusplus/index.html" target="_top">C++ </a> |
<a href="../unix/index.html" target="_top">UNIX </a>
</div>
<div id="copyright">
<p>Copyright &copy; 2013 by tutorialspoint. All Rights Reserved.</p>
</div>
</div>
</div>
</body>

<!-- Mirrored from www.tutorialspoint.com/mysql/mysql-numeric-functions.htm by HTTrack Website Copier/3.x [XR&CO'2010], Mon, 15 Apr 2013 05:03:56 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>