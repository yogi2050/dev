<!doctype html> 
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--><html lang="en"><!--<![endif]-->

<!-- Mirrored from www.tutorialspoint.com/junit/junit_api.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 20:49:36 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="utf-8">
<title>JUnit API</title>
<link rel="shortcut icon" href="../favicon.png" type="image/x-icon" />
<meta name="description" content="JUnit API - Learn JUnit testing framework in simple and easy steps starting from Environment Setup, Test Framework, Basic usage, Writing Tests, Annotations, Executing Tests, Suite Test,  Ignore Test, Time Test, Exceptions Test, Parameterized Test,  Using Assertion, Plug with Ant, Plug with Eclipse." />
<meta name="keywords" content="JUnit tutorial, Beginners,  Environment Setup, Test Framework, Basic usage, Writing Tests, Annotations, Executing Tests, Suite Test,  Ignore Test, Time Test, Exceptions Test, Parameterized Test,  Using Assertion, Plug with Ant, Plug with Eclipse." />
<base  />
<link rel="stylesheet" type="text/css" href="../scripts/style.css" />
<link rel="stylesheet" type="text/css" href="../scripts/prettify.css" />
<script type="text/javascript" src="../scripts/prettify.js"></script>
<style media="screen" type="text/css">
#header{ 
background:#e0c90b  !important;
}
#topmenu
{
background-color:#0262ac !important;
}
#leftcol ul.menu li.heading 
{
background:#e0c90b !important;
border:1px solid #0262ac  !important;
}
#leftcol, #middlecol, #rightcol {min-height:1150px; padding:0px;}
</style>
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
</script>
</head>
<body onload="prettyPrint()">
<div id="header">
<div class="wrapper">
<h1 class="logo"><a href="../index.htm">Tutorials Point - Simply Easy Learning</a></h1>
<div id="search">
<form method="get" id="searchform" name="searchform" action="http://www.google.com/search" target="_blank">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com"/>
<input type="text" name="as_q" id="s" value="Search this site..." onfocus="if (this.value == 'Search this site...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search this site...';}"/>
<input value="FORID:11" name="cof" type="hidden"/>
<input type="hidden" name="ie" value="ISO-8859-1" />
<input class="submit btn" type="image" src="../images/icon-search.png" alt="Go"/>
</form>
</div>
</div>
</div>
<div id="topmenu">
<div class="wrapper">
<div id="left">
<a href="../index.htm" target="_top">HOME </a>
<a href="../java/index.htm" target="_top">JAVA </a>
<a href="../php/index.htm" target="_top">PHP </a>
<a href="../python/index.htm" target="_top">Python </a>
<a href="../ruby/index.htm" target="_top">Ruby </a>
<a href="../perl/index.htm" target="_top">Perl </a>
<a href="../html/index.htm" target="_top">HTML </a>
<a href="../css/index.htm" target="_top">CSS </a>
<a href="../javascript/index.htm" target="_top">Javascript </a>
<a href="../mysql/index.htm" target="_top">MySQL </a>
<a href="../cplusplus/index.htm" target="_top">C++ </a>
<a href="../unix/index.htm" target="_top">UNIX </a>
<a href="../more.htm" target="_top">MORE...</a>
</div>
<div id="right">
<a href="../references.htm" target="_top">REFERENCES</a> |
<a href="../forums/index.html" target="_top">FORUM</a> |
<a href="../about/index.htm" target="_top">ABOUT</a> |
<a href="../about/contact_us.htm" target="_top">CONTACT</a>
</div>
</div>
</div>
<div class="wrapper">
<div id="leftcol">
<div class="mini-logo">
<img src="../images/junit-mini-logo.png" alt="JUnit Tutorial" />
</div>
<ul class="menu">
<li class="heading">JUnit Tutorial</li>
<li><a target="_top" href="index.htm">JUnit - Home</a></li>
<li><a target="_top" href="junit_overview.htm">JUnit - Overview</a></li>
<li><a target="_top" href="junit_environment_setup.htm">JUnit - Environment Setup</a></li>
<li><a target="_top" href="junit_test_framework.htm">JUnit - Test Framework</a></li>
<li><a target="_top" href="junit_basic_usage.htm">JUnit - Basic Usage</a></li>
<li><a target="_top" href="junit_api.htm"><b>JUnit - API</b></a></li>
<li><a target="_top" href="junit_writing_tests.htm">JUnit - Writing Tests</a></li>
<li><a target="_top" href="junit_using_assertion.htm">JUnit - Using Assertion</a></li>
<li><a target="_top" href="junit_execution_procedure.htm">JUnit - Execution Procedure</a></li>
<li><a target="_top" href="junit_executing_tests.htm">JUnit - Executing Tests</a></li>
<li><a target="_top" href="junit_suite_test.htm">JUnit - Suite Test</a></li>
<li><a target="_top" href="junit_ignore_test.htm">JUnit - Ignore Test</a></li>
<li><a target="_top" href="junit_time_test.htm">JUnit - Time Test</a></li>
<li><a target="_top" href="junit_exceptions_test.htm">JUnit - Exceptions Test</a></li>
<li><a target="_top" href="junit_parameterized_test.htm">JUnit - Parameterized Test</a></li>
<li><a target="_top" href="junit_plug_with_ant.htm">JUnit - Plug with Ant</a></li>
<li><a target="_top" href="junit_plug_with_eclipse.htm">JUnit - Plug with Eclipse</a></li>
<li><a target="_top" href="junit_extensions.htm">JUnit - Extensions</a></li>
</ul>
<ul class="menu">
<li class="heading">JUnit Useful Resources</li>
<li><a target="_top" href="junit_quick_guide.htm">JUnit Quick Guide</a></li>
<li><a target="_top" href="junit_useful_resources.htm">JUnit Useful Resources</a></li>
</ul>
<ul class="menu">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="../developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="../computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="../computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div><!-- leftcol -->
<div id="middlecol">
<!-- PRINTING STARTS HERE -->
<div class="content">
<h1>JUnit API</h1>
<div class="topgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
<hr />
<div class="pre-btn">
<a href="junit_basic_usage.htm">Previous Page</a>
</div>
<div class="nxt-btn">
<a href="junit_writing_tests.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
<h2>Important API's of JUnit</h2>
<p>The most important package in JUnit is <b>junit.framework</b> which contain all the core classes. Some of the important class are</p>
<table class="src">
<tr><th style="width:15%;">Serial No</th><th style="width:35%;">Class Name</th><th>Functionality</th></tr>
<tr><td>1</td><td>Assert</td><td>A set of assert methods.</td></tr>
<tr><td>2</td><td>TestCase</td><td>A test case defines the fixture to run multiple tests.</td></tr>
<tr><td>3</td><td>TestResult</td><td>A TestResult collects the results of executing a test case.</td></tr>
<tr><td>4</td><td>TestSuite</td><td>A TestSuite is a Composite of Tests.</td></tr>
</table>
<h2>Assert Class</h2>
<p>Following is the declaration for <b>org.junit.Assert</b> class:</p>
<pre class="prettyprint">
public class Assert extends java.lang.Object
</pre>
<p>This class provides a set of assertion methods useful for writing tests. Only failed assertions are recorded. Some of the important methods of <b>Assert</b> class are:</p>
<table class="src">
<tr><th style="width:5%;">S.N.</th><th>Methods &amp; Description</th></tr>
<tr><td>1</td><td><b>void assertEquals(boolean expected, boolean actual)</b><br />Check that two primitives/Objects are equal</td></tr>
<tr><td>2</td><td><b>void assertFalse(boolean condition)</b><br />Check that a condition is false</td></tr>
<tr><td>3</td><td><b>void assertNotNull(Object object)</b><br />Check that an object isn't null.</td></tr>
<tr><td>4</td><td><b>void assertNull(Object object)</b><br />Check that an object is null</td></tr>
<tr><td>5</td><td><b>void assertTrue(boolean condition)</b><br />Check that a condition is true.</td></tr>
<tr><td>6</td><td><b>void fail()</b><br />Fails a test with no message.</td></tr>
</table>
<p>Let's try to cover few of the above mentioned methods in an example. Create a java class file name TestJunit1.java in <b>C:\ &gt; JUNIT_WORKSPACE</b></p>
<pre class="prettyprint">
import org.junit.Test;
import static org.junit.Assert.*;
public class TestJunit1 {
   @Test
   public void testAdd() {
      //test data
      int num= 5;
      String temp= null;
      String str= "Junit is working fine";

      //check for equality
      assertEquals("Junit is working fine", str);
      
      //check for false condition
      assertFalse(num &gt; 6);

      //check for not null value
      assertNotNull(str);
   }
}
</pre>
<p>Next, let's create a java class file name TestRunner1.java in <b>C:\ &gt; JUNIT_WORKSPACE</b> to execute Test case(s)</p>
<pre class="prettyprint">
import org.junit.runner.JUnitCore;
import org.junit.runner.Result;
import org.junit.runner.notification.Failure;

public class TestRunner1 {
   public static void main(String[] args) {
      Result result = JUnitCore.runClasses(TestJunit1.class);
      for (Failure failure : result.getFailures()) {
         System.out.println(failure.toString());
      }
      System.out.println(result.wasSuccessful());
   }
}  	
</pre>
<p>Compile the Test case and Test Runner classes using javac</p>
<pre class="result">
C:\JUNIT_WORKSPACE>javac TestJunit1.java TestRunner1.java
</pre>
<p>Now run the Test Runner which will run test case defined in provided Test Case class.</p>
<pre class="result">
C:\JUNIT_WORKSPACE>java TestRunner1
</pre>
<p>Verify the output.</p>
<pre class="result">
true
</pre>
<h2>TestCase Class</h2>
<p>Following is the declaration for <b>org.junit.TestCaset</b> class:</p>
<pre class="prettyprint">
public abstract class TestCase extends Assert implements Test
</pre>
<p>A test case defines the fixture to run multiple tests. Some of the important methods of <b>TestCase</b> class are</p>
<table class="src">
<tr><th style="width:5%;">S.N.</th><th>Methods &amp; Description</th></tr>
<tr><td>1</td><td><b>int countTestCases()</b><br />Counts the number of test cases executed by run(TestResult result).</td></tr>
<tr><td>2</td><td><b>TestResult createResult()</b><br />Creates a default TestResult object.</td></tr>
<tr><td>3</td><td><b>String getName()</b><br />Gets the name of a TestCase.</td></tr>
<tr><td>4</td><td><b>TestResult run()</b><br />A convenience method to run this test, collecting the results with a default TestResult object.</td></tr>
<tr><td>5</td><td><b>void run(TestResult result)</b><br /> Runs the test case and collects the results in TestResult.</td></tr>
<tr><td>6</td><td><b>void setName(String name)</b><br />Sets the name of a TestCase.</td></tr>
<tr><td>7</td><td><b>void setUp()</b><br />Sets up the fixture, for example, open a network connection.</td></tr>
<tr><td>8</td><td><b>void tearDown()</b><br />Tears down the fixture, for example, close a network connection.</td></tr>
<tr><td>9</td><td><b>String toString()</b><br />Returns a string representation of the test case.</td></tr>
</table>
<p>Let's try to cover few of the above mentioned methods in an example. Create a java class file name TestJunit2.java in <b>C:\ &gt; JUNIT_WORKSPACE</b></p>
<pre class="prettyprint">
import junit.framework.TestCase;
import org.junit.Before;
import org.junit.Test;
public class TestJunit2 extends TestCase  {
   protected double fValue1;
   protected double fValue2;
   
   @Before 
   public void setUp() {
      fValue1= 2.0;
      fValue2= 3.0;
   }
	
   @Test
   public void testAdd() {
      //count the number of test cases
      System.out.println("No of Test Case = "+ this.countTestCases());
		
      //test getName 
      String name= this.getName();
      System.out.println("Test Case Name = "+ name);

      //test setName
      this.setName("testNewAdd");
      String newName= this.getName();
      System.out.println("Updated Test Case Name = "+ newName);
   }
   //tearDown used to close the connection or clean up activities
   public void tearDown(  ) {
   }
}
</pre>
<p>Next, let's create a java class file name TestRunner2.java in <b>C:\ &gt; JUNIT_WORKSPACE</b> to execute Test case(s)</p>
<pre class="prettyprint">
import org.junit.runner.JUnitCore;
import org.junit.runner.Result;
import org.junit.runner.notification.Failure;

public class TestRunner2 {
   public static void main(String[] args) {
      Result result = JUnitCore.runClasses(TestJunit2.class);
      for (Failure failure : result.getFailures()) {
         System.out.println(failure.toString());
      }
      System.out.println(result.wasSuccessful());
   }
} 
</pre>
<p>Compile the Test case and Test Runner classes using javac</p>
<pre class="result">
C:\JUNIT_WORKSPACE>javac TestJunit2.java TestRunner2.java
</pre>
<p>Now run the Test Runner which will run test case defined in provided Test Case class.</p>
<pre class="result">
C:\JUNIT_WORKSPACE>java TestRunner2
</pre>
<p>Verify the output.</p>
<pre class="result">
No of Test Case = 1
Test Case Name = testAdd
Updated Test Case Name = testNewAdd
true
</pre>
<h2>TestResult Class</h2>
<p>Following is the declaration for <b>org.junit.TestResult</b> class:</p>
<pre class="prettyprint">
public class TestResult extends Object
</pre>
<p>A TestResult collects the results of executing a test case. It is an instance of the Collecting Parameter pattern. The test framework distinguishes between failures and errors. A failure is anticipated and checked for with assertions. Errors are unanticipated problems like an ArrayIndexOutOfBoundsException. Some of the important methods of <b>TestResult</b> class are</p>
<table class="src">
<tr><th style="width:5%;">S.N.</th><th>Methods &amp; Description</th></tr>
<tr><td>1</td><td><b>void addError(Test test, Throwable t)</b><br /> Adds an error to the list of errors.</td></tr>
<tr><td>2</td><td><b>void addFailure(Test test, AssertionFailedError t)</b><br />Adds a failure to the list of failures.</td></tr>
<tr><td>3</td><td><b>void endTest(Test test)</b><br />Informs the result that a test was completed.</td></tr>
<tr><td>4</td><td><b>int errorCount()</b><br />Gets the number of detected errors.</td></tr>
<tr><td>5</td><td><b>Enumeration&lt;TestFailure&gt; errors()</b><br />Returns an Enumeration for the errors.</td></tr>
<tr><td>6</td><td><b>int failureCount()</b><br />Gets the number of detected failures.</td></tr>
<tr><td>7</td><td><b>void run(TestCase test)</b><br />Runs a TestCase.</td></tr>
<tr><td>8</td><td><b>int int runCount()</b><br />Gets the number of run tests.</td></tr>
<tr><td>9</td><td><b>void startTest(Test test)</b><br />Informs the result that a test will be started.</td></tr>
<tr><td>10</td><td><b>void stop()</b><br />Marks that the test run should stop.</td></tr>
</table>
<p>Create a java class file name TestJunit3.java in <b>C:\ &gt; JUNIT_WORKSPACE</b></p>
<pre class="prettyprint">
import org.junit.Test;
import junit.framework.AssertionFailedError;
import junit.framework.TestResult;

public class TestJunit3 extends TestResult {
   // add the error
   public synchronized void addError(Test test, Throwable t) {
      super.addError((junit.framework.Test) test, t);
   }

   // add the failure
   public synchronized void addFailure(Test test, AssertionFailedError t) {
      super.addFailure((junit.framework.Test) test, t);
   }
   @Test
   public void testAdd() {
   // add any test
   }
   
   // Marks that the test run should stop.
   public synchronized void stop() {
   //stop the test here
   }
}
</pre>
<p>Next, let's create a java class file name TestRunner3.java in <b>C:\ &gt; JUNIT_WORKSPACE</b> to execute Test case(s)</p>
<pre class="prettyprint">
import org.junit.runner.JUnitCore;
import org.junit.runner.Result;
import org.junit.runner.notification.Failure;

public class TestRunner3 {
   public static void main(String[] args) {
      Result result = JUnitCore.runClasses(TestJunit3.class);
      for (Failure failure : result.getFailures()) {
         System.out.println(failure.toString());
      }
      System.out.println(result.wasSuccessful());
   }
}  	
</pre>
<p>Compile the Test case and Test Runner classes using javac</p>
<pre class="result">
C:\JUNIT_WORKSPACE>javac TestJunit3.java TestRunner3.java
</pre>
<p>Now run the Test Runner which will run test case defined in provided Test Case class.</p>
<pre class="result">
C:\JUNIT_WORKSPACE>java TestRunner3
</pre>
<p>Verify the output.</p>
<pre class="result">
true
</pre>
<hr />
<h2>TestSuite Class</h2>
<p>Following is the declaration for <b>org.junit.TestSuite</b> class:</p>
<pre class="prettyprint">
public class TestSuite extends Object implements Test
</pre>
<p>A TestSuite is a Composite of Tests. It runs a collection of test cases. Some of the important methods of <b>TestSuite</b> class are</p>
<table class="src">
<tr><th style="width:5%;">S.N.</th><th>Methods &amp; Description</th></tr>
<tr><td>1</td><td><b>void addTest(Test test)</b><br />Adds a test to the suite.</td></tr>
<tr><td>2</td><td><b>void addTestSuite(Class&lt;? extends TestCase&gt; testClass)</b><br /> Adds the tests from the given class to the suite.</td></tr>
<tr><td>3</td><td><b>int countTestCases()</b><br />Counts the number of test cases that will be run by this test.</td></tr>
<tr><td>4</td><td><b>String getName()</b><br />Returns the name of the suite.</td></tr>
<tr><td>5</td><td><b>void run(TestResult result)</b><br />Runs the tests and collects their result in a TestResult.</td></tr>
<tr><td>6</td><td><b>void setName(String name)</b><br />Sets the name of the suite.</td></tr>
<tr><td>7</td><td><b>Test testAt(int index)</b><br />Returns the test at the given index.</td></tr>
<tr><td>8</td><td><b>int testCount()</b><br />Returns the number of tests in this suite.</td></tr>
<tr><td>9</td><td><b>static Test warning(String message)</b><br />Returns a test which will fail and log a warning message.</td></tr>
</table>
<p>Create a java class file name JunitTestSuite.java in <b>C:\ &gt; JUNIT_WORKSPACE</b> to create Test suite</p>
<pre class="prettyprint">
import junit.framework.*;
public class JunitTestSuite {
   public static void main(String[] a) {
      // add the test's in the suite
      TestSuite suite = new TestSuite(TestJunit1.class, 
      TestJunit2.class, TestJunit3.class );
      TestResult result = new TestResult();
      suite.run(result);
      System.out.println("Number of test cases = " + result.runCount());
    }
}
</pre>
<p>Compile the Test suite classes using javac</p>
<pre class="result">
C:\JUNIT_WORKSPACE>javac JunitTestSuite.java 
</pre>
<p>Now run the Test Suite.</p>
<pre class="result">
C:\JUNIT_WORKSPACE>java JunitTestSuite
</pre>
<p>Verify the output.</p>
<pre class="result">
No of Test Case = 1
Test Case Name = testAdd
Updated Test Case Name = testNewAdd
Number of test cases = 3
</pre>
<hr />
<div class="pre-btn">
<a href="junit_basic_usage.htm">Previous Page</a>
</div>
<div class="print-btn">
<a href="../cgi-bin/printpage.html" target="_blank">Print Version</a>
</div>
<div class="pdf-btn">
<a href="pdf/junit_api.pdf" alt="JUnit API" target="_blank">PDF Version</a>
</div>
<div class="nxt-btn">
<a href="junit_writing_tests.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
</div>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</div>
</div><!-- middlecol -->
<div id="rightcol">
<!-- AddThis Button BEGIN -->
<div class="addthis">
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook"></a>
<a class="addthis_button_twitter"></a>
<script type="text/javascript">
<!--
 document.write('<a class="addthis_button_google_plusone" g:plusone:count="false"></a>');
//-->
</script>
<a class="addthis_button_linkedin"></a>
<a class="addthis_button_email"></a>
<a class="addthis_button_compact"></a>
</div>
<script type="text/javascript" src="../../s7.addthis.com/js/250/addthis_widget.js#pubid=ra-4f661ec623a400f0"></script>
</div>
<!-- AddThis Button END -->
<div class="localad">
<a rel="nofollow" href="http://www.modernindianbabynames.com/" target="_blank" title="Modern Baby Names">Modern Baby Names</a>
</div>
<div class="localad">
<a rel="nofollow" href="http://www.photofuntoos.com/" target="_blank" title="Online Photo Editing">Online Photo Editing</a>
</div>
<div class="rightgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
</div><!-- rightcol -->
<div style="clear:both;"></div>
</div><!-- wrapper -->
<div id="footer">
<div class="wrapper">
<div id="bottommenu">
<a href="../asp.net/index.htm" target="_top">ASP.NET </a> |
<a href="../jquery/index.htm" target="_top">jQuery </a> |
<a href="../ajax/index.htm" target="_top">AJAX </a> |
<a href="../ant/index.htm" target="_top">ANT</a> |
<a href="../jsp/index.htm" target="_top">JSP </a> |
<a href="../servlets/index.htm" target="_top">Servlets </a> |
<a href="../log4j/index.htm" target="_top">log4j </a> |
<a href="../ibatis/index.htm" target="_top">iBATIS </a> |
<a href="../hibernate/index.htm" target="_top">Hibernate </a> |
<a href="../jdbc/index.htm" target="_top">JDBC </a> |
<a href="../struts_2/index.htm" target="_top">Struts </a> |
<a href="../html5/index.htm" target="_top">HTML5 </a> |
<a href="../sql/index.htm" target="_top">SQL </a> |
<a href="../mysql/index.htm" target="_top">MySQL </a> |
<a href="../cplusplus/index.htm" target="_top">C++ </a> |
<a href="../unix/index.htm" target="_top">UNIX </a>
</div>
<div id="copyright">
<p>Copyright &copy; 2013 by tutorialspoint. All Rights Reserved.</p>
</div>
</div>
</div>
</body>

<!-- Mirrored from www.tutorialspoint.com/junit/junit_api.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 20:49:37 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>
