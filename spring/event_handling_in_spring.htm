<!doctype html> 
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--><html lang="en"><!--<![endif]-->

<!-- Mirrored from www.tutorialspoint.com/spring/event_handling_in_spring.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 20:55:54 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="utf-8">
<title>Event Handling in Spring</title>
<link rel="shortcut icon" href="../favicon.png" type="image/x-icon" />
<meta name="description" content="Event Handling in Spring - Learn Java Spring Framework version 3.1.0 starting from environment setup, inversion of control (IoC), dependency injection, bean scopes, bean life cycle, inner beans, autowiring, different modules, aspect oriented programming (AOP), database access (JDBC), Transaction Management, Web MVC framework, Web Flow, Exception handling, EJB integration and Sending email etc." />
<meta name="keywords" content="Free, Spring, Tutorials, beginners, Framework, Web Flow,  Reference, Manual, Guide, transaction, Management" />
<base  />
<link rel="stylesheet" type="text/css" href="../scripts/style.css" />
<link rel="stylesheet" type="text/css" href="../scripts/prettify.css" />
<script type="text/javascript" src="../scripts/prettify.js"></script>
<style media="screen" type="text/css">
/* Spring Scheme */
#header{ 
   background:#c1cc22 !important;
}
#topmenu
{
   background-color:#387b2c !important;
}
#leftcol ul.menu li.heading 
{
   background:#c1cc22 !important;
   border:1px solid #387b2c !important;
}
#leftcol, #middlecol, #rightcol {min-height:1300px; padding:0px;}
</style>
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
   _uacct = "UA-232293-6";
   urchinTracker();
</script>
</head>
<body onload="prettyPrint()">
<div id="header">
<div class="wrapper">
<h1 class="logo"><a href="../index.htm">Tutorials Point Simply Easy Learning</a></h1>
<div id="search">
<form method="get" id="searchform" name="searchform" action="http://www.google.com/search" target="_blank">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com"/>
<input type="text" name="as_q" id="s" value="Search this site..." onfocus="if (this.value == 'Search this site...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search this site...';}"/>
<input value="FORID:11" name="cof" type="hidden"/>
<input type="hidden" name="ie" value="ISO-8859-1" />
<input class="submit btn" type="image" src="../images/icon-search.png" alt="Go"/>
</form>
</div>
</div>
</div>
<div id="topmenu">
<div class="wrapper">
<div id="left">
<a href="../index.htm" target="_top">HOME </a>
<a href="../java/index.htm" target="_top">JAVA </a>
<a href="../php/index.htm" target="_top">PHP </a>
<a href="../python/index.htm" target="_top">Python </a>
<a href="../ruby/index.htm" target="_top">Ruby </a>
<a href="../perl/index.htm" target="_top">Perl </a>
<a href="../html/index.htm" target="_top">HTML </a>
<a href="../css/index.htm" target="_top">CSS </a>
<a href="../javascript/index.htm" target="_top">Javascript </a>
<a href="../mysql/index.htm" target="_top">MySQL </a>
<a href="../cplusplus/index.htm" target="_top">C++ </a>
<a href="../unix/index.htm" target="_top">UNIX </a>
<a href="../more.htm" target="_top">MORE...</a>
</div>
<div id="right">
<a href="../references.htm" target="_top">REFERENCES</a> |
<a href="../forums/index.html" target="_top">FORUM</a> |
<a href="../about/index.htm" target="_top">ABOUT</a> |
<a href="../about/contact_us.htm" target="_top">CONTACT</a>
</div>
</div>
</div>
<div class="wrapper">
<div id="leftcol">
<div class="mini-logo">
<img src="../images/spring-mini-logo.png" alt="Spring tutorial" />
</div>
<ul class="menu">
<li class="heading">Spring Core Basics</li>
<li><a target="_top" href="index.htm">Home</a></li>
<li><a target="_top" href="spring_overview.htm">Overview</a></li>
<li><a target="_top" href="spring_architecture.htm">Architecture</a></li>
<li><a target="_top" href="spring_environment_setup.htm">Environment Setup</a></li>
<li><a target="_top" href="spring_hello_world_example.htm">Hello World Example</a></li>
<li><a target="_top" href="spring_ioc_containers.htm">IoC Containers</a></li>
<li><a target="_top" href="spring_bean_definition.htm">Bean Definition</a></li>
<li><a target="_top" href="spring_bean_scopes.htm">Bean Scopes</a></li>
<li><a target="_top" href="spring_bean_life_cycle.htm">Bean Life Cycle</a></li>
<li><a target="_top" href="spring_bean_post_processors.htm">Bean Post Processors</a></li>
<li><a target="_top" href="spring_bean_definition_inheritance.htm">Bean Definition Inheritance</a></li>
<li><a target="_top" href="spring_dependency_injection.htm">Dependency Injection</a></li>
<li><a target="_top" href="spring_injecting_inner_beans.htm">Injecting Inner Beans</a></li>
<li><a target="_top" href="spring_injecting_collection.htm">Injecting Collection</a></li>
<li><a target="_top" href="spring_beans_autowiring.htm">Spring Beans Auto-Wiring</a></li>
<li><a target="_top" href="spring_annotation_based_configuration.htm">Annotation Based Configuration</a></li>
<li><a target="_top" href="spring_java_based_configuration.htm">Java Based Configuration</a></li>
<li><a target="_top" href="event_handling_in_spring.htm"><b>Event Handling in Spring</b></a></li>
<li><a target="_top" href="custom_events_in_spring.htm">Custom Events in Spring</a></li>
<li><a target="_top" href="aop_with_spring.htm">AOP with Spring Framework</a></li>
<li><a target="_top" href="spring_jdbc_framework.htm">Spring JDBC Framework</a></li>
<li><a target="_top" href="spring_transaction_management.htm">Transaction Management</a></li>
<li><a target="_top" href="spring_web_mvc_framework.htm">Spring Web MVC Framework</a></li>
<li><a target="_top" href="logging_with_log4j.htm">Spring Logging with Log4J</a></li>
</ul>
<ul class="menu">
<li class="heading">Spring Useful Resources</li>
<li><a target="_top" href="spring_quick_guide.htm">Spring Quick Guide</a></li>
<li><a target="_top" href="spring_useful_resources.htm">Spring Useful Resources</a></li>
</ul>
<ul class="menu">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="../developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="../computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="../computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div><!-- leftcol -->
<div id="middlecol">
<!-- PRINTING STARTS HERE -->
<div class="content">
<h1>Event Handling in Spring</h1>
<div class="topgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
<hr />
<div class="pre-btn">
<a href="spring_java_based_configuration.htm">Previous Page</a>
</div>
<div class="nxt-btn">
<a href="custom_events_in_spring.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
<p>You have seen in all the chapters that core of Spring is the <b>ApplicationContext</b>, which manages complete life cycle of the beans. The  ApplicationContext publishes certain types of events when loading the beans. For example, a <i>ContextStartedEvent</i> is published when the context is started and <i>ContextStoppedEvent</i> is published when the context is stopped.</p>
<p>Event handling in the <i>ApplicationContext</i> is provided through the <i>ApplicationEvent</i> class and <i>ApplicationListener</i> interface. So if a bean implements the <i>ApplicationListener</i>, then every time an <i>ApplicationEvent</i> gets published to the ApplicationContext, that bean is notified.</p>
<p>Spring provides the following standard events:</p>
<table class="src">
<tr><th class="fivepct">S.N.</th><th>Spring Built-in Events &amp; Description</th></tr>
<tr><td>1</td><td><b>ContextRefreshedEvent</b><br /> This event is published when the <i>ApplicationContext</i> is either initialized or refreshed. This can also be raised using the refresh() method on the <i>ConfigurableApplicationContext</i> interface.</td></tr>
<tr><td>2</td><td><b>ContextStartedEvent</b><br /> This event is published when the <i>ApplicationContext</i> is started  using the start() method on the <i>ConfigurableApplicationContext</i> interface. You can poll your database or you can re/start any stopped application after  receiving this event.</td></tr>
<tr><td>3</td><td><b>ContextStoppedEvent</b><br /> This event is published when the <i>ApplicationContext</i> is stopped using the stop() method on the <i>ConfigurableApplicationContext</i> interface. You can do required housekeep work after receiving this event.</td></tr>
<tr><td>4</td><td><b>ContextClosedEvent</b><br /> This event is published when the <i>ApplicationContext</i> is closed using the close() method on the <i>ConfigurableApplicationContext</i> interface. A closed context reaches its end of life; it cannot be refreshed or restarted.</td></tr>
<tr><td>5</td><td><b>RequestHandledEvent</b><br /> This is a web-specific event telling all beans that an HTTP request has been serviced.</td></tr>
</table>
<p>Spring's event handling is single-threaded so if an event is published, until and unless all the receivers get the message, the processes are blocked and the flow will not continue. Hence, care should be taken when designing your application if event handling is to be used.</p>
<h2>Listening to Context Events:</h2>
<p>To listen a context event, a bean should implement the <i>ApplicationListener</i> interface which has just one method <b>onApplicationEvent()</b>. So let us write an example to see how the events propagates and  how you can put your code to do required task based on certain events.</p>
<p>Let us have working Eclipse IDE in place and follow the following steps to create a Spring application:</p>
<table class="src">
<tr><th class="fivepct">Step</th><th>Description</th></tr>
<tr><td>1</td><td>Create a project with a name <i>SpringExample</i> and create a package <i>com.tutorialspoint</i> under the <b>src</b> folder in the created project.</td></tr>
<tr><td>2</td><td>Add required Spring libraries using <i>Add External JARs</i> option as explained in the <i>Spring Hello World Example</i> chapter.</td></tr>
<tr><td>3</td><td>Create Java classes <i>HelloWorld</i>, <i>CStartEventHandler</i>, <i>CStopEventHandler</i> and <i>MainApp</i> under the <i>com.tutorialspoint</i> package.</td></tr>
<tr><td>4</td><td>Create Beans configuration file <i>Beans.xml</i> under the <b>src</b> folder.</td></tr>
<tr><td>5</td><td>The final step is to create the content of all the Java files and Bean Configuration file and run the application as explained below.</td></tr>
</table>
<p>Here is the content of <b>HelloWorld.java</b> file:</p>
<pre class="prettyprint">
package com.tutorialspoint;

public class HelloWorld {
   private String message;

   public void setMessage(String message){
      this.message  = message;
   }

   public void getMessage(){
      System.out.println("Your Message : " + message);
   }
}
</pre>
<p>Following is the content of the <b>CStartEventHandler.java</b> file:</p>
<pre class="prettyprint">
package com.tutorialspoint;

import org.springframework.context.ApplicationListener;
import org.springframework.context.event.ContextStartedEvent;

public class CStartEventHandler 
   implements ApplicationListener&lt;ContextStartedEvent&gt;{

   public void onApplicationEvent(ContextStartedEvent event) {
      System.out.println("ContextStartedEvent Received");
   }
}
</pre>
<p>Following is the content of the <b>CStopEventHandler.java</b> file:</p>
<pre class="prettyprint">
package com.tutorialspoint;

import org.springframework.context.ApplicationListener;
import org.springframework.context.event.ContextStoppedEvent;

public class CStopEventHandler 
   implements ApplicationListener&lt;ContextStoppedEvent&gt;{

   public void onApplicationEvent(ContextStoppedEvent event) {
      System.out.println("ContextStoppedEvent Received");
   }
}
</pre> 
<p>Following is the content of the <b>MainApp.java</b> file:</p>
<pre class="prettyprint">
package com.tutorialspoint;

import org.springframework.context.ConfigurableApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class MainApp {
   public static void main(String[] args) {
      ConfigurableApplicationContext context = 
      new ClassPathXmlApplicationContext("Beans.xml");

      // Let us raise a start event.
      context.start();
	  
      HelloWorld obj = (HelloWorld) context.getBean("helloWorld");

      obj.getMessage();

      // Let us raise a stop event.
      context.stop();
   }
}
</pre> 
<p>Following is the configuration file <b>Beans.xml</b>:</p> 
<pre class="prettyprint">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"&gt;

   &lt;bean id="helloWorld" class="com.tutorialspoint.HelloWorld"&gt;
       &lt;property name="message" value="Hello World!"/&gt;
   &lt;/bean&gt;

   &lt;bean id="cStartEventHandler" 
         class="com.tutorialspoint.CStartEventHandler"/&gt;

   &lt;bean id="cStopEventHandler" 
         class="com.tutorialspoint.CStopEventHandler"/&gt;

&lt;/beans&gt;
</pre> 
<p>Once you are done with creating source and bean configuration files, let us run the application. If everything is fine with your application, this will print the following message:</p>
<pre class="result">
ContextStartedEvent Received
Your Message : Hello World!
ContextStoppedEvent Received
</pre>
<p>If you like, you can publish your own custom events and later you can capture the same to take any action against those custom events. If you are interested in writing your own custom events, you can check <a href="custom_events_in_spring.htm">Custom Events in Spring</a></p>
<hr />
<div class="pre-btn">
<a href="spring_java_based_configuration.htm">Previous Page</a>
</div>
<div class="print-btn">
<a href="../cgi-bin/printpage.html" target="_blank">Print Version</a>
</div>
<div class="pdf-btn">
<a href="pdf/event_handling_in_spring.pdf" alt="Event Handling in Spring" target="_blank">PDF Version</a>
</div>
<div class="nxt-btn">
<a href="custom_events_in_spring.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
</div>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</div>
</div><!-- middlecol -->
<div id="rightcol">
<!-- AddThis Button BEGIN -->
<div class="addthis">
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook"></a>
<a class="addthis_button_twitter"></a>
<script type="text/javascript">
<!--
 document.write('<a class="addthis_button_google_plusone" g:plusone:count="false"></a>');
//-->
</script>
<a class="addthis_button_linkedin"></a>
<a class="addthis_button_email"></a>
<a class="addthis_button_compact"></a>
</div>
<script type="text/javascript" src="../../s7.addthis.com/js/250/addthis_widget.js#pubid=ra-4f661ec623a400f0"></script>
</div>
<!-- AddThis Button END -->
<div class="localad">
<a rel="nofollow" href="http://www.modernindianbabynames.com/" target="_blank" title="Modern Baby Names">Modern Baby Names</a>
</div>
<div class="localad">
<a rel="nofollow" href="http://www.photofuntoos.com/" target="_blank" title="Online Photo Editing">Online Photo Editing</a>
</div>
<div class="rightgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
</div><!-- rightcol -->
<div style="clear:both;"></div>
</div><!-- wrapper -->
<div id="footer">
<div class="wrapper">
<div id="bottommenu">
<a href="../asp.net/index.htm" target="_top">ASP.NET </a> |
<a href="../jquery/index.htm" target="_top">jQuery </a> |
<a href="../ajax/index.htm" target="_top">AJAX </a> |
<a href="../ant/index.htm" target="_top">ANT</a> |
<a href="../jsp/index.htm" target="_top">JSP </a> |
<a href="../servlets/index.htm" target="_top">Servlets </a> |
<a href="../log4j/index.htm" target="_top">log4j </a> |
<a href="../ibatis/index.htm" target="_top">iBATIS </a> |
<a href="../hibernate/index.htm" target="_top">Hibernate </a> |
<a href="../jdbc/index.htm" target="_top">JDBC </a> |
<a href="../struts_2/index.htm" target="_top">Struts </a> |
<a href="../html5/index.htm" target="_top">HTML5 </a> |
<a href="../sql/index.htm" target="_top">SQL </a> |
<a href="../mysql/index.htm" target="_top">MySQL </a> |
<a href="../cplusplus/index.htm" target="_top">C++ </a> |
<a href="../unix/index.htm" target="_top">UNIX </a>
</div>
<div id="copyright">
<p>Copyright &copy; 2013 by tutorialspoint. All Rights Reserved.</p>
</div>
</div>
</div>
</body>

<!-- Mirrored from www.tutorialspoint.com/spring/event_handling_in_spring.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 20:55:59 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>
