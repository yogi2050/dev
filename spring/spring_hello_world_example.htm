<!doctype html> 
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--><html lang="en"><!--<![endif]-->

<!-- Mirrored from www.tutorialspoint.com/spring/spring_hello_world_example.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 20:54:34 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="utf-8">
<title>Spring Hello World Example</title>
<link rel="shortcut icon" href="../favicon.png" type="image/x-icon" />
<meta name="description" content="Spring Hello World Example - Learn Java Spring Framework version 3.1.0 starting from environment setup, inversion of control (IoC), dependency injection, bean scopes, bean life cycle, inner beans, autowiring, different modules, aspect oriented programming (AOP), database access (JDBC), Transaction Management, Web MVC framework, Web Flow, Exception handling, EJB integration and Sending email etc." />
<meta name="keywords" content="Free, Spring, Tutorials, beginners, Framework, Web Flow,  Reference, Manual, Guide, transaction, Management" />
<base  />
<link rel="stylesheet" type="text/css" href="../scripts/style.css" />
<link rel="stylesheet" type="text/css" href="../scripts/prettify.css" />
<script type="text/javascript" src="../scripts/prettify.js"></script>
<style media="screen" type="text/css">
/* Spring Scheme */
#header{ 
   background:#c1cc22 !important;
}
#topmenu
{
   background-color:#387b2c !important;
}
#leftcol ul.menu li.heading 
{
   background:#c1cc22 !important;
   border:1px solid #387b2c !important;
}
#leftcol, #middlecol, #rightcol {min-height:1300px; padding:0px;}
</style>
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
   _uacct = "UA-232293-6";
   urchinTracker();
</script>
</head>
<body onload="prettyPrint()">
<div id="header">
<div class="wrapper">
<h1 class="logo"><a href="../index.htm">Tutorials Point Simply Easy Learning</a></h1>
<div id="search">
<form method="get" id="searchform" name="searchform" action="http://www.google.com/search" target="_blank">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com"/>
<input type="text" name="as_q" id="s" value="Search this site..." onfocus="if (this.value == 'Search this site...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search this site...';}"/>
<input value="FORID:11" name="cof" type="hidden"/>
<input type="hidden" name="ie" value="ISO-8859-1" />
<input class="submit btn" type="image" src="../images/icon-search.png" alt="Go"/>
</form>
</div>
</div>
</div>
<div id="topmenu">
<div class="wrapper">
<div id="left">
<a href="../index.htm" target="_top">HOME </a>
<a href="../java/index.htm" target="_top">JAVA </a>
<a href="../php/index.htm" target="_top">PHP </a>
<a href="../python/index.htm" target="_top">Python </a>
<a href="../ruby/index.htm" target="_top">Ruby </a>
<a href="../perl/index.htm" target="_top">Perl </a>
<a href="../html/index.htm" target="_top">HTML </a>
<a href="../css/index.htm" target="_top">CSS </a>
<a href="../javascript/index.htm" target="_top">Javascript </a>
<a href="../mysql/index.htm" target="_top">MySQL </a>
<a href="../cplusplus/index.htm" target="_top">C++ </a>
<a href="../unix/index.htm" target="_top">UNIX </a>
<a href="../more.htm" target="_top">MORE...</a>
</div>
<div id="right">
<a href="../references.htm" target="_top">REFERENCES</a> |
<a href="../forums/index.html" target="_top">FORUM</a> |
<a href="../about/index.htm" target="_top">ABOUT</a> |
<a href="../about/contact_us.htm" target="_top">CONTACT</a>
</div>
</div>
</div>
<div class="wrapper">
<div id="leftcol">
<div class="mini-logo">
<img src="../images/spring-mini-logo.png" alt="Spring tutorial" />
</div>
<ul class="menu">
<li class="heading">Spring Core Basics</li>
<li><a target="_top" href="index.htm">Home</a></li>
<li><a target="_top" href="spring_overview.htm">Overview</a></li>
<li><a target="_top" href="spring_architecture.htm">Architecture</a></li>
<li><a target="_top" href="spring_environment_setup.htm">Environment Setup</a></li>
<li><a target="_top" href="spring_hello_world_example.htm"><b>Hello World Example</b></a></li>
<li><a target="_top" href="spring_ioc_containers.htm">IoC Containers</a></li>
<li><a target="_top" href="spring_bean_definition.htm">Bean Definition</a></li>
<li><a target="_top" href="spring_bean_scopes.htm">Bean Scopes</a></li>
<li><a target="_top" href="spring_bean_life_cycle.htm">Bean Life Cycle</a></li>
<li><a target="_top" href="spring_bean_post_processors.htm">Bean Post Processors</a></li>
<li><a target="_top" href="spring_bean_definition_inheritance.htm">Bean Definition Inheritance</a></li>
<li><a target="_top" href="spring_dependency_injection.htm">Dependency Injection</a></li>
<li><a target="_top" href="spring_injecting_inner_beans.htm">Injecting Inner Beans</a></li>
<li><a target="_top" href="spring_injecting_collection.htm">Injecting Collection</a></li>
<li><a target="_top" href="spring_beans_autowiring.htm">Spring Beans Auto-Wiring</a></li>
<li><a target="_top" href="spring_annotation_based_configuration.htm">Annotation Based Configuration</a></li>
<li><a target="_top" href="spring_java_based_configuration.htm">Java Based Configuration</a></li>
<li><a target="_top" href="event_handling_in_spring.htm">Event Handling in Spring</a></li>
<li><a target="_top" href="custom_events_in_spring.htm">Custom Events in Spring</a></li>
<li><a target="_top" href="aop_with_spring.htm">AOP with Spring Framework</a></li>
<li><a target="_top" href="spring_jdbc_framework.htm">Spring JDBC Framework</a></li>
<li><a target="_top" href="spring_transaction_management.htm">Transaction Management</a></li>
<li><a target="_top" href="spring_web_mvc_framework.htm">Spring Web MVC Framework</a></li>
<li><a target="_top" href="logging_with_log4j.htm">Spring Logging with Log4J</a></li>
</ul>
<ul class="menu">
<li class="heading">Spring Useful Resources</li>
<li><a target="_top" href="spring_quick_guide.htm">Spring Quick Guide</a></li>
<li><a target="_top" href="spring_useful_resources.htm">Spring Useful Resources</a></li>
</ul>
<ul class="menu">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="../developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="../computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="../computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div><!-- leftcol -->
<div id="middlecol">
<!-- PRINTING STARTS HERE -->
<div class="content">
<h1>Spring Hello World Example</h1>
<div class="topgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
<hr />
<div class="pre-btn">
<a href="spring_environment_setup.htm">Previous Page</a>
</div>
<div class="nxt-btn">
<a href="spring_ioc_containers.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
<p>Let us start actual programming with Spring Framework. Before you start writing your first example using Spring framework, you have to make sure that you have setup your Spring environment properly as explained in <a href="spring_environment_setup.htm">Spring - Environment Setup</a> tutorial. I also assume that you have a little bit working knowledge with Eclipse IDE.</p>
<p>So let us proceed to write a simple Spring Application which will print "Hello World!" or any other message based on the configuration done in Spring Beans Configuration file.</p>
<h2>Step 1 - Create Java Project:</h2>
<p>The first step is to create a simple Java Project using Eclipse IDE. Follow the option <b>File -&gt; New -&gt; Project</b> and finally select <b>Java Project</b> wizard from the wizard list. Now name your project as <b>HelloSpring</b> using the wizard window as follows:</p>
<img src="../images/hello_spring_wizard.jpg" alt="Hello Spring Wizard" />
<p>Once your project is created successfully, you will have following content in your <b>Project Explorer:</b></p>
<img src="../images/hello_spring_dir.jpg" alt="Hello Spring Directories" />
<h2>Step 2 - Add Required Libraries:</h2>
<p>As a second step let us add Spring Framework and common logging API libraries in our project. To do this, right click on your project name <b>HelloSpring</b> and then follow the following option available in context menu: <b>Build Path -&gt; Configure Build Path</b> to display the Java Build Path window as follows:</p>
<img src="../images/java_build_path.jpg" alt="Java Build Path" />
<p>Now use <b>Add External JARs</b> button available under <b>Libraries</b> tab to add the following core JARs from Spring Framework and Common Logging installation directories:</p>
<ul class="list">
<li><p>antlr-runtime-3.0.1</p></li>
<li><p>org.springframework.aop-3.1.0.M2</p></li>
<li><p>org.springframework.asm-3.1.0.M2</p></li>
<li><p>org.springframework.aspects-3.1.0.M2</p></li>
<li><p>org.springframework.beans-3.1.0.M2</p></li>
<li><p>org.springframework.context.support-3.1.0.M2</p></li>
<li><p>org.springframework.context-3.1.0.M2</p></li>
<li><p>org.springframework.core-3.1.0.M2</p></li>
<li><p>org.springframework.expression-3.1.0.M2</p></li>
<li><p>commons-logging-1.1.1</p></li>
</ul>
<h2>Step 3 - Create Source Files:</h2>
<p>Now let us create actual source files under the <b>HelloSpring</b> project. First we need to create a package called <b>com.tutorialspoint</b>. To do this, right click on <b>src</b> in package explorer section and follow the option : <b>New -&gt; Package</b>.</p>
<p>Next we will create <b>HelloWorld.java</b> and <b>MainApp.java</b> files under the com.tutorialspoint package.</p>
<img src="../images/spring_source_files.jpg" alt="Spring Source Files" />
<p>Here is the content of <b>HelloWorld.java</b> file:</p>
<pre class="prettyprint">
package com.tutorialspoint;

public class HelloWorld {
   private String message;

   public void setMessage(String message){
      this.message  = message;
   }

   public void getMessage(){
      System.out.println("Your Message : " + message);
   }
}
</pre> 
<p>Following is the content of the second file <b>MainApp.java</b>:</p>
<pre class="prettyprint">
package com.tutorialspoint;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class MainApp {
   public static void main(String[] args) {
      ApplicationContext context = 
             new ClassPathXmlApplicationContext("Beans.xml");

      HelloWorld obj = (HelloWorld) context.getBean("helloWorld");

      obj.getMessage();
   }
}
</pre> 
<p>There are following two important points to note about the main program:</p>
<ol class="list">
<li><p>First step is to create application context where we used framework API <b>ClassPathXmlApplicationContext()</b>. This API loads beans configuration file and eventually based on the provided API, it takes care of creating and initializing all the objects ie. beans mentioned in the configuration file.</p></li>
<li><p>Second step is used to get required bean using <b>getBean()</b> method of the created context. This method uses bean ID to return a generic object which finally can be casted to actual object. Once you have object, you can use this object to call any class method.</p></li>
</ol>
<h2>Step 4 - Create Bean Configuration File:</h2>
<p>You need to create a Bean Configuration file which is an XML file and acts as cement that glues the beans ie. classes together. This file needs to be created under the <b>src</b> directory as shown below:</p>
<img src="../images/beans_conf_file.jpg" alt="Beans Configuration File" />
<p>Usually developers keep this file name as <b>Beans.xml</b>, but you are independent to choose any name you like. You have to make sure that this file is available in CLASSPATH and use the same name in main application while creating application context as shown in MainApp.java file.</p>
<p>The Beans.xml is used to assign unique IDs to different beans and to control the creation of objects with different values without impacting any of the Spring source files.  For example, using below file you can pass any value for "message" variable and so you can print different values of message without impacting HelloWorld.java and MainApp.java files. Let us see how it works:</p>
<pre class="prettyprint">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"&gt;

   &lt;bean id="helloWorld" class="com.tutorialspoint.HelloWorld"&gt;
       &lt;property name="message" value="Hello World!"/&gt;
   &lt;/bean&gt;

&lt;/beans&gt;
</pre> 
<p>When Spring application gets loaded into the memory, Framework makes use of the above configuration file to create all the beans defined and assign them a unique ID as defined in <b>&lt;bean&gt;</b> tag. You can use <b>&lt;property&gt;</b> tag to pass the values of different variables used at the time of object creation.</p>
<h2>Step 5 - Running the Program:</h2>
<p>Once you are done with creating source and beans configuration files, you are ready for this step which is compiling and running your program. To do this, Keep MainApp.Java file tab active and use either <b>Run</b> option available in the Eclipse IDE or use <b>Ctrl + F11</b> to compile and run your <b>MainApp</b> application. If everything is fine with your application, this will print the following message in Eclipse IDE's console:</p>
<pre class="result">
Your Message : Hello World!
</pre> 
<p>Congratulations, you have created your first Spring Application successfully. You can see the flexibility of above Spring application by changing the value of "message" property and keeping both the source files unchanged. Further, let us start doing something more interesting in next few chapters.</p>
<hr />
<div class="pre-btn">
<a href="spring_environment_setup.htm">Previous Page</a>
</div>
<div class="print-btn">
<a href="../cgi-bin/printpage.html" target="_blank">Print Version</a>
</div>
<div class="pdf-btn">
<a href="pdf/spring_hello_world_example.pdf" alt="Spring Hello World Example" target="_blank">PDF Version</a>
</div>
<div class="nxt-btn">
<a href="spring_ioc_containers.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
</div>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</div>
</div><!-- middlecol -->
<div id="rightcol">
<!-- AddThis Button BEGIN -->
<div class="addthis">
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook"></a>
<a class="addthis_button_twitter"></a>
<script type="text/javascript">
<!--
 document.write('<a class="addthis_button_google_plusone" g:plusone:count="false"></a>');
//-->
</script>
<a class="addthis_button_linkedin"></a>
<a class="addthis_button_email"></a>
<a class="addthis_button_compact"></a>
</div>
<script type="text/javascript" src="../../s7.addthis.com/js/250/addthis_widget.js#pubid=ra-4f661ec623a400f0"></script>
</div>
<!-- AddThis Button END -->
<div class="localad">
<a rel="nofollow" href="http://www.modernindianbabynames.com/" target="_blank" title="Modern Baby Names">Modern Baby Names</a>
</div>
<div class="localad">
<a rel="nofollow" href="http://www.photofuntoos.com/" target="_blank" title="Online Photo Editing">Online Photo Editing</a>
</div>
<div class="rightgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
</div><!-- rightcol -->
<div style="clear:both;"></div>
</div><!-- wrapper -->
<div id="footer">
<div class="wrapper">
<div id="bottommenu">
<a href="../asp.net/index.htm" target="_top">ASP.NET </a> |
<a href="../jquery/index.htm" target="_top">jQuery </a> |
<a href="../ajax/index.htm" target="_top">AJAX </a> |
<a href="../ant/index.htm" target="_top">ANT</a> |
<a href="../jsp/index.htm" target="_top">JSP </a> |
<a href="../servlets/index.htm" target="_top">Servlets </a> |
<a href="../log4j/index.htm" target="_top">log4j </a> |
<a href="../ibatis/index.htm" target="_top">iBATIS </a> |
<a href="../hibernate/index.htm" target="_top">Hibernate </a> |
<a href="../jdbc/index.htm" target="_top">JDBC </a> |
<a href="../struts_2/index.htm" target="_top">Struts </a> |
<a href="../html5/index.htm" target="_top">HTML5 </a> |
<a href="../sql/index.htm" target="_top">SQL </a> |
<a href="../mysql/index.htm" target="_top">MySQL </a> |
<a href="../cplusplus/index.htm" target="_top">C++ </a> |
<a href="../unix/index.htm" target="_top">UNIX </a>
</div>
<div id="copyright">
<p>Copyright &copy; 2013 by tutorialspoint. All Rights Reserved.</p>
</div>
</div>
</div>
</body>

<!-- Mirrored from www.tutorialspoint.com/spring/spring_hello_world_example.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 20:55:02 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>
