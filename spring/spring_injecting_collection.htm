<!doctype html> 
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--><html lang="en"><!--<![endif]-->

<!-- Mirrored from www.tutorialspoint.com/spring/spring_injecting_collection.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 20:55:34 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="utf-8">
<title>Spring Injecting Collection</title>
<link rel="shortcut icon" href="../favicon.png" type="image/x-icon" />
<meta name="description" content="Spring Injecting Collection - Learn Java Spring Framework version 3.1.0 starting from environment setup, inversion of control (IoC), dependency injection, bean scopes, bean life cycle, inner beans, autowiring, different modules, aspect oriented programming (AOP), database access (JDBC), Transaction Management, Web MVC framework, Web Flow, Exception handling, EJB integration and Sending email etc." />
<meta name="keywords" content="Free, Spring, Tutorials, beginners, Framework, Web Flow,  Reference, Manual, Guide, transaction, Management" />
<base  />
<link rel="stylesheet" type="text/css" href="../scripts/style.css" />
<link rel="stylesheet" type="text/css" href="../scripts/prettify.css" />
<script type="text/javascript" src="../scripts/prettify.js"></script>
<style media="screen" type="text/css">
/* Spring Scheme */
#header{ 
   background:#c1cc22 !important;
}
#topmenu
{
   background-color:#387b2c !important;
}
#leftcol ul.menu li.heading 
{
   background:#c1cc22 !important;
   border:1px solid #387b2c !important;
}
#leftcol, #middlecol, #rightcol {min-height:1300px; padding:0px;}
</style>
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
   _uacct = "UA-232293-6";
   urchinTracker();
</script>
</head>
<body onload="prettyPrint()">
<div id="header">
<div class="wrapper">
<h1 class="logo"><a href="../index.htm">Tutorials Point Simply Easy Learning</a></h1>
<div id="search">
<form method="get" id="searchform" name="searchform" action="http://www.google.com/search" target="_blank">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com"/>
<input type="text" name="as_q" id="s" value="Search this site..." onfocus="if (this.value == 'Search this site...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search this site...';}"/>
<input value="FORID:11" name="cof" type="hidden"/>
<input type="hidden" name="ie" value="ISO-8859-1" />
<input class="submit btn" type="image" src="../images/icon-search.png" alt="Go"/>
</form>
</div>
</div>
</div>
<div id="topmenu">
<div class="wrapper">
<div id="left">
<a href="../index.htm" target="_top">HOME </a>
<a href="../java/index.htm" target="_top">JAVA </a>
<a href="../php/index.htm" target="_top">PHP </a>
<a href="../python/index.htm" target="_top">Python </a>
<a href="../ruby/index.htm" target="_top">Ruby </a>
<a href="../perl/index.htm" target="_top">Perl </a>
<a href="../html/index.htm" target="_top">HTML </a>
<a href="../css/index.htm" target="_top">CSS </a>
<a href="../javascript/index.htm" target="_top">Javascript </a>
<a href="../mysql/index.htm" target="_top">MySQL </a>
<a href="../cplusplus/index.htm" target="_top">C++ </a>
<a href="../unix/index.htm" target="_top">UNIX </a>
<a href="../more.htm" target="_top">MORE...</a>
</div>
<div id="right">
<a href="../references.htm" target="_top">REFERENCES</a> |
<a href="../forums/index.html" target="_top">FORUM</a> |
<a href="../about/index.htm" target="_top">ABOUT</a> |
<a href="../about/contact_us.htm" target="_top">CONTACT</a>
</div>
</div>
</div>
<div class="wrapper">
<div id="leftcol">
<div class="mini-logo">
<img src="../images/spring-mini-logo.png" alt="Spring tutorial" />
</div>
<ul class="menu">
<li class="heading">Spring Core Basics</li>
<li><a target="_top" href="index.htm">Home</a></li>
<li><a target="_top" href="spring_overview.htm">Overview</a></li>
<li><a target="_top" href="spring_architecture.htm">Architecture</a></li>
<li><a target="_top" href="spring_environment_setup.htm">Environment Setup</a></li>
<li><a target="_top" href="spring_hello_world_example.htm">Hello World Example</a></li>
<li><a target="_top" href="spring_ioc_containers.htm">IoC Containers</a></li>
<li><a target="_top" href="spring_bean_definition.htm">Bean Definition</a></li>
<li><a target="_top" href="spring_bean_scopes.htm">Bean Scopes</a></li>
<li><a target="_top" href="spring_bean_life_cycle.htm">Bean Life Cycle</a></li>
<li><a target="_top" href="spring_bean_post_processors.htm">Bean Post Processors</a></li>
<li><a target="_top" href="spring_bean_definition_inheritance.htm">Bean Definition Inheritance</a></li>
<li><a target="_top" href="spring_dependency_injection.htm">Dependency Injection</a></li>
<li><a target="_top" href="spring_injecting_inner_beans.htm">Injecting Inner Beans</a></li>
<li><a target="_top" href="spring_injecting_collection.htm"><b>Injecting Collection</b></a></li>
<li><a target="_top" href="spring_beans_autowiring.htm">Spring Beans Auto-Wiring</a></li>
<li><a target="_top" href="spring_annotation_based_configuration.htm">Annotation Based Configuration</a></li>
<li><a target="_top" href="spring_java_based_configuration.htm">Java Based Configuration</a></li>
<li><a target="_top" href="event_handling_in_spring.htm">Event Handling in Spring</a></li>
<li><a target="_top" href="custom_events_in_spring.htm">Custom Events in Spring</a></li>
<li><a target="_top" href="aop_with_spring.htm">AOP with Spring Framework</a></li>
<li><a target="_top" href="spring_jdbc_framework.htm">Spring JDBC Framework</a></li>
<li><a target="_top" href="spring_transaction_management.htm">Transaction Management</a></li>
<li><a target="_top" href="spring_web_mvc_framework.htm">Spring Web MVC Framework</a></li>
<li><a target="_top" href="logging_with_log4j.htm">Spring Logging with Log4J</a></li>
</ul>
<ul class="menu">
<li class="heading">Spring Useful Resources</li>
<li><a target="_top" href="spring_quick_guide.htm">Spring Quick Guide</a></li>
<li><a target="_top" href="spring_useful_resources.htm">Spring Useful Resources</a></li>
</ul>
<ul class="menu">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="../developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="../computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="../computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div><!-- leftcol -->
<div id="middlecol">
<!-- PRINTING STARTS HERE -->
<div class="content">
<h1>Spring Injecting Collection</h1>
<div class="topgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
<hr />
<div class="pre-btn">
<a href="spring_injecting_inner_beans.htm">Previous Page</a>
</div>
<div class="nxt-btn">
<a href="spring_beans_autowiring.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
<p>You have seen how to configure primitive data type using <b>value</b> attribute and object references using <b>ref</b> attribute of the &lt;property&gt; tag in your Bean configuration file. Both the cases deal with passing singular value to a bean.</p>
<p>Now what about if you want to pass plural values like Java Collection types List, Set, Map, and Properties. To handle the situation, Spring offers four types of collection configuration elements  which are as follows:</p>
<table class="src">
<tr><th class="twentypct">Element</th><th>Description</th></tr>
<tr><td>&lt;list&gt;</td><td>This helps in wiring ie injecting a list of values, allowing duplicates.</td></tr>
<tr><td>&lt;set&gt;</td><td>This helps in wiring a set of values but without any duplicates.</td></tr>
<tr><td>&lt;map&gt;</td><td>This can be used to inject a collection of name-value pairs where name and value can be of any type.</td></tr>
<tr><td>&lt;props&gt;</td><td>This can be used to inject a collection of name-value pairs where the name and value are both Strings.</td></tr>
</table>
<p>You can use either &lt;list&gt; or &lt;set&gt; to wire any implementation of java.util.Collection or an <b>array</b>.</p>
<p>You will come across two situations (a) Passing direct values of the collection and (b) Passing a reference of a bean as one of the collection elements.</p>
<h2>Example:</h2>
<p>Let us have working Eclipse IDE in place and follow the following steps to create a Spring application:</p>
<table class="src">
<tr><th class="fivepct">Step</th><th>Description</th></tr>
<tr><td>1</td><td>Create a project with a name <i>SpringExample</i> and create a package <i>com.tutorialspoint</i> under the <b>src</b> folder in the created project.</td></tr>
<tr><td>2</td><td>Add required Spring libraries using <i>Add External JARs</i> option as explained in the <i>Spring Hello World Example</i> chapter.</td></tr>
<tr><td>3</td><td>Create Java classes <i>JavaCollection</i>, and <i>MainApp</i> under the <i>com.tutorialspoint</i> package.</td></tr>
<tr><td>4</td><td>Create Beans configuration file <i>Beans.xml</i> under the <b>src</b> folder.</td></tr>
<tr><td>5</td><td>The final step is to create the content of all the Java files and Bean Configuration file and run the application as explained below.</td></tr>
</table>
<p>Here is the content of <b>JavaCollection.java</b> file:</p>
<pre class="prettyprint">
package com.tutorialspoint;
import java.util.*;

public class JavaCollection {
   List addressList;
   Set  addressSet;
   Map  addressMap;
   Properties addressProp;

   // a setter method to set List
   public void setAddressList(List addressList) {
      this.addressList = addressList;
   }
   // prints and returns all the elements of the list.
   public List getAddressList() {
      System.out.println("List Elements :"  + addressList);
      return addressList;
   }

   // a setter method to set Set
   public void setAddressSet(Set addressSet) {
      this.addressSet = addressSet;
   }

   // prints and returns all the elements of the Set.
   public Set getAddressSet() {
      System.out.println("Set Elements :"  + addressSet);
      return addressSet;
   }

   // a setter method to set Map
   public void setAddressMap(Map addressMap) {
      this.addressMap = addressMap;
   }
   // prints and returns all the elements of the Map.
   public Map getAddressMap() {
      System.out.println("Map Elements :"  + addressMap);
      return addressMap;
   }

   // a setter method to set Property
   public void setAddressProp(Properties addressProp) {
      this.addressProp = addressProp;
   }
   // prints and returns all the elements of the Property.
   public Properties getAddressProp() {
      System.out.println("Property Elements :"  + addressProp);
      return addressProp;
   }
}
</pre>
<p>Following is the content of the <b>MainApp.java</b> file:</p>
<pre class="prettyprint">
package com.tutorialspoint;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class MainApp {
   public static void main(String[] args) {
      ApplicationContext context = 
             new ClassPathXmlApplicationContext("Beans.xml");

      JavaCollection jc=(JavaCollection)context.getBean("javaCollection");

      jc.getAddressList();
      jc.getAddressSet();
      jc.getAddressMap();
      jc.getAddressProp();
   }
}
</pre> 
<p>Following is the configuration file <b>Beans.xml</b> which has configuration for all the type of collections:</p> 
<pre class="prettyprint">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"&gt;

   &lt;!-- Definition for javaCollection --&gt;
   &lt;bean id="javaCollection" class="com.tutorialspoint.JavaCollection"&gt;

      &lt;!-- results in a setAddressList(java.util.List) call --&gt;
      &lt;property name="addressList"&gt;
        &lt;list&gt;
           &lt;value&gt;INDIA&lt;/value&gt;
           &lt;value&gt;Pakistan&lt;/value&gt;
           &lt;value&gt;USA&lt;/value&gt;
           &lt;value&gt;USA&lt;/value&gt;
        &lt;/list&gt;
      &lt;/property&gt;

     &lt;!-- results in a setAddressSet(java.util.Set) call --&gt;
     &lt;property name="addressSet"&gt;
        &lt;set&gt;
           &lt;value&gt;INDIA&lt;/value&gt;
           &lt;value&gt;Pakistan&lt;/value&gt;
           &lt;value&gt;USA&lt;/value&gt;
           &lt;value&gt;USA&lt;/value&gt;
        &lt;/set&gt;
      &lt;/property&gt;

     &lt;!-- results in a setAddressMap(java.util.Map) call --&gt;
     &lt;property name="addressMap"&gt;
        &lt;map&gt;
           &lt;entry key="1" value="NDIA"/&gt;
           &lt;entry key="2" value="Pakistan"/&gt;
           &lt;entry key="3" value="USA"/&gt;
           &lt;entry key="4" value="USA"/&gt;
        &lt;/map&gt;
      &lt;/property&gt;

     &lt;!-- results in a setAddressProp(java.util.Properties) call --&gt;
     &lt;property name="addressProp"&gt;
        &lt;props&gt;
           &lt;prop key="one"&gt;INDIA&lt;/prop&gt;
           &lt;prop key="two"&gt;Pakistan&lt;/prop&gt;
           &lt;prop key="three"&gt;USA&lt;/prop&gt;
           &lt;prop key="four"&gt;USA&lt;/prop&gt;
        &lt;/props&gt;
      &lt;/property&gt;

   &lt;/bean&gt;

&lt;/beans&gt;
</pre> 
<p>Once you are done with creating source and bean configuration files, let us run the application. If everything is fine with your application, this will print the following message:</p>
<pre class="result">
List Elements :[INDIA, Pakistan, USA, USA]
Set Elements :[INDIA, Pakistan, USA]
Map Elements :{1=NDIA, 2=Pakistan, 3=USA, 4=USA}
Property Elements :{two=Pakistan, one=INDIA, three=USA, four=USA}
</pre> 
<h2>Injecting Bean References:</h2>
<p>Following Bean definition will help you understand how to inject bean references as one of the collection's element. Even you can mix references and values all together as shown below:</p>
<pre class="prettyprint">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"&gt;

   &lt;!-- Bean Definition to handle references and values --&gt;
   &lt;bean id="..." class="..."&gt;

      &lt;!-- Passing bean reference  for java.util.List --&gt;
      &lt;property name="addressList"&gt;
        &lt;list&gt;
           &lt;ref bean="address1"/&gt;
           &lt;ref bean="address2"/&gt;
           &lt;value&gt;Pakistan&lt;/value&gt;
        &lt;/list&gt;
      &lt;/property&gt;

     &lt;!-- Passing bean reference  for java.util.Set --&gt;
     &lt;property name="addressSet"&gt;
        &lt;set&gt;
           &lt;ref bean="address1"/&gt;
           &lt;ref bean="address2"/&gt;
           &lt;value&gt;Pakistan&lt;/value&gt;
        &lt;/set&gt;
      &lt;/property&gt;

     &lt;!-- Passing bean reference  for java.util.Map --&gt;
     &lt;property name="addressMap"&gt;
        &lt;map&gt;
           &lt;entry key="one" value="NDIA"/&gt;
           &lt;entry key ="two" value-ref="address1"/&gt;
           &lt;entry key ="three" value-ref="address2"/&gt;
        &lt;/map&gt;
      &lt;/property&gt;

   &lt;/bean&gt;

&lt;/beans&gt;
</pre> 
<p>To use above bean definition, you need to define your setter methods in such a way that they should be able to handle references as well.</p>
<h2>Injecting null and empty string values</h2>
<p>If you need to pass an empty string as a value then you can pass it as follows:</p>
<pre class="prettyprint">
&lt;bean id="..." class="exampleBean"&gt;
   &lt;property name="email" value=""/&gt;
&lt;/bean&gt;
</pre> 
<p>The preceding example is equivalent to the Java code: exampleBean.setEmail("")</p>
<p>If you need to pass an NULL value then you can pass it as follows:</p>
<pre class="prettyprint">
&lt;bean id="..." class="exampleBean"&gt;
   &lt;property name="email"&gt;&lt;null/&gt;&lt;/property&gt;
&lt;/bean&gt;
</pre> 
<p>The preceding example is equivalent to the Java code: exampleBean.setEmail(null)</p>
<hr />
<div class="pre-btn">
<a href="spring_injecting_inner_beans.htm">Previous Page</a>
</div>
<div class="print-btn">
<a href="../cgi-bin/printpage.html" target="_blank">Print Version</a>
</div>
<div class="pdf-btn">
<a href="pdf/spring_injecting_collection.pdf" alt="Spring Injecting Collection" target="_blank">PDF Version</a>
</div>
<div class="nxt-btn">
<a href="spring_beans_autowiring.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
</div>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</div>
</div><!-- middlecol -->
<div id="rightcol">
<!-- AddThis Button BEGIN -->
<div class="addthis">
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook"></a>
<a class="addthis_button_twitter"></a>
<script type="text/javascript">
<!--
 document.write('<a class="addthis_button_google_plusone" g:plusone:count="false"></a>');
//-->
</script>
<a class="addthis_button_linkedin"></a>
<a class="addthis_button_email"></a>
<a class="addthis_button_compact"></a>
</div>
<script type="text/javascript" src="../../s7.addthis.com/js/250/addthis_widget.js#pubid=ra-4f661ec623a400f0"></script>
</div>
<!-- AddThis Button END -->
<div class="localad">
<a rel="nofollow" href="http://www.modernindianbabynames.com/" target="_blank" title="Modern Baby Names">Modern Baby Names</a>
</div>
<div class="localad">
<a rel="nofollow" href="http://www.photofuntoos.com/" target="_blank" title="Online Photo Editing">Online Photo Editing</a>
</div>
<div class="rightgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
</div><!-- rightcol -->
<div style="clear:both;"></div>
</div><!-- wrapper -->
<div id="footer">
<div class="wrapper">
<div id="bottommenu">
<a href="../asp.net/index.htm" target="_top">ASP.NET </a> |
<a href="../jquery/index.htm" target="_top">jQuery </a> |
<a href="../ajax/index.htm" target="_top">AJAX </a> |
<a href="../ant/index.htm" target="_top">ANT</a> |
<a href="../jsp/index.htm" target="_top">JSP </a> |
<a href="../servlets/index.htm" target="_top">Servlets </a> |
<a href="../log4j/index.htm" target="_top">log4j </a> |
<a href="../ibatis/index.htm" target="_top">iBATIS </a> |
<a href="../hibernate/index.htm" target="_top">Hibernate </a> |
<a href="../jdbc/index.htm" target="_top">JDBC </a> |
<a href="../struts_2/index.htm" target="_top">Struts </a> |
<a href="../html5/index.htm" target="_top">HTML5 </a> |
<a href="../sql/index.htm" target="_top">SQL </a> |
<a href="../mysql/index.htm" target="_top">MySQL </a> |
<a href="../cplusplus/index.htm" target="_top">C++ </a> |
<a href="../unix/index.htm" target="_top">UNIX </a>
</div>
<div id="copyright">
<p>Copyright &copy; 2013 by tutorialspoint. All Rights Reserved.</p>
</div>
</div>
</div>
</body>

<!-- Mirrored from www.tutorialspoint.com/spring/spring_injecting_collection.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 20:55:38 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>
