<!doctype html> 
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--><html lang="en"><!--<![endif]-->

<!-- Mirrored from www.tutorialspoint.com/struts_2/struts_interceptors.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 21:12:14 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="utf-8">
<title>Struts 2 Interceptors</title>
<link rel="shortcut icon" href="../favicon.png" type="image/x-icon" />
<meta name="description" content="Struts 2 Interceptors - Learn what is Basic Model View and Controller Architecture along with Struts 2 in simple and easy steps starting from Environment Setup, Architecture, Configuration, Actions, Interceptors, Results, Result Types, File Uploads, Database Access, Validations, Localization, Type Conversion, Tag Library, Exeption Handling and Annotations." />
<meta name="Keywords" content="Struts, Tutorials, Learning, Beginners, Environment Setup, Architecture, Configuration, Actions, Interceptors, Results, Result Types, File Uploads, Database Access, Validations, Localization, Type Conversion, Tag Library, Exeption Handling, Annotations." />
<base  />
<link rel="stylesheet" type="text/css" href="../scripts/style.css" />
<link rel="stylesheet" type="text/css" href="../scripts/prettify.css" />
<script type="text/javascript" src="../scripts/prettify.js"></script>
<style media="screen" type="text/css">
#topmenu a:hover {text-decoration:none;color:#5c83ba !important;background-color:transparent;font-weight:bold;}
#header{ 
background:#5c83ba !important;
}
#topmenu
{
background-color:#121212 !important;
}
#leftcol ul.menu li.heading 
{
background:#5c83ba !important;
border:1px solid #121212 !important;
}
#leftcol, #middlecol, #rightcol {min-height:1020px; padding:0px;}
</style>
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
</script>
</head>
<body onload="prettyPrint()">
<div id="header">
<div class="wrapper">
<h1 class="logo"><a href="../index.htm">Tutorials Point - Simply Easy Learning</a></h1>
<div id="search">
<form method="get" id="searchform" name="searchform" action="http://www.google.com/search" target="_blank">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com"/>
<input type="text" name="as_q" id="s" value="Search this site..." onfocus="if (this.value == 'Search this site...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search this site...';}"/>
<input value="FORID:11" name="cof" type="hidden"/>
<input type="hidden" name="ie" value="ISO-8859-1" />
<input class="submit btn" type="image" src="../images/icon-search.png" alt="Go"/>
</form>
</div>
</div>
</div>
<div id="topmenu">
<div class="wrapper">
<div id="left">
<a href="../index.htm" target="_top">HOME </a>
<a href="../java/index.htm" target="_top">JAVA </a>
<a href="../php/index.htm" target="_top">PHP </a>
<a href="../python/index.htm" target="_top">Python </a>
<a href="../ruby/index.htm" target="_top">Ruby </a>
<a href="../perl/index.htm" target="_top">Perl </a>
<a href="../html/index.htm" target="_top">HTML </a>
<a href="../css/index.htm" target="_top">CSS </a>
<a href="../javascript/index.htm" target="_top">Javascript </a>
<a href="../mysql/index.htm" target="_top">MySQL </a>
<a href="../cplusplus/index.htm" target="_top">C++ </a>
<a href="../unix/index.htm" target="_top">UNIX </a>
<a href="../more.htm" target="_top">MORE...</a>
</div>
<div id="right">
<a href="../references.htm" target="_top">REFERENCES</a> |
<a href="../forums/index.html" target="_top">FORUM</a> |
<a href="../about/index.htm" target="_top">ABOUT</a> |
<a href="../about/contact_us.htm" target="_top">CONTACT</a>
</div>
</div>
</div>
<div class="wrapper">
<div id="leftcol">
<div class="mini-logo">
<img src="../images/struts-mini-logo.png" alt="Struts Tutorial" />
</div>
<ul class="menu">
<li class="heading">Struts 2 Basics</li>
<li><a class="left" target="_top" href="index.htm">Struts2 Home</a></li>
<li><a class="left" target="_top" href="basic_mvc_architecture.htm">Basic MVC Architecture</a></li>
<li><a class="left" target="_top" href="struts_overview.htm">Struts2 Overview</a></li>
<li><a class="left" target="_top" href="struts_environment_setup.htm">Struts2 Environment Setup</a></li>
<li><a class="left" target="_top" href="struts_architecture.htm">Struts2 Architecture</a></li>
<li><a class="left" target="_top" href="struts_examples.htm">Struts2 Examples</a></li>
<li><a class="left" target="_top" href="struts_configuration.htm">Struts2 Configuration</a></li>
<li><a class="left" target="_top" href="struts_actions.htm">Struts2 Actions</a></li>
<li><a class="left" target="_top" href="struts_interceptors.htm"><b>Struts2 Interceptors</b></a></li>
<li><a class="left" target="_top" href="struts_result_types.htm">Struts2 Result Types</a></li>
<li><a class="left" target="_top" href="struts_value_stack_ognl.htm">Struts2 Value Stack/OGNL</a></li>
<li><a class="left" target="_top" href="struts_file_uploads.htm">Struts2 File Uploads</a></li>
<li><a class="left" target="_top" href="struts_database_access.htm">Struts2 Database Access</a></li>
<li><a class="left" target="_top" href="struts_sending_email.htm">Struts2 Sending Email</a></li>
<li><a class="left" target="_top" href="struts_validations.htm">Struts2 Validations</a></li>
<li><a class="left" target="_top" href="struts_localization.htm">Struts2 Localization</a></li>
<li><a class="left" target="_top" href="struts_type_conversion.htm">Struts2 Type Conversion</a></li>
<li><a class="left" target="_top" href="struts_themes_templates.htm">Struts2 Themes/Templates</a></li>
<li><a class="left" target="_top" href="struts_exception_handling.htm">Struts2 Exception Handling</a></li>
<li><a class="left" target="_top" href="struts_annotations.htm">Struts2 Annotations</a></li>
</ul>
<ul class="menu">
<li class="heading">Struts 2 Tags</li>
<li><a class="left" target="_top" href="struts_control_tags.htm">Struts2 Control Tags</a></li>
<li><a class="left" target="_top" href="struts_data_tags.htm">Struts2 Data Tags</a></li>
<li><a class="left" target="_top" href="struts_form_tags.htm">Struts2 Form Tags</a></li>
<li><a class="left" target="_top" href="struts_ajax_tags.htm">Struts2 Ajax Tags</a></li>
</ul>
<ul class="menu">
<li class="heading">Struts 2 Integrations</li>
<li><a class="left" target="_top" href="struts_spring.htm">Struts2 - Spring</a></li>
<li><a class="left" target="_top" href="struts_tiles.htm">Struts2 - Tiles</a></li>
<li><a class="left" target="_top" href="struts_hibernate.htm">Struts2 - Hibernate</a></li>
</ul>
<ul class="menu">
<li class="heading">Struts 2 Useful Resources</li>
<li><a class="left" target="_top" href="struts_quick_guide.htm">Struts2 Quick Guide</a></li>
<li><a class="left" target="_top" href="struts_useful_resources.htm">Struts2 Useful Resources</a></li>
</ul>
<ul class="menu">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="../developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="../computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="../computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div><!-- leftcol -->
<div id="middlecol">
<!-- PRINTING STARTS HERE -->
<div class="content">
<h1>Struts 2 Interceptors</h1>
<div class="topgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
<hr />
<div class="pre-btn">
<a href="struts_actions.htm">Previous Page</a>
</div>
<div class="nxt-btn">
<a href="struts_result_types.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
<p>Interceptors are conceptually the same as servlet filters or the JDKs Proxy class. Interceptors allow for crosscutting functionality to be implemented separately from the action as well as the framework. You can achieve the following using interceptors:</p>
<ul class="list">
<li><p>Providing preprocessing logic before the action is called.</p></li>
<li><p>Providing postprocessing logic after the action is called.</p></li>
<li><p>Catching exceptions so that alternate processing can be performed.</p></li>
</ul>
<p>Many of the features provided in the Struts2 framework are implemented using interceptors; examples include exception handling, file uploading, lifecycle callbacks and validation etc. In fact, as Struts2 bases much of its functionality on interceptors,
it is not unlikely to have 7 or 8 interceptors assigned per action.</p>
<h2>Struts2 Framework Interceptors:</h2>
<p>Struts 2 framework provides a good list of out-of-the-box interceptors that come preconfigured and ready to use. Few of the important interceptors are listed below:</p> 
<table class="src"> 
<tr><th style="width:5">SN </th><th>Interceptor &amp; Description</th></tr>
<tr><td>1</td><td><b>alias</b><br />Allows parameters to have different name aliases across requests.</td></tr> 
<tr><td>2</td><td><b>checkbox</b><br />Assists in managing check boxes by adding a parameter value of false for check boxes that are not checked.</td></tr> 
<tr><td>3</td><td><b>conversionError</b><br />Places error information from converting strings to parameter types into the action's field errors.</td></tr> 
<tr><td>4</td><td><b>createSession</b><br />Automatically creates an HTTP session if one does not already exist.</td></tr> 
<tr><td>5</td><td><b>debugging</b><br />Provides several different debugging screens to the developer.</td></tr> 
<tr><td>6</td><td><b>execAndWait</b><br />Sends the user to an intermediary waiting page while the action executes in the background.</td></tr> 
<tr><td>7</td><td><b>exception</b><br />Maps exceptions that are thrown from an action to a result, allowing automatic exception handling via redirection.</td></tr> 
<tr><td>8</td><td><b>fileUpload</b><br />Facilitates easy file uploading.</td></tr> 
<tr><td>9</td><td><b>i18n</b><br />Keeps track of the selected locale during a user's session.</td></tr> 
<tr><td>10</td><td><b>logger</b><br />Provides simple logging by outputting the name of the action being executed.</td></tr> 
<tr><td>11</td><td><b>params</b><br />Sets the request parameters on the action.</td></tr> 
<tr><td>12</td><td><b>prepare</b><br />This is typically used to do pre-processing work, such as setup database connections.</td></tr> 
<tr><td>13</td><td><b>profile</b><br />Allows simple profiling information to be logged for actions.</td></tr> 
<tr><td>14</td><td><b>scope</b><br />Stores and retrieves the action's state in the session or application scope.</td></tr> 
<tr><td>15</td><td><b>ServletConfig</b><br />Provides the action with access to various servlet-based information.</td></tr> 
<tr><td>16</td><td><b>timer</b><br />Provides simple profiling information in the form of how long the action takes to execute.</td></tr> 
<tr><td>17</td><td><b>token</b><br />Checks the action for a valid token to prevent duplicate formsubmission.</td></tr> 
<tr><td>18</td><td><b>validation</b><br />Provides validation support for actions</td></tr> 
</table>
<p>Please loook into Struts 2 documentation for complete detail on above mentioned interceptors. But I will show you how to use an interceptor in general in your Struts application.</p>
<h2>How to use Interceptors?</h2> 
<p>Let us see how to use an already existing interceptor to our "Hello World" program. We will use the <b>timer</b> interceptor whose purpose is to measure how long it took to execute an action method. Same time I'm using <b>params</b> interceptor whose purpose is to send the request parameters to  the action. You can try your example without using this interceptor and you will find that <b>name</b> property is not being set because parameter is not able to reach to the action.</p> 
<p>We will keep HelloWorldAction.java, web.xml, HelloWorld.jsp and index.jsp files as they have been created in Examples chapter but let us modify the <b>struts.xml</b> file to add an interceptor as follows </p> 
<pre class="prettyprint"> 
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE struts PUBLIC
   "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
   "http://struts.apache.org/dtds/struts-2.0.dtd"&gt;
&lt;struts&gt;
   &lt;constant name="struts.devMode" value="true" /&gt;
   &lt;package name="helloworld" extends="struts-default"&gt;
      &lt;action name="hello" 
         class="com.tutorialspoint.struts2.HelloWorldAction"
         method="execute"&gt;
         &lt;interceptor-ref name="params"/&gt;
         &lt;interceptor-ref name="timer" /&gt;
         &lt;result name="success"&gt;/HelloWorld.jsp&lt;/result&gt;
      &lt;/action&gt;
   &lt;/package&gt;
&lt;/struts&gt;
</pre>  
<p>Right click on the project name and click <b>Export &gt; WAR File</b> to create a War file. Then deploy this WAR in the Tomcat's webapps directory. Finally, start Tomcat server and try to access URL http://localhost:8080/HelloWorldStruts2/index.jsp. This will give you following screen:</p> 
<center> 
<img class="main" src="../images/helloworldstruts4.jpg" alt="Hello World Input" /> 
</center> 
<p>Now enter any word in the given text box and click Say Hello button to execute the defined action. Now if you will check the log generated, you will find following text:</p> 
<pre class="prettyprint"> 
INFO: Server startup in 3539 ms
27/08/2011 8:40:53 PM 
com.opensymphony.xwork2.util.logging.commons.CommonsLogger info
INFO: Executed action [//hello!execute] took 109 ms.
</pre> 
<p> Here bottom line is being generated because of <b>timer</b> interceptor which is telling that action took total 109ms to be executed.</p>
<h2>Create Custom Interceptors</h2>
<p>Using custom interceptors in your application is an elegant way to provide cross-cutting application features. Creating a custom interceptor is easy; the interface that needs to be extended is the following <b>Interceptor</b> interface:</p>
<pre class="prettyprint"> 
public interface Interceptor extends Serializable{
   void destroy();
   void init();
   String intercept(ActionInvocation invocation)
   throws Exception;
}
</pre>
<p>As the names suggest, the init() method provides a way to initialize the interceptor, and the destroy() method provides a facility for interceptor cleanup. Unlike actions, interceptors are reused across requests and need to be thread-safe, especially the intercept() method.</p>
<p>The <b>ActionInvocation</b> object provides access to the runtime environment. It allows access to the action itself and methods to invoke the action and determine whether the action has already been invoked.</p>
<p>If you have no need for initialization or cleanup code, the <b>AbstractInterceptor</b> class can be extended. This provides a default no-operation implementation of the init() and destroy() methods.</p>
<h2>Create Interceptor Class:</h2>
<p>Let us create following <b>MyInterceptor.java</b> in <b>Java Resources &gt; src</b> folder:</p> 
<pre class="prettyprint"> 
package com.tutorialspoint.struts2;

import java.util.*;
import com.opensymphony.xwork2.ActionInvocation;
import com.opensymphony.xwork2.interceptor.AbstractInterceptor;

public class MyInterceptor extends AbstractInterceptor {

   public String intercept(ActionInvocation invocation)throws Exception{

      /* let us do some pre-processing */
      String output = "Pre-Processing"; 
      System.out.println(output);

      /* let us call action or next interceptor */
      String result = invocation.invoke();

      /* let us do some post-processing */
      output = "Post-Processing"; 
      System.out.println(output);

      return result;
   }
}
</pre> 
<p>As you notice, actual action will be executed using the interceptor by <b>invocation.invoke()</b> call. So you can do some pre-processing and some post-processing based on your requirement.</p>
<p>The framework itself starts the process by making the first call to the ActionInvocation object's invoke(). Each time <b>invoke()</b> is called, ActionInvocation consults its state and executes whichever interceptor comes next. When all of the configured interceptors have been invoked, the invoke() method will cause the action itself to be executed. Following digram shows the same concept through a request flow:</p>
<center> 
<img class="main" src="../images/actioninvocation.jpg" alt="ActionInvocation" /> 
</center> 
<h2>Create Action Class:</h2>
<p>Let us create a java file HelloWorldAction.java under <b>Java Resources &gt; src</b> with a package name <b>com.tutorialspoint.struts2</b> with the contents given below.</p>
<pre class="prettyprint">
package com.tutorialspoint.struts2;

import com.opensymphony.xwork2.ActionSupport;

public class HelloWorldAction extends ActionSupport{
   private String name;

   public String execute() throws Exception {
      System.out.println("Inside action....");
      return "success";
   }  

   public String getName() {
      return name;
   }

   public void setName(String name) {
      this.name = name;
   }
}
</pre>
<p>This is a same class which we have seen in previous examples. We have standard getters and setter methods for the "name" property and an execute method that returns the string "success".</p>
<h2>Create a View</h2>
<p>Let us create the below jsp file <b>HelloWorld.jsp</b> in the WebContent folder in your eclipse project.</p>
<pre class="prettyprint">
&lt;%@ page contentType="text/html; charset=UTF-8" %&gt;
&lt;%@ taglib prefix="s" uri="/struts-tags" %&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Hello World&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
   Hello World, &lt;s:property value="name"/&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>
<h2>Create main page:</h2>
<p>We also need to create <b>index.jsp</b> in the WebContent folder. This file will serve as the initial action URL where a user can click to tell the Struts 2 framework to call the a defined method of the HelloWorldAction class and render the HelloWorld.jsp view.</p>
<pre class="prettyprint">
&lt;%@ page language="java" contentType="text/html; charset=ISO-8859-1"
   pageEncoding="ISO-8859-1"%&gt;
&lt;%@ taglib prefix="s" uri="/struts-tags"%&gt;
   &lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" 
"http://www.w3.org/TR/html4/loose.dtd"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Hello World&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
   &lt;h1&gt;Hello World From Struts2&lt;/h1&gt;
   &lt;form action="hello"&gt;
      &lt;label for="name"&gt;Please enter your name&lt;/label&gt;&lt;br/&gt;
      &lt;input type="text" name="name"/&gt;
      &lt;input type="submit" value="Say Hello"/&gt;
   &lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>
<p>The <b>hello</b> action defined in the above view file will be mapped to the HelloWorldAction class and its execute method using struts.xml file.</p>
<h2>Configuration Files</h2>
<p>Now we need to register our interceptor and then call it as we had called default interceptor in previous example. To register a newly defined interceptor, the &lt;interceptors&gt;...&lt;/interceptors&gt; tags are placed directly under the &lt;package&gt; tag ins <b>struts.xml</b> file. You can skip this step for a default interceptors as we did in our previous example. But here let us register and use it as follows:</p> 
<pre class="prettyprint"> 
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE struts PUBLIC
    "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
    "http://struts.apache.org/dtds/struts-2.0.dtd"&gt;

&lt;struts&gt;
   &lt;constant name="struts.devMode" value="true" /&gt;
   &lt;package name="helloworld" extends="struts-default"&gt;

      &lt;interceptors&gt;
         &lt;interceptor name="myinterceptor"
            class="com.tutorialspoint.struts2.MyInterceptor" /&gt;
      &lt;/interceptors&gt;

      &lt;action name="hello" 
         class="com.tutorialspoint.struts2.HelloWorldAction" 
         method="execute"&gt;
         &lt;interceptor-ref name="params"/&gt;
         &lt;interceptor-ref name="myinterceptor" /&gt;
         &lt;result name="success"&gt;/HelloWorld.jsp&lt;/result&gt;
      &lt;/action&gt;

   &lt;/package&gt;
&lt;/struts&gt;
</pre>
<p>It should be noted that you can register more than one interceptors inside <b>&lt;package&gt;</b> tag and same time you can call more than one interceptors inside the <b>&lt;action&gt;</b> tag. You can call same interceptor with the different actions.</p> 
<p>The web.xml file needs to be created under the WEB-INF folder under WebContent as follows:</p>
<pre class="prettyprint">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns="http://java.sun.com/xml/ns/javaee" 
   xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
   xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
   http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
   id="WebApp_ID" version="3.0"&gt;
   
   &lt;display-name&gt;Struts 2&lt;/display-name&gt;
   &lt;welcome-file-list&gt;
      &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;
   &lt;/welcome-file-list&gt;
   &lt;filter&gt;
      &lt;filter-name&gt;struts2&lt;/filter-name&gt;
      &lt;filter-class&gt;
         org.apache.struts2.dispatcher.FilterDispatcher
      &lt;/filter-class&gt;
   &lt;/filter&gt;

   &lt;filter-mapping&gt;
      &lt;filter-name&gt;struts2&lt;/filter-name&gt;
      &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
   &lt;/filter-mapping&gt;
&lt;/web-app&gt;
</pre>
<p>Right click on the project name and click <b>Export &gt; WAR File</b> to create a War file. Then deploy this WAR in the Tomcat's webapps directory. Finally, start Tomcat server and try to access URL http://localhost:8080/HelloWorldStruts2/index.jsp. This will give you following screen:</p> 
<center> 
<img class="main" src="../images/helloworldstruts4.jpg" alt="Hello World Input" /> 
</center> 
<p>Now enter any word in the given text box and click Say Hello button to execute the defined action. Now if you will check the log generated, you will find following text at the bottom:</p> 
<pre class="prettyprint"> 
Pre-Processing
Inside action....
Post-Processing
</pre> 
<h2>Stacking multiple Interceptors:</h2>
<p>As you can imagine, having to configure multiple interceptor for each action would quickly become extremely unmanageable.  For this reason, interceptors are managed with interceptor stacks. Here is an example, directly from the struts-default.xml file:</p>
<pre class="prettyprint"> 
&lt;interceptor-stack name="basicStack"&gt;
   &lt;interceptor-ref name="exception"/&gt;
   &lt;interceptor-ref name="servlet-config"/&gt;
   &lt;interceptor-ref name="prepare"/&gt;
   &lt;interceptor-ref name="checkbox"/&gt;
   &lt;interceptor-ref name="params"/&gt;
   &lt;interceptor-ref name="conversionError"/&gt;
&lt;/interceptor-stack&gt;
</pre> 
<p>The above stake is called <b>basicStack</b> and can be used in your configuration as shown below. This configuration node is placed under the &lt;package .../&gt; node. Each &lt;interceptor-ref .../&gt; tag references either an interceptor or an interceptor stack that has been configured before the current interceptor stack. It is therefore very important to ensure that the name is unique across all interceptor and interceptor stack configurations when configuring the initial interceptors and interceptor stacks.</p>
<p>We have already seen how to apply interceptor to the action, applying interceptor stacks is no different. In fact, we use exactly the same tag:</p> 
<pre class="prettyprint"> 
&lt;action name="hello" class="com.tutorialspoint.struts2.MyAction"&gt;
   &lt;interceptor-ref name="basicStack"/&gt;
   &lt;result&gt;view.jsp&lt;/result&gt;
&lt;/action
</pre> 
<p>The above registration of "basicStack" will register  complete stake of all the six interceptors with hello action. This should be noted that interceptors are executed in the order, in which they have been configured. For example, in above case, exception will be executed first, second would be servlet-config and so on.</p>
<hr />
<div class="pre-btn">
<a href="struts_actions.htm">Previous Page</a>
</div>
<div class="print-btn">
<a href="../cgi-bin/printpage.html" target="_blank">Print Version</a>
</div>
<div class="pdf-btn">
<a href="pdf/struts_interceptors.pdf" alt="Struts 2 Interceptors" target="_blank">PDF Version</a>
</div>
<div class="nxt-btn">
<a href="struts_result_types.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
</div>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</div>
</div><!-- middlecol -->
<div id="rightcol">
<!-- AddThis Button BEGIN -->
<div class="addthis">
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook"></a>
<a class="addthis_button_twitter"></a>
<script type="text/javascript">
<!--
 document.write('<a class="addthis_button_google_plusone" g:plusone:count="false"></a>');
//-->
</script>
<a class="addthis_button_linkedin"></a>
<a class="addthis_button_email"></a>
<a class="addthis_button_compact"></a>
</div>
<script type="text/javascript" src="../../s7.addthis.com/js/250/addthis_widget.js#pubid=ra-4f661ec623a400f0"></script>
</div>
<!-- AddThis Button END -->
<div class="localad">
<a rel="nofollow" href="http://www.modernindianbabynames.com/" target="_blank" title="Modern Baby Names">Modern Baby Names</a>
</div>
<div class="localad">
<a rel="nofollow" href="http://www.photofuntoos.com/" target="_blank" title="Online Photo Editing">Online Photo Editing</a>
</div>
<div class="rightgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
</div><!-- rightcol -->
<div style="clear:both;"></div>
</div><!-- wrapper -->
<div id="footer">
<div class="wrapper">
<div id="bottommenu">
<a href="../asp.net/index.htm" target="_top">ASP.NET </a> |
<a href="../jquery/index.htm" target="_top">jQuery </a> |
<a href="../ajax/index.htm" target="_top">AJAX </a> |
<a href="../ant/index.htm" target="_top">ANT</a> |
<a href="../jsp/index.htm" target="_top">JSP </a> |
<a href="../servlets/index.htm" target="_top">Servlets </a> |
<a href="../log4j/index.htm" target="_top">log4j </a> |
<a href="../ibatis/index.htm" target="_top">iBATIS </a> |
<a href="../hibernate/index.htm" target="_top">Hibernate </a> |
<a href="../jdbc/index.htm" target="_top">JDBC </a> |
<a href="index.htm" target="_top">Struts </a> |
<a href="../html5/index.htm" target="_top">HTML5 </a> |
<a href="../sql/index.htm" target="_top">SQL </a> |
<a href="../mysql/index.htm" target="_top">MySQL </a> |
<a href="../cplusplus/index.htm" target="_top">C++ </a> |
<a href="../unix/index.htm" target="_top">UNIX </a>
</div>
<div id="copyright">
<p>Copyright &copy; 2013 by tutorialspoint. All Rights Reserved.</p>
</div>
</div>
</div>
</body>

<!-- Mirrored from www.tutorialspoint.com/struts_2/struts_interceptors.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 21:12:15 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>