<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<!-- Mirrored from www.tutorialspoint.com/unix_system_calls/munlockall.htm by HTTrack Website Copier/3.x [XR&CO'2010], Mon, 15 Apr 2013 05:04:11 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>mlock() - Unix, Linux System Call</title>
<meta name="Description" Content="mlock() - Unix, Linux System Calls Manual Pages (Manpages) ,  Learning fundamentals of UNIX in simple and easy steps : A beginner's tutorial containing complete knowledge of Unix Korn  and Bourne Shell and Programming, Utilities, File System, Directories, Memory Management, Special Variables, vi editor, Processes" />
<meta name="Keywords" content="Unix, Tutorials, Learning, Operating, System, OS, Beginners, Basics, System Calls, Korn, Bourne, Shell,Programming, Utilities, File System, Directories, Memory Management, Special Variables, vi editor, Processes" />
<meta http-equiv="pragma" content="no-cache" />
<meta http-equiv="cache-control" content="no-cache" />
<base  />
<link rel="stylesheet" type="text/css" href="../tp.css" />
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
</script>
</head>
<body>
<center>
<a name="top"></a>
<table border="0" class="main" cellpadding="2" cellspacing="0">
<tr>
<td class="content" valign="top" align="left">
<a href="../index-2.html"><img src="../images/tp-logo.gif" border="0"  alt="Tutorials Point" /></a>
<br />
<br />
<div  class="search">
<!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0">
<tr><td nowrap="nowrap" valign="top" align="center" height="32">
<a href="http://www.google.com/">
<img src="../../www.google.com/logos/Logo_25wht.gif" border="0" alt="Google" align="middle"></img></a>
</td>
</tr>
<tr>
<td nowrap="nowrap">
<input type="hidden" name="domains" value="www.tutorialspoint.com"></input>
<input type="text" name="q" size="20" maxlength="255" value=""></input>
<input type="submit" name="sa" style="width:20px;font-weight:bold" value="..."></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="radio" name="sitesearch" value="" checked="checked"></input>
<font size="-1" color="#000000">Web</font>
</td>
<td>
<input type="radio" name="sitesearch" value="www.tutorialspoint.com"></input>
<font size="-1" color="#000000">This Site</font>
</td>
</tr>
</table>
<input type="hidden" name="client" value="pub-7133395778201029"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="cof" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"></input>
<input type="hidden" name="hl" value="en"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google -->
</div>
<br />
&nbsp;&nbsp;<b>Unix for Beginners</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="../unix/index.html">Unix - Home</a></li>
<li><a class="left" target="_top" href="../unix/unix-getting-started.html">Unix - Getting Started</a></li>
<li><a class="left" target="_top" href="../unix/unix-file-management.html">Unix - File Management</a></li>
<li><a class="left" target="_top" href="../unix/unix-directories.html">Unix - Directories</a></li>
<li><a class="left" target="_top" href="../unix/unix-file-permission.html">Unix - File Permission</a></li>
<li><a class="left" target="_top" href="../unix/unix-environment.html">Unix - Environment</a></li>
<li><a class="left" target="_top" href="../unix/unix-basic-utilities.html">Unix - Basic Utilities</a></li>
<li><a class="left" target="_top" href="../unix/unix-pipes-filters.html">Unix - Pipes &amp; Filters</a></li>
<li><a class="left" target="_top" href="../unix/unix-processes.html">Unix - Processes</a></li>
<li><a class="left" target="_top" href="../unix/unix-communication.html">Unix - Communication</a></li>
<li><a class="left" target="_top" href="../unix/unix-vi-editor.html">Unix - The vi Editor</a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>Unix Shell Programming</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="../unix/unix-shell.html">Unix - What is Shell?</a></li>
<li><a class="left" target="_top" href="../unix/unix-using-variables.html">Unix - Using Variables</a></li>
<li><a class="left" target="_top" href="../unix/unix-special-variables.html">Unix - Special Variables</a></li>
<li><a class="left" target="_top" href="../unix/unix-using-arrays.html">Unix - Using Arrays</a></li>
<li><a class="left" target="_top" href="../unix/unix-basic-operators.html">Unix - Basic Operators</a></li>
<li><a class="left" target="_top" href="../unix/unix-decision-making.html">Unix - Decision Making</a></li>
<li><a class="left" target="_top" href="../unix/unix-shell-loops.html">Unix - Shell Loops</a></li>
<li><a class="left" target="_top" href="../unix/unix-loop-control.html">Unix - Loop Control</a></li>
<li><a class="left" target="_top" href="../unix/unix-shell-substitutions.html">Unix - Shell Substitutions</a></li>
<li><a class="left" target="_top" href="../unix/unix-quoting-mechanisms.html">Unix - Quoting Mechanisms</a></li>
<li><a class="left" target="_top" href="../unix/unix-io-redirections.html">Unix - IO Redirections</a></li>
<li><a class="left" target="_top" href="../unix/unix-shell-functions.html">Unix - Shell Functions</a></li>
<li><a class="left" target="_top" href="../unix/unix-manpage-help.html">Unix - Manpage Help</a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>Advanced Unix</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="../unix/unix-regular-expressions.html">Unix - Regular Expressions</a></li>
<li><a class="left" target="_top" href="../unix/unix-file-system.html">Unix - File System Basics</a></li>
<li><a class="left" target="_top" href="../unix/unix-user-administration.html">Unix - User Administration</a></li>
<li><a class="left" target="_top" href="../unix/unix-system-performance.html">Unix - System Performance</a></li>
<li><a class="left" target="_top" href="../unix/unix-system-logging.html">Unix - System Logging</a></li>
<li><a class="left" target="_top" href="../unix/unix-signals-traps.html">Unix - Signals and Traps</a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>Unix Useful References</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="../unix/unix-useful-commands.html">Unix - Useful Commands</a></li>
<li><a class="left" target="_top" href="../unix/unix-quick-guide.html">Unix - Quick Guide</a></li>
<li><a class="left" target="_top" href="../unix/unix-builtin-functions.html">Unix - Builtin Functions</a></li>
<li><a class="left" target="_top" href="index.html"><b>Unix - System Calls</b></a></li>
<li><a class="left" target="_top" href="../unix_commands/index.html">Unix - Commands List</a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>Unix Useful Resources</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="../unix/unix-useful-resources.html">Unix Useful Resources</a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>Selected Reading</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="../computer_glossary.html">Computer Glossary</a></li>
<li><a class="left" target="_top" href="../computer_whoiswho.html">Who is Who</a></li>
</ul>
</div>
<br /><br />
<small>&copy; 2013 TutorialsPoint.COM </small>
</td>
<td valign="top">
<br /><br />
<table cellpadding="0" cellspacing="0">
<tr valign="middle">
<td  style="width:20px;"></td>
<td  class="top">
&nbsp;&nbsp;<a class="top" href="../index-2.html">Home</a>&nbsp;&nbsp;
</td>
<td  style="width:20px;"></td>
<td  class="top">
&nbsp;&nbsp;<a class="top" href="../references.html">References</a>&nbsp;&nbsp;
</td>
<td  style="width:20px;"></td>
<td  class="top">
&nbsp;&nbsp;<a class="top" href="../forums/index.html">Discussion Forums</a>&nbsp;&nbsp;
</td>
<td  style="width:20px;"></td>
<td  class="top">
&nbsp;&nbsp;<a class="top" href="../about/index.html">About TP</a>&nbsp;&nbsp;
</td>
</tr>
</table>
<table class="middle" cellpadding="5" cellspacing="0">
<tr>
<td>
<!-- PRINTING STARTS HERE -->
<h1>mlock() - Unix, Linux System Call</h1>
<hr />
<a href="index.html"><img alt="previous" border="0" src="../images/previous.gif" /></a>
<a href="index.html"><img alt="next" border="0" src="../images/next.gif" /></a>
<!-- AddThis Bookmark Button BEGIN -->
<a href="http://www.addthis.com/bookmark.php" rel="nofollow" onclick="addthis_url   = location.href; addthis_title = document.title; return addthis_click(this);" target="_blank"><img src="../images/add-this.gif" border="0" alt="AddThis Social Bookmark Button" /></a> <script type="text/javascript">var addthis_pub = 'tutorialspoint';</script><script type="text/javascript" src="http://s9.addthis.com/js/widget.php?v=10"></script>
<script type="text/javascript">var addthis_pub = 'tutorialspoint';</script><script type="text/javascript" src="http://s9.addthis.com/js/widget.php?v=10"></script>  
<!-- AddThis Bookmark Button END -->
<br />
<br />
<hr/><div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
  src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
<hr />
<h1 class="manpages">NAME</h1>
mlock, munlock, mlockall, munlockall - lock and unlock memory
<h1 class="manpages">SYNOPSIS</h1>
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>#include &lt;sys/mman.h&gt;</b> 
<p>
<b>int mlock(const void *</b><i>addr</i><b>, size_t </b><i>len</i><b>);
<p>
</b><b>int munlock(const void *</b><i>addr</i><b>, size_t </b><i>len</i><b>);
<p>
</b><b>int mlockall(int </b><i>flags</i><b>);
<p>
</b><b>int munlockall(void);
</pre></td></tr>
</table>
<h1 class="manpages">DESCRIPTION</h1>
</b><b>mlock</b>() and
<b>mlockall</b>() respectively lock part or all of the calling process&#146;s virtual address
space into RAM, preventing that memory from being paged to the
swap area.
<b>munlock</b>() and
<b>munlockall</b>() perform the converse operation,
respectively unlocking part or all of the calling process&#146;s virtual
address space, so that pages in the specified virtual address range may
once more to be swapped out if required by the kernel memory manager.
Memory locking and unlocking are performed in units of whole pages.
<h2><i>mlock() and munlock()</i></h2>
<b>mlock</b>() locks pages in the address range starting at
<i>addr</i> and continuing for
<i>len</i> bytes.
All pages that contain a part of the specified address range are
guaranteed to be resident in RAM when the call returns successfully;
the pages are guaranteed to stay in RAM until later unlocked.
<p>
<b>munlock</b>() unlocks pages in the address range starting at
<i>addr</i> and continuing for
<i>len</i> bytes.
After this call, all pages that contain a part of the specified
memory range can be moved to external swap space again by the kernel.
<h2><i>mlockall() and munlockall()</i></h2>
<b>mlockall</b>() locks all pages mapped into the address space of the
calling process. This includes the pages of the code, data and stack
segment, as well as shared libraries, user space kernel data, shared
memory, and memory-mapped files. All mapped pages are guaranteed
to be resident in RAM when the call returns successfully;
the pages are guaranteed to stay in RAM until later unlocked.
<p>
The
<i>flags</i> argument is constructed as the bitwise OR of one or more of the
following constants:
<table class="src" cellpadding="5" cellspacing="0" border="1">
<tr><th width="25%">Tag</th><th>Description</th></tr>
<tr valign="top"><td>
<b>MCL_CURRENT</b> </td><td valign="bottom">
Lock all pages which are currently mapped into the address space of
the process.
</td></tr>
<tr valign="top"><td>
<b>MCL_FUTURE</b> </td><td valign="bottom">
Lock all pages which will become mapped into the address space of the
process in the future. These could be for instance new pages required
by a growing heap and stack as well as new memory mapped files or
shared memory regions.
</td></tr>
<!-- PP ends table -->
</table>
If
<b>MCL_FUTURE</b> has been specified, then a later system call (e.g.,
<b>mmap</b>(2),
<b>sbrk</b>(2),
<b>malloc</b>(3)),
may fail if it would cause the number of locked bytes to exceed
the permitted maximum (see below).
In the same circumstances, stack growth may likewise fail:
the kernel will deny stack expansion and deliver a
<b>SIGSEGV</b> signal to the process.
<p>
<b>munlockall</b>() unlocks all pages mapped into the address space of the
calling process.
<h1 class="manpages">NOTES</h1>
Memory locking has two main applications: real-time algorithms and
high-security data processing. Real-time applications require
deterministic timing, and, like scheduling, paging is one major cause
of unexpected program execution delays. Real-time applications will
usually also switch to a real-time scheduler with
<b>sched_setscheduler</b>(2).
Cryptographic security software often handles critical bytes like
passwords or secret keys as data structures. As a result of paging,
these secrets could be transferred onto a persistent swap store medium,
where they might be accessible to the enemy long after the security
software has erased the secrets in RAM and terminated.
(But be aware that the suspend mode on laptops and some desktop
computers will save a copy of the system&#146;s RAM to disk, regardless
of memory locks.)
<p>
Real-time processes that are using
<b>mlockall</b>() to prevent delays on page faults should reserve enough
locked stack pages before entering the time-critical section,
so that no page fault can be caused by function calls.
This can be achieved by calling a function that allocates a
sufficiently large automatic variable (an array) and writes to the
memory occupied by this array in order to touch these stack pages.
This way, enough pages will be mapped for the stack and can be
locked into RAM. The dummy writes ensure that not even copy-on-write
page faults can occur in the critical section.
<p>
Memory locks are not inherited by a child created via
<b>fork</b>(2)
and are automatically removed (unlocked) during an
<b>execve</b>(2)
or when the process terminates.
<p>
The memory lock on an address range is automatically removed
if the address range is unmapped via
<b>munmap</b>(2).
<p>
Memory locks do not stack, i.e., pages which have been locked several times
by calls to
<b>mlock</b>() or
<b>mlockall</b>() will be unlocked by a single call to
<b>munlock</b>() for the corresponding range or by
<b>munlockall</b>(). Pages which are mapped to several locations or by several processes stay
locked into RAM as long as they are locked at least at one location or by
at least one process.
<h1 class="manpages">LINUX NOTES</h1>
Under Linux,
<b>mlock</b>() and
<b>munlock</b>() automatically round
<i>addr</i> down to the nearest page boundary.
However, POSIX.1-2001 allows an implementation to require that
<i>addr</i> is page aligned, so portable applications should ensure this.
<h2><i>Limits and permissions</i></h2>
In Linux 2.6.8 and earlier,
a process must be privileged
(<b>CAP_IPC_LOCK</b>) in order to lock memory and the
<b>RLIMIT_MEMLOCK</b> soft resource limit defines a limit on how much memory the process may lock.
<p>
Since Linux 2.6.9, no limits are placed on the amount of memory
that a privileged process can lock and the
<b>RLIMIT_MEMLOCK</b> soft resource limit instead defines a limit on how much memory an
unprivileged process may lock.
<h1 class="manpages">RETURN VALUE</h1>
On success these system calls return 0.
On error, -1 is returned,
<i>errno</i> is set appropriately, and no changes are made to any locks in the
address space of the process.
<h1 class="manpages">ERRORS</h1>
<table class="src" cellpadding="5" cellspacing="0" border="1">
<tr><th width="25%">Tag</th><th>Description</th></tr>
<tr valign="top"><td>
<b>ENOMEM</b> </td><td valign="bottom">
(Linux 2.6.9 and later) the caller had a non-zero
<b>RLIMIT_MEMLOCK</b> soft resource limit, but tried to lock more memory than the limit
permitted.
This limit is not enforced if the process is privileged
(<b>CAP_IPC_LOCK</b>). </td></tr>
<tr valign="top"><td>
<b>ENOMEM</b> </td><td valign="bottom">
(Linux 2.4 and earlier) the calling process tried to lock more than
half of RAM.
</td></tr>
<tr valign="top"><td>
<b>EPERM</b> </td><td valign="bottom">
(Linux 2.6.9 and later) the caller was not privileged
(<b>CAP_IPC_LOCK</b>) and its
<b>RLIMIT_MEMLOCK</b> soft resource limit was 0.
</td></tr>
<tr valign="top"><td>
<b>EPERM</b> </td><td valign="bottom">
(Linux 2.6.8 and earlier)
The calling process has insufficient privilege to call
<b>munlockall</b>(). Under Linux the
<b>CAP_IPC_LOCK</b> capability is required.
</td></tr>
<!-- Found tag TP -->
<tr><td colspan="2">
For
<b>mlock</b>() and
<b>munlock</b>(): </td></tr>
<tr valign="top"><td>
<b>EINVAL</b> </td><td valign="bottom">
<i>len</i> was negative.
</td></tr>
<tr valign="top"><td>
<b>EINVAL</b> </td><td valign="bottom">
(Not on Linux)
<i>addr</i> was not a multiple of the page size.
</td></tr>
<tr valign="top"><td>
<b>ENOMEM</b> </td><td valign="bottom">
Some of the specified address range does not correspond to mapped
pages in the address space of the process.
</td></tr>
<!-- Found tag TP -->
<tr><td colspan="2">
For
<b>mlockall</b>(): </td></tr>
<tr valign="top"><td>
<b>EINVAL</b> </td><td valign="bottom">
Unknown <i>flags</i> were specified.
</td></tr>
<!-- Found tag TP -->
<tr><td colspan="2">
For
<b>munlockall</b>(): </td></tr>
<tr valign="top"><td>
<b>EPERM</b> </td><td valign="bottom">
(Linux 2.6.8 and earlier) The caller was not privileged
(<b>CAP_IPC_LOCK</b>). </td></tr>
</table>
<h1 class="manpages">BUGS</h1>
In the 2.4 series Linux kernels up to and including 2.4.17,
a bug caused the
<b>mlockall</b>() <b>MCL_FUTURE</b> flag to be inherited across a
<b>fork</b>(2).
This was rectified in kernel 2.4.18.
<p>
Since kernel 2.6.9, if a privileged process calls
<i>mlockall(MCL_FUTURE)</i> and later drops privileges (loses the
<b>CAP_IPC_LOCK</b> capability by, for example,
setting its effective UID to a non-zero value),
then subsequent memory allocations (e.g.,
<b>mmap</b>(2),
<b>brk</b>(2))
will fail if the
<b>RLIMIT_MEMLOCK</b> resource limit is encountered.
<h1 class="manpages">AVAILABILITY</h1>
On POSIX systems on which
<b>mlock</b>() and
<b>munlock</b>() are available,
<b>_POSIX_MEMLOCK_RANGE</b> is defined in &lt;unistd.h&gt; and the number of bytes in a page
can be determined from the constant
<b>PAGESIZE</b> (if defined) in &lt;limits.h&gt; or by calling
<i>sysconf(_SC_PAGESIZE)</i>. <p>
On POSIX systems on which
<b>mlockall</b>() and
<b>munlockall</b>() are available,
<b>_POSIX_MEMLOCK</b> is defined in &lt;unistd.h&gt; to a value greater than 0. (See also
<b>sysconf</b>(3).)
<h1 class="manpages">CONFORMING TO</h1>
POSIX.1-2001, SVr4
<h1 class="manpages">SEE ALSO</h1>
<ul>
<li><p><a href="mmap.htm">mmap (2)</a></p></li>
<li><p><a href="shmctl.htm">shmctl (2)</a></p></li>
<li><p><a href="setrlimit.htm">setrlimit (2)</a></p></li>
</ul>
<br />
<hr />
<a href="index.html"><img alt="previous" border="0" src="../images/previous.gif" /></a>
<a href="index.html"><img alt="next" border="0" src="../images/next.gif" /></a>
<a href='../cgi-bin/printversion80ec.html?tutorial=unix_system_calls&amp;file=mlock.htm' target="_blank">
<img src="../images/print.gif" alt="Printer Friendly" border="0" /></a>
<br />
<hr />
<!-- PRINTING ENDS HERE -->
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text_image";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</td></tr>
</table>
</td>
<td class="right" align="center" valign="top">
<br /><br />
<table width="100%" cellpadding="0" cellspacing="0">
<tr valign="middle">
<td  class="top" style="border:0px;">
&nbsp;&nbsp;
</td>
</tr>
</table>
<table class="right"  cellpadding="0" cellspacing="0">
<tr>
<td align="center" class="right">
<p>
<u>Advertisements</u>
</p>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
  src="../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<br /><br /></td></tr></table>
</td></tr></table>
</center>
</body>

<!-- Mirrored from www.tutorialspoint.com/unix_system_calls/munlockall.htm by HTTrack Website Copier/3.x [XR&CO'2010], Mon, 15 Apr 2013 05:04:11 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>
