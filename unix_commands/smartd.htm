<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<!-- Mirrored from www.tutorialspoint.com/unix_commands/smartd.htm by HTTrack Website Copier/3.x [XR&CO'2010], Mon, 15 Apr 2013 05:05:26 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>smartd - Unix, Linux Command</title>
<meta name="Description" Content="smartd - Unix, Linux Command Manual Pages (Manpages) ,  Learning fundamentals of UNIX and Linux in simple and easy steps : A beginner's tutorial containing complete knowledge of Unix Korn  and Bourne Shell and Programming, Utilities, File System, Directories, Memory Management, Special Variables, vi editor, Processes" />
<meta name="Keywords" content="Unix, Tutorials, Learning, Operating, System, OS, Beginners, Basics, System Calls, Korn, Bourne, Shell,Programming, Utilities, File System, Directories, Memory Management, Special Variables, vi editor, Processes" />
<meta http-equiv="pragma" content="no-cache" />
<meta http-equiv="cache-control" content="no-cache" />
<base  />
<link rel="stylesheet" type="text/css" href="../tp.css" />
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
</script>
</head>
<body>
<center>
<a name="top"></a>
<table border="0" class="main" cellpadding="2" cellspacing="0">
<tr>
<td class="content" valign="top" align="left">
<a href="../index-2.html"><img src="../images/tp-logo.gif" border="0"  alt="Tutorials Point" /></a>
<br />
<br />
<div  class="search">
<!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0">
<tr><td nowrap="nowrap" valign="top" align="center" height="32">
<a href="http://www.google.com/">
<img src="../../www.google.com/logos/Logo_25wht.gif" border="0" alt="Google" align="middle"></img></a>
</td>
</tr>
<tr>
<td nowrap="nowrap">
<input type="hidden" name="domains" value="www.tutorialspoint.com"></input>
<input type="text" name="q" size="20" maxlength="255" value=""></input>
<input type="submit" name="sa" style="width:20px;font-weight:bold" value="..."></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="radio" name="sitesearch" value="" checked="checked"></input>
<font size="-1" color="#000000">Web</font>
</td>
<td>
<input type="radio" name="sitesearch" value="www.tutorialspoint.com"></input>
<font size="-1" color="#000000">This Site</font>
</td>
</tr>
</table>
<input type="hidden" name="client" value="pub-7133395778201029"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="cof" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"></input>
<input type="hidden" name="hl" value="en"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google -->
</div>
<br />
&nbsp;&nbsp;<b>Unix for Beginners</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="../unix/index.html">Unix - Home</a></li>
<li><a class="left" target="_top" href="../unix/unix-getting-started.html">Unix - Getting Started</a></li>
<li><a class="left" target="_top" href="../unix/unix-file-management.html">Unix - File Management</a></li>
<li><a class="left" target="_top" href="../unix/unix-directories.html">Unix - Directories</a></li>
<li><a class="left" target="_top" href="../unix/unix-file-permission.html">Unix - File Permission</a></li>
<li><a class="left" target="_top" href="../unix/unix-environment.html">Unix - Environment</a></li>
<li><a class="left" target="_top" href="../unix/unix-basic-utilities.html">Unix - Basic Utilities</a></li>
<li><a class="left" target="_top" href="../unix/unix-pipes-filters.html">Unix - Pipes &amp; Filters</a></li>
<li><a class="left" target="_top" href="../unix/unix-processes.html">Unix - Processes</a></li>
<li><a class="left" target="_top" href="../unix/unix-communication.html">Unix - Communication</a></li>
<li><a class="left" target="_top" href="../unix/unix-vi-editor.html">Unix - The vi Editor</a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>Unix Shell Programming</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="../unix/unix-shell.html">Unix - What is Shell?</a></li>
<li><a class="left" target="_top" href="../unix/unix-using-variables.html">Unix - Using Variables</a></li>
<li><a class="left" target="_top" href="../unix/unix-special-variables.html">Unix - Special Variables</a></li>
<li><a class="left" target="_top" href="../unix/unix-using-arrays.html">Unix - Using Arrays</a></li>
<li><a class="left" target="_top" href="../unix/unix-basic-operators.html">Unix - Basic Operators</a></li>
<li><a class="left" target="_top" href="../unix/unix-decision-making.html">Unix - Decision Making</a></li>
<li><a class="left" target="_top" href="../unix/unix-shell-loops.html">Unix - Shell Loops</a></li>
<li><a class="left" target="_top" href="../unix/unix-loop-control.html">Unix - Loop Control</a></li>
<li><a class="left" target="_top" href="../unix/unix-shell-substitutions.html">Unix - Shell Substitutions</a></li>
<li><a class="left" target="_top" href="../unix/unix-quoting-mechanisms.html">Unix - Quoting Mechanisms</a></li>
<li><a class="left" target="_top" href="../unix/unix-io-redirections.html">Unix - IO Redirections</a></li>
<li><a class="left" target="_top" href="../unix/unix-shell-functions.html">Unix - Shell Functions</a></li>
<li><a class="left" target="_top" href="../unix/unix-manpage-help.html">Unix - Manpage Help</a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>Advanced Unix</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="../unix/unix-regular-expressions.html">Unix - Regular Expressions</a></li>
<li><a class="left" target="_top" href="../unix/unix-file-system.html">Unix - File System Basics</a></li>
<li><a class="left" target="_top" href="../unix/unix-user-administration.html">Unix - User Administration</a></li>
<li><a class="left" target="_top" href="../unix/unix-system-performance.html">Unix - System Performance</a></li>
<li><a class="left" target="_top" href="../unix/unix-system-logging.html">Unix - System Logging</a></li>
<li><a class="left" target="_top" href="../unix/unix-signals-traps.html">Unix - Signals and Traps</a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>Unix Useful References</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="../unix/unix-useful-commands.html">Unix - Useful Commands</a></li>
<li><a class="left" target="_top" href="../unix/unix-quick-guide.html">Unix - Quick Guide</a></li>
<li><a class="left" target="_top" href="../unix/unix-builtin-functions.html">Unix - Builtin Functions</a></li>
<li><a class="left" target="_top" href="../unix_system_calls/index.html">Unix - System Calls</a></li>
<li><a class="left" target="_top" href="index.html"><b>Unix - Commands List</b></a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>Unix Useful Resources</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="../unix/unix-useful-resources.html">Unix Useful Resources</a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>Selected Reading</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="../computer_glossary.html">Computer Glossary</a></li>
<li><a class="left" target="_top" href="../computer_whoiswho.html">Who is Who</a></li>
</ul>
</div>
<br /><br />
<small>&copy; 2013 TutorialsPoint.COM </small>
</td>
<td valign="top">
<br /><br />
<table cellpadding="0" cellspacing="0">
<tr valign="middle">
<td  style="width:20px;"></td>
<td  class="top">
&nbsp;&nbsp;<a class="top" href="../index-2.html">Home</a>&nbsp;&nbsp;
</td>
<td  style="width:20px;"></td>
<td  class="top">
&nbsp;&nbsp;<a class="top" href="../references.html">References</a>&nbsp;&nbsp;
</td>
<td  style="width:20px;"></td>
<td  class="top">
&nbsp;&nbsp;<a class="top" href="../forums/index.html">Discussion Forums</a>&nbsp;&nbsp;
</td>
<td  style="width:20px;"></td>
<td  class="top">
&nbsp;&nbsp;<a class="top" href="../about/index.html">About TP</a>&nbsp;&nbsp;
</td>
</tr>
</table>
<table class="middle" cellpadding="5" cellspacing="0">
<tr>
<td>
<!-- PRINTING STARTS HERE -->
<h1>smartd - Unix, Linux Command</h1>
<hr />
<a href="index.html"><img alt="previous" border="0" src="../images/previous.gif" /></a>
<a href="index.html"><img alt="next" border="0" src="../images/next.gif" /></a>
<!-- AddThis Bookmark Button BEGIN -->
<a href="http://www.addthis.com/bookmark.php" rel="nofollow" onclick="addthis_url   = location.href; addthis_title = document.title; return addthis_click(this);" target="_blank"><img src="../images/add-this.gif" border="0" alt="AddThis Social Bookmark Button" /></a> <script type="text/javascript">var addthis_pub = 'tutorialspoint';</script><script type="text/javascript" src="http://s9.addthis.com/js/widget.php?v=10"></script>
<script type="text/javascript">var addthis_pub = 'tutorialspoint';</script><script type="text/javascript" src="http://s9.addthis.com/js/widget.php?v=10"></script>  
<!-- AddThis Bookmark Button END -->
<br />
<br />
<hr/><div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
  src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
<hr />
<h1 class="manpages">NAME</h1>
<b>smartd</b> - SMART Disk Monitoring Daemon
<p>
<h1 class="manpages">SYNOPSIS</h1>
<b>smartd [options]</b> <p>
<h1 class="manpages">FULL PATH</h1>
<b>/usr/sbin/smartd</b> <p>
<h1 class="manpages">PACKAGE VERSION</h1>
smartmontools-5.38 released 2008/03/10 at 10:44:07 GMT
<p>
<h1 class="manpages">DESCRIPTION</h1>
<b>smartd</b> is a daemon that monitors the Self-Monitoring, Analysis
and Reporting Technology (SMART) system built into many ATA-3 and
later ATA, IDE and SCSI-3 hard drives. The purpose of SMART is to
monitor the reliability of the hard drive and predict drive failures,
and to carry out different types of drive self-tests.  This version of
<b>smartd</b> is compatible with ATA/ATAPI-7 and earlier standards (see
<b>REFERENCES</b> below).
<p>
<b>smartd</b> will attempt to enable SMART monitoring on ATA devices
(equivalent to <b>smartctl -s on</b>) and polls these and SCSI devices
every 30 minutes (configurable), logging SMART errors and changes of
SMART Attributes via the SYSLOG interface.  The default location for
these SYSLOG notifications and warnings is <b>/var/log/messages</b>.
To change this default location, please see the <b>&#39;-l&#39;</b>
command-line option described below.
<p>
In addition to logging to a file, <b>smartd</b> can also be configured
to send email warnings if problems are detected.  Depending upon the
type of problem, you may want to run self-tests on the disk, back up
the disk, replace the disk, or use a manufacturer&#39;s utility to force
reallocation of bad or unreadable disk sectors.  If disk problems are
detected, please see the <b>smartctl</b> manual page and the
<b>smartmontools</b> web page/FAQ for further guidance.
<p>
If you send a <b>USR1</b> signal to <b>smartd</b> it will immediately
check the status of the disks, and then return to polling the disks
every 30 minutes. See the <b>&#39;-i&#39;</b> option below for additional
details.
<p>
<b>smartd</b> can be configured at start-up using the configuration
file <b>/etc/smartd.conf</b> (Windows: <b>./smartd.conf</b>).
If the configuration file is subsequently modified, <b>smartd</b>
can be told to re-read the configuration file by sending it a
<b>HUP</b> signal, for example with the command:
<b>killall -HUP smartd</b>.
(Windows: See NOTES below.)
<p>
On startup, if <b>smartd</b> finds a syntax error in the configuration
file, it will print an error message and then exit. However if
<b>smartd</b> is already running, then is told with a <b>HUP</b> signal
to re-read the configuration file, and then find a syntax error in
this file, it will print an error message and then continue, ignoring
the contents of the (faulty) configuration file, as if the <b>HUP</b>
signal had never been received.
<p>
When <b>smartd</b> is running in debug mode, the <b>INT</b> signal
(normally generated from a shell with CONTROL-C) is treated in the
same way as a <b>HUP</b> signal: it makes <b>smartd</b> reload its
configuration file. To exit <b>smartd</b> use CONTROL-&#92;
(Cygwin: 2x CONTROL-C, Windows: CONTROL-Break).
<p>
On startup, in the absence of the configuration file
<b>/etc/smartd.conf</b>, the <b>smartd</b> daemon first scans for all
devices that support SMART.  The scanning is done as follows:
<table class="src" cellpadding="5" cellspacing="0" border="1">
<tr><th width="25%">Tag</th><th>Description</th></tr>
<tr valign="top"><td width=9%>
<b>LINUX:</b>
</td><td>
Examine all entries <b>"/dev/hd[a-t]"</b> for IDE/ATA
devices, and <b>"/dev/sd[a-z]"</b> for SCSI devices.
</td></tr>
<tr valign="top"><td width=9%>
<b>FREEBSD:</b>
</td><td>
Examine all entries <b>"/dev/ad[0-9]+"</b> for IDE/ATA
devices and <b>"/dev/da[0-9]+"</b> for SCSI devices.
</td></tr>
<tr valign="top"><td width=9%>
<b>NETBSD/OPENBSD:</b>
</td><td>
Authoritative list of disk devices is obtained from sysctl
&#39;hw.disknames&#39;.
</td></tr>
<tr valign="top"><td width=9%>
<b>SOLARIS:</b>
</td><td>
Examine all entries <b>"/dev/rdsk/c?t?d?s?"</b> for IDE/ATA and SCSI disk
devices, and entries <b>"/dev/rmt/*"</b> for SCSI tape devices.
</td></tr>
<tr valign="top"><td width=9%>
<b>DARWIN:</b>
</td><td>
The IOService plane is scanned for ATA block storage devices.
</td></tr>
<tr valign="top"><td width=9%>
<b>WINDOWS 9x/ME</b>:
</td><td>
Examine all entries <b>"/dev/hd[a-d]"</b> (bitmask
from "\\.\SMARTVSD") for IDE/ATA devices.
Examine all entries <b>"/dev/scsi[0-9][0-f]"</b> for SCSI devices
on ASPI adapter 0-9, ID 0-15.
</td></tr>
<tr valign="top"><td width=9%>
<b>WINDOWS NT4/2000/XP/2003/Vista</b>:
</td><td>
Examine all entries <b>"/dev/sd[a-j]"</b> ("\\.\PhysicalDrive[0-9]")
for IDE/(S)ATA and SCSI disk devices
<p>
If a 3ware 9000 controller is installed, examine all entries
<b>"/dev/sdX,N"</b> for the first logical drive (&#39;unit&#39;
<b>"/dev/sdX"</b>) and all physical disks (&#39;ports&#39; <b>",N"</b>)
detected behind this controller. Same for a second controller if present.
</td></tr>
<tr valign="top"><td width=9%>
<b>CYGWIN</b>:
</td><td>
See "WINDOWS NT4/2000/XP/2003/Vista" above.
</td></tr>
<tr valign="top"><td width=9%>
<b>OS/2,eComStation</b>:
</td><td>
Use the form <b>"/dev/hd[a-z]"</b> for IDE/ATA devices.
</td></tr>
<!-- PP ends table -->
</table>
<b>smartd</b> then monitors
for <i>all</i> possible SMART errors (corresponding to the <b>&#39;-a&#39;</b>
Directive in the configuration file; see <b>CONFIGURATION FILE</b>
below).
<p>
<h1 class="manpages"></h1>
OPTIONS
Long options are not supported on all systems.  Use <b>&#39;smartd
-h&#39;</b> to see the available options.
<table class="src" cellpadding="5" cellspacing="0" border="1">
<tr><th width="25%">Tag</th><th>Description</th></tr>
<tr valign="top"><td colspan="2">
<b>-c FILE, --configfile=FILE</b> </td></tr><tr valign="top"><td width=6%>&nbsp;</td><td>
<p>
Read <b>smartd</b> configuration Directives from FILE, instead of from
the default location <b>/etc/smartd.conf</b> (Windows: <b>./smartd.conf</b>).
If FILE does <b>not</b> exist, then <b>smartd</b> will print an error
message and exit with nonzero status.  Thus, &#39;-c /etc/smartd.conf&#39;
can be used to verify the existence of the default configuration file.
<p>
By using &#39;-&#39; for FILE, the configuration is read from standard
input. This is useful for commands like:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>echo /dev/hdb -m user@home -M test | smartd -c - -q onecheck</b> 
</pre></td></tr>
</table>
to perform quick and simple checks without a configuration file.
<p>
</td></tr>
<tr valign="top"><td colspan="2">
<b>-d, --debug</b> </td></tr><tr valign="top"><td width=6%>&nbsp;</td><td>
Runs <b>smartd</b> in "debug" mode. In this mode, it displays status
information to STDOUT rather than logging it to SYSLOG and does not
<b>fork(2)</b> into the background and detach from the controlling
terminal.  In this mode, <b>smartd</b> also prints more verbose
information about what it is doing than when operating in "daemon"
mode. In this mode, the <b>QUIT</b> signal (normally generated from a
terminal with CONTROL-C) makes <b>smartd</b> reload its configuration
file.  Please use CONTROL-&#92; to exit
(Cygwin: 2x CONTROL-C, Windows: CONTROL-Break).
<p>
Windows only: The "debug" mode can be toggled by the command
<b>smartd sigusr2</b>. A new console for debug output is opened when
debug mode is enabled.
</td></tr>
<tr valign="top"><td colspan="2">
<b>-D, --showdirectives</b> </td></tr><tr valign="top"><td width=6%>&nbsp;</td><td>
Prints a list (to STDOUT) of all the possible Directives which may
appear in the configuration file /etc/smartd.conf, and then exits.
These Directives are also described later in this man page. They may
appear in the configuration file following the device name.
</td></tr>
<tr valign="top"><td colspan="2">
<b>-h, --help, --usage</b> </td></tr><tr valign="top"><td width=6%>&nbsp;</td><td>
Prints usage message to STDOUT and exits.
</td></tr>
<tr valign="top"><td colspan="2">
<b>-i N, --interval=N</b> </td></tr><tr valign="top"><td width=6%>&nbsp;</td><td>
Sets the interval between disk checks to <i>N</i> seconds, where
<i>N</i> is a decimal integer.  The minimum allowed value is ten and
the maximum is the largest positive integer that can be represented on
your system (often 2^31-1).  The default is 1800 seconds.
<p>
Note that the superuser can make <b>smartd</b> check the status of the
disks at any time by sending it the <b>SIGUSR1</b> signal, for example
with the command:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>kill -SIGUSR1 &lt;pid&gt;</b> 
</pre></td></tr>
</table>
where <b>&lt;pid&gt;</b> is the process id number of <b>smartd</b>.  One may
also use:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>killall -USR1 smartd</b> 
</pre></td></tr>
</table>
for the same purpose.
(Windows: See NOTES below.)
<p>
</td></tr>
<tr valign="top"><td colspan="2">
<b>-l FACILITY, --logfacility=FACILITY</b> </td></tr><tr valign="top"><td width=6%>&nbsp;</td><td>
Uses syslog facility FACILITY to log the messages from <b>smartd</b>.
Here FACILITY is one of <i>local0</i>, <i>local1</i>, ..., <i>local7</i>,
or <i>daemon</i> [default].  If this command-line option is not used,
then by default messages from <b>smartd</b> are logged to the facility
<i>daemon</i>.
<p>
If you would like to have <b>smartd</b> messages logged somewhere other
than the default <b>/var/log/messages</b> location, this can typically
be accomplished with (for example) the following steps:
<table class="src" cellpadding="5" cellspacing="0" border="1">
<tr><th width="25%">Tag</th><th>Description</th></tr>
<tr><td width=1%>&nbsp;</td><td>
<table class="src" cellpadding="5" cellspacing="0" border="1">
<tr><th width="25%">Tag</th><th>Description</th></tr>
<tr valign="top"><td width=4%>
<b>[1]</b>
</td><td>
Modify the script that starts <b>smartd</b> to include the <b>smartd</b>
command-line argument &#39;-l local3&#39;.  This tells <b>smartd</b> to log its
messages to facility <b>local3</b>.
</td></tr>
<tr valign="top"><td width=4%>
<b>[2]</b>
</td><td>
Modify the <b>syslogd</b> configuration file (typically
<b>/etc/syslog.conf</b>) by adding a line of the form:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>local3.* /var/log/smartd.log</b>
</pre></td></tr>
</table>
This tells <b>syslogd</b> to log all the messages from facility <b>local3</b> to
the designated file: /var/log/smartd.log.
</td></tr>
<tr valign="top"><td width=4%>
<b>[3]</b>
</td><td>
Tell <b>syslogd</b> to re-read its configuration file, typically by
sending the <b>syslogd</b> process a <b>SIGHUP</b> hang-up signal.
</td></tr>
<tr valign="top"><td width=4%>
<b>[4]</b>
</td><td>
Start (or restart) the <b>smartd</b> daemon.
</td></tr>
</table>
</td></tr>
</table>
</td></tr>
<tr valign="top"><td>
<b></b> </td><td valign="bottom">
For more detailed information, please refer to the man pages for
<b>syslog.conf</b>, <b>syslogd</b>, and <b>syslog</b>.  You may also want
to modify the log rotation configuration files; see the man pages for
<b>logrotate</b> and examine your system&#39;s /etc/logrotate.conf file.
<p>
Cygwin: Support for <b>syslogd</b> as described above is available starting with Cygwin 1.5.15.
On older releases or if no local <b>syslogd</b> is running, the &#39;-l&#39; option has no effect.
In this case, all <b>syslog</b> messages are written to Windows event log
or to file <b>C:/CYGWIN_SYSLOG.TXT</b> if the event log is not available.
<p>
Windows: Some <b>syslog</b> functionality is implemented
internally in <b>smartd</b> as follows: If no &#39;-l&#39; option
(or &#39;-l daemon&#39;) is specified, messages are written to Windows
event log or to file <b>./smartd.log</b> if event log is not available
(Win9x/ME or access denied). By specifying other values of FACILITY,
log output is redirected as follows:
&#39;-l local0&#39; to file <b>./smartd.log</b>,
&#39;-l local1&#39; to standard output (redirect with &#39;&gt;&#39; to any file),
&#39;-l local2&#39; to standard error,
&#39;-l local[3-7]&#39;: to file <b>./smartd[1-5].log</b>.
<p>
When using the event log, the enclosed utility <b>syslogevt.exe</b>
should be registered as an event message file to avoid error
messages from the event viewer. Use &#39;<b>syslogevt -r smartd</b>&#39;
to register, &#39;<b>syslogevt -u smartd</b>&#39; to unregister and
&#39;<b>syslogevt</b>&#39; for more help.
<p>
</td></tr>
<tr valign="top"><td colspan="2">
<b>-n, --no-fork</b> </td></tr><tr valign="top"><td width=4%>&nbsp;</td><td>
Do not fork into background; this is useful when executed from modern
init methods like initng, minit or supervise.
<p>
On Cygwin, this allows running <b>smartd</b> as service via cygrunsrv,
see NOTES below.
<p>
On Windows, this option is not available, use &#39;--service&#39; instead.
<p>
</td></tr>
<tr valign="top"><td colspan="2">
<b>-p NAME, --pidfile=NAME</b> </td></tr><tr valign="top"><td width=4%>&nbsp;</td><td>
Writes pidfile <i>NAME</i> containing the <b>smartd</b> Process ID
number (PID).  To avoid symlink attacks make sure the directory to
which pidfile is written is only writable for root.  Without this
option, or if the --debug option is given, no PID file is written on
startup.  If <b>smartd</b> is killed with a maskable signal then the
pidfile is removed.
</td></tr>
<tr valign="top"><td colspan="2">
<b>-q WHEN, --quit=WHEN</b> </td></tr><tr valign="top"><td width=4%>&nbsp;</td><td>
Specifies when, if ever, <b>smartd</b> should exit.  The valid
arguments are to this option are:
<p>
<i>nodev</i> - Exit if there are no devices to monitor, or if any errors are found
at startup in the configuration file.  This is the default.
<p>
<i>errors</i> - Exit if there are no devices to monitor, or if any errors are found
in the configuration file /etc/smartd.conf at startup or whenever it
is reloaded.
<p>
<i>nodevstartup</i> - Exit if there are no devices to monitor at startup.  But continue
to run if no devices are found whenever the configuration file is
reloaded.
<p>
<i>never</i> - Only exit if a fatal error occurs (no remaining system memory,
invalid command line arguments). In this mode, even if there are no
devices to monitor, or if the configuration file
<b>/etc/smartd.conf</b> has errors, <b>smartd</b> will continue to run,
waiting to load a configuration file listing valid devices.
<p>
<i>onecheck</i> - Start <b>smartd</b> in debug mode, then register devices, then check
device&#39;s SMART status once, and then exit with zero exit status if all
of these steps worked correctly.
<p>
This last option is intended for &#39;distribution-writers&#39; who want to
create automated scripts to determine whether or not to automatically
start up <b>smartd</b> after installing smartmontools.  After starting
<b>smartd</b> with this command-line option, the distribution&#39;s install
scripts should wait a reasonable length of time (say ten seconds).  If
<b>smartd</b> has not exited with zero status by that time, the script
should send <b>smartd</b> a SIGTERM or SIGKILL and assume that
<b>smartd</b> will not operate correctly on the host.  Conversely, if
<b>smartd</b> exits with zero status, then it is safe to run
<b>smartd</b> in normal daemon mode. If <b>smartd</b> is unable to
monitor any devices or encounters other problems then it will return
with non-zero exit status.
<p>
<i>showtests</i> - Start <b>smartd</b> in debug mode, then register devices, then write
a list of future scheduled self tests to stdout, and then exit with zero
exit status if all of these steps worked correctly.
Device&#146;s SMART status is not checked.
<p>
This option is intended to test whether the &#146;-s REGEX&#146; directives in
smartd.conf will have the desired effect. The output lists the next test
schedules, limited to 5 tests per type and device. This is followed by a
summary of all tests of each device within the next 90 days.
</td></tr>
<tr valign="top"><td colspan="2">
<b>-r TYPE, --report=TYPE</b> </td></tr><tr valign="top"><td width=4%>&nbsp;</td><td>
Intended primarily to help
<b>smartmontools</b> developers understand the behavior of
<b>smartmontools</b> on non-conforming or poorly-conforming hardware.  This option reports
details of
<b>smartd</b>
transactions with the device.  The option can be used multiple times.
When used just once, it shows a record of the ioctl() transactions
with the device.  When used more than once, the detail of these ioctl()
transactions are reported in greater detail.  The valid arguments to
this option are:
<p>
<i>ioctl</i> - report all ioctl() transactions.
<p>
<i>ataioctl</i> - report only ioctl() transactions with ATA devices.
<p>
<i>scsiioctl</i> - report only ioctl() transactions with SCSI devices.
<p>
Any argument may include a positive integer to specify the level of
detail that should be reported.  The argument should be followed by a
comma then the integer with no spaces.  For example, <i>ataioctl,2</i>
The default level is 1, so &#39;-r ataioctl,1&#39; and &#39;-r ataioctl&#39; are
equivalent.
<p>
</td></tr>
<tr valign="top"><td colspan="2">
<b>--service</b> </td></tr><tr valign="top"><td width=4%>&nbsp;</td><td>
Cygwin and Windows only: Enables <b>smartd</b> to run as a Windows service.
<p>
On Cygwin, this option is kept for backward compatibility only.
It has the same effect as &#39;-n, --no-fork&#39;, see above.
<p>
On Windows, this option enables the buildin service support.
The option must be specified in the service command line as the first
argument. It should not be used from console.
See NOTES below for details.
<p>
</td></tr>
<tr valign="top"><td colspan="2">
<b>-V, --version, --license, --copyright</b> </td></tr><tr valign="top"><td width=4%>&nbsp;</td><td>
Prints license, copyright, and CVS version information onto
STDOUT and then exits. Please include this information if you are
reporting bugs, or have specific questions about the behavior of
<b>smartd</b>.
<p>
</td></tr>
</table>
<h1 class="manpages">EXAMPLES</h1>
<p>
<b></b> smartd
Runs the daemon in forked mode. This is the normal way to run
<b>smartd</b>.
Entries are logged to SYSLOG (by default
<b>/var/log/messages.)</b> <p>
<b></b> smartd -d -i 30
Run in foreground (debug) mode, checking the disk status
every 30 seconds.
<p>
<b></b> smartd -q onecheck
Registers devices, and checks the status of the devices exactly
once. The exit status (the bash
<b>$?</b> variable) will be zero if all went well, and nonzero if no devices
were detected or some other problem was encountered.
<p>
Note that <b>smartmontools</b> provides a start-up script in
<b>/etc/rc.d/init.d/smartd</b> which is responsible for starting and
stopping the daemon via the normal init interface.  Using this script,
you can start <b>smartd</b> by giving the command:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>/etc/rc.d/init.d/smartd start</b> 
</pre></td></tr>
</table>
and stop it by using the command:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>/etc/rc.d/init.d/smartd stop</b> 
<p>
</pre></td></tr>
</table>
If you want <b>smartd</b> to start running whenever your machine is
booted, this can be enabled by using the command:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>/sbin/chkconfig --add smartd</b> 
</pre></td></tr>
</table>
and disabled using the command:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>/sbin/chkconfig --del smartd</b> 
</pre></td></tr>
</table>
<p>
<p>
<h1 class="manpages">CONFIGURATION FILE /etc/smartd.conf</h1>
In the absence of a configuration file, under Linux
<b>smartd</b>
will try to open the 20 ATA devices
<b>/dev/hd[a-t]</b> and the 26 SCSI devices
<b>/dev/sd[a-z].</b> Under FreeBSD,
<b>smartd</b>
will try to open all existing ATA devices (with entries in /dev)
<b>/dev/ad[0-9]+</b> and all existing SCSI devices
<b>/dev/da[0-9]+.</b> Under NetBSD/OpenBSD,
<b>smartd</b>
will try to open all existing ATA devices (with entries in /dev)
<b>/dev/wd[0-9]+c</b> and all existing SCSI devices
<b>/dev/sd[0-9]+c.</b> Under Solaris <b>smartd</b> will try to open all entries <b>"/dev/rdsk/c?t?d?s?"</b> for IDE/ATA and SCSI disk
devices, and entries <b>"/dev/rmt/*"</b> for SCSI tape devices.
Under Windows <b>smartd</b> will try to open all entries <b>"/dev/hd[a-j]"</b> ("\\.\PhysicalDrive[0-9]")
for IDE/ATA devices on WinNT4/2000/XP, <b>"/dev/hd[a-d]"</b>
(bitmask from "\\.\SMARTVSD") for IDE/ATA devices on Win95/98/98SE/ME,
and <b>"/dev/scsi[0-9][0-7]"</b> (ASPI adapter 0-9, ID 0-7) for SCSI
devices on all versions of Windows.
Under Darwin, <b>smartd</b> will open any ATA block storage device.
<p>
This can be annoying if you have an ATA or SCSI device that hangs or
misbehaves when receiving SMART commands.  Even if this causes no
problems, you may be annoyed by the string of error log messages about
block-major devices that can&#39;t be found, and SCSI devices that can&#39;t
be opened.
<p>
One can avoid this problem, and gain more control over the types of
events monitored by
<b>smartd</b>,
by using the configuration file
<b>/etc/smartd.conf.</b> This file contains a list of devices to monitor, with one device per
line.  An example file is included with the
<b>smartmontools</b> distribution. You will find this sample configuration file in
<b>/usr/share/doc/smartmontools-5.38/</b>. For security, the configuration file
should not be writable by anyone but root. The syntax of the file is as
follows:
<table class="src" cellpadding="5" cellspacing="0" border="1">
<tr><th width="25%">Tag</th><th>Description</th></tr>
<tr valign="top"><td width=4%>
o
</td><td>
There should be one device listed per line, although you may have
lines that are entirely comments or white space.
</td></tr>
<tr valign="top"><td width=4%>
o
</td><td>
Any text following a hash sign &#39;#&#39; and up to the end of the line is
taken to be a comment, and ignored.
</td></tr>
<tr valign="top"><td width=4%>
o
</td><td>
Lines may be continued by using a backslash &#39;&#92;&#39; as the last
non-whitespace or non-comment item on a line.
</td></tr>
<tr valign="top"><td width=4%>
o
</td><td>
Note: a line whose first character is a hash sign &#39;#&#39; is treated as
a white-space blank line, <b>not</b> as a non-existent line, and will
<b>end</b> a continuation line.
</td></tr>
<!-- PP ends table -->
</table>
Here is an example configuration file.  It&#39;s for illustrative purposes
only; please don&#39;t copy it onto your system without reading to the end
of the
<b>DIRECTIVES</b> Section below!
<p>
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>################################################</b> 
<b># This is an example smartd startup config file</b> 
<b># /etc/smartd.conf for monitoring three</b> 
<b># ATA disks, three SCSI disks, six ATA disks</b> 
<b># behind two 3ware controllers, three SATA disks</b> 
<b># directly connected to the highpoint rocket-</b> 
<b># raid controller, two SATA disks connected to</b> 
<b># the highpoint rocketraid controller via a pmport</b> 
<b># device and one SATA disk.</b> 
<b>#</b> 
<b># First ATA disk on two different interfaces. On</b> 
<b># the second disk, start a long self-test every</b> 
<b># Sunday between 3 and 4 am.</b> 
<b>#</b> 
<b>  /dev/hda -a -m <a href="mailto:admin@example.com">admin@example.com</a>,root@localhost</b> 
<b>  /dev/hdc -a -I 194 -I 5 -i 12 -s L/../../7/03</b> 
<b>#</b> 
<b># SCSI disks. Send a TEST warning email to admin on</b> 
<b># startup.</b> 
<b>#</b> 
<b>  /dev/sda</b> 
<b>  /dev/sdb -m <a href="mailto:admin@example.com">admin@example.com</a> -M test</b> 
<b>#</b> 
<b># Strange device. It&#39;s SCSI. Start a scheduled</b> 
<b># long self test between 5 and 6 am Monday/Thursday</b> 
<b>  /dev/weird -d scsi -s L/../../(1|4)/05</b> 
<b>#</b> 
<b># An ATA disk may appear as a SCSI device to the</b> 
<b># OS. If a SCSI to ATA Translation (SAT) layer</b> 
<b># is between the OS and the device then this can be</b> 
<b># flagged with the &#146;-d sat&#146; option. This situation</b> 
<b># may become common with SATA disks in SAS and FC</b> 
<b># environments.</b> 
<b>  /dev/sda -a -d sat</b> 
<b>#</b> 
<b># Four ATA disks on a 3ware 6/7/8000 controller.</b> 
<b># Start short self-tests daily between midnight and 1am,</b> 
<b># 1-2, 2-3, and 3-4 am. Starting with the Linux 2.6</b> 
<b># kernel series, /dev/sdX is deprecated in favor of</b> 
<b># /dev/tweN. For example replace /dev/sdc by /dev/twe0</b> 
<b># and /dev/sdd by /dev/twe1.</b> 
<b>  /dev/sdc -d 3ware,0 -a -s S/../.././00</b> 
<b>  /dev/sdc -d 3ware,1 -a -s S/../.././01</b> 
<b>  /dev/sdd -d 3ware,2 -a -s S/../.././02</b> 
<b>  /dev/sdd -d 3ware,3 -a -s S/../.././03</b> 
<b>#</b> 
<b># Two ATA disks on a 3ware 9000 controller.</b> 
<b># Start long self-tests Sundays between midnight and</b> 
<b># 1am and 2-3 am</b> 
<b>  /dev/twa0 -d 3ware,0 -a -s L/../../7/00</b> 
<b>  /dev/twa0 -d 3ware,1 -a -s L/../../7/02</b> 
<b>#</b> 
<b># Three SATA disks on a highpoint rocketraid controller.</b> 
<b># Start short self-tests daily between 1-2, 2-3, and</b> 
<b># 3-4 am.</b> 
<b>  /dev/sde -d hpt,1/1 -a -s S/../.././01</b> 
<b>  /dev/sde -d hpt,1/2 -a -s S/../.././02</b> 
<b>  /dev/sde -d hpt,1/3 -a -s S/../.././03</b> 
<b>#</b> 
<b># Two SATA disks connected to a highpoint rocketraid</b> 
<b># via a pmport device. Start long self-tests Sundays</b> 
<b># between midnight and 1am and 2-3 am.</b> 
<b>  /dev/sde -d hpt,1/4/1 -a -s L/../../7/00</b> 
<b>  /dev/sde -d hpt,1/4/2 -a -s L/../../7/02</b> 
<b>#</b> 
<b># The following line enables monitoring of the</b> 
<b># ATA Error Log and the Self-Test Error Log.</b> 
<b># It also tracks changes in both Prefailure</b> 
<b># and Usage Attributes, apart from Attributes</b> 
<b># 9, 194, and 231, and shows continued lines:</b> 
<b>#</b> 
<b>  /dev/hdd -l error &#92;</b> 
<b>           -l selftest &#92;</b> 
<b>           -t &#92;      # Attributes not tracked:</b> 
<b>           -I 194 &#92;  # temperature</b> 
<b>           -I 231 &#92;  # also temperature</b> 
<b>           -I 9      # power-on hours</b> 
<b>#</b> 
<b>################################################</b> 
</pre></td></tr>
</table>
<p>
<p>
<h1 class="manpages">CONFIGURATION FILE DIRECTIVES</h1>
<p>
<p>
If the first non-comment entry in the configuration file is the text
string
<b>DEVICESCAN</b> in capital letters, then
<b>smartd</b>
will ignore any remaining lines in the configuration file, and will
scan for devices.
<b>DEVICESCAN</b> may optionally be followed by Directives that will apply to all
devices that are found in the scan.  Please see below for additional
details.
<p>
<p>
The following are the Directives that may appear following the device
name or
<b>DEVICESCAN</b> on any line of the
<b>/etc/smartd.conf</b> configuration file. Note that
<b>these are NOT command-line options for</b> <b>smartd</b>.
The Directives below may appear in any order, following the device
name.
<p>
<b>For an ATA device,</b> if no Directives appear, then the device will be monitored
as if the &#39;-a&#39; Directive (monitor all SMART properties) had been given.
<p>
<b>If a SCSI disk is listed,</b> it will be monitored at the maximum implemented level: roughly
equivalent to using the &#39;-H -l selftest&#39; options for an ATA disk.
So with the exception of &#39;-d&#39;, &#39;-m&#39;, &#39;-l selftest&#39;, &#39;-s&#39;, and
&#39;-M&#39;, the Directives below are ignored for SCSI disks.  For SCSI
disks, the &#39;-m&#39; Directive sends a warning email if the SMART status
indicates a disk failure or problem, if the SCSI inquiry about disk
status fails, or if new errors appear in the self-test log.
<p>
<b>If a 3ware controller is used</b> then the corresponding SCSI (/dev/sd?) or character device (/dev/twe?
or /dev/twa?) must be listed, along with the &#39;-d 3ware,N&#39; Directive
(see below).  The individual ATA disks hosted by the 3ware controller
appear to <b>smartd</b> as normal ATA devices.  Hence all the ATA
directives can be used for these disks (but see note below).
<p>
<table class="src" cellpadding="5" cellspacing="0" border="1">
<tr><th width="25%">Tag</th><th>Description</th></tr>
<tr valign="top"><td>
<b>-d TYPE</b> </td><td valign="bottom">
Specifies the type of the device.  This Directive may be used multiple
times for one device, but the arguments <i>ata</i>, <i>scsi</i>, <i>sat</i>,
<i>marvell</i>, <i>cciss,N</i> and <i>3ware,N</i> are mutually-exclusive. If more
than one is given then <b>smartd</b> will use the last one which appears.
<p>
If none of these three arguments is given, then <b>smartd</b> will
first attempt to guess the device type by looking at whether the sixth
character in the device name is an &#39;s&#39; or an &#39;h&#39;.  This will work for
device names like /dev/hda or /dev/sdb, and corresponds to choosing
<i>ata</i> or <i>scsi</i> respectively. If
<b>smartd</b>
can&#39;t guess from this sixth character, then it will simply try to
access the device using first ATA and then SCSI ioctl()s.
<p>
The valid arguments to this Directive are:
<p>
<i>ata</i> - the device type is ATA.  This prevents
<b>smartd</b>
from issuing SCSI commands to an ATA device.
<p>
<i>scsi</i> - the device type is SCSI.  This prevents
<b>smartd</b>
from issuing ATA commands to a SCSI device.
<p>
<i>sat</i> - the device type is SCSI to ATA Translation (SAT).
<b>smartd</b>
will generate ATA (smart) commands and then package them in
the SAT defined ATA PASS THROUGH SCSI commands. The commands
are then routed through the SCSI pass through interface to the
operating system. There are two types of ATA PASS THROUGH
SCSI commands: a 12 byte and 16 byte variant.
<b>smartd</b>
can use either and defaults to the 16 byte variant. This can
be overridden with this syntax: &#39;-d sat,12&#39; or &#39;-d sat,16&#39;.
<p>
<i>marvell</i> - Under Linux, interact with SATA disks behind Marvell chip-set
controllers (using the Marvell rather than libata driver).
<p>
<i>3ware,N</i> - the device consists of one or more ATA disks connected to a 3ware
RAID controller. The non-negative integer N (in the range from 0 to 31
inclusive) denotes which disk on the controller is monitored.  In log
files and email messages this disk will be identified as 3ware_disk_XX
with XX in the range from 00 to 31 inclusive.
<p>
This Directive may at first appear confusing, because the 3ware
controller is a SCSI device (such as /dev/sda) and should be listed as
such in the the configuration file.
However when the &#39;-d 3ware,N&#39;
Directive is used, then the corresponding disk is addressed using
native ATA commands which are &#39;passed through&#39; the SCSI driver. All
ATA Directives listed in this man page may be used.  Note that while
you may use <b>any</b> of the 3ware SCSI logical devices /dev/sd? to
address <b>any</b> of the physical disks (3ware ports), error and log
messages will make the most sense if you always list the 3ware SCSI
logical device corresponding to the particular physical disks.  Please
see the <b>smartctl</b> man page for further details.
<p>
ATA disks behind 3ware controllers may alternatively be accessed via a
character device interface /dev/twe0-15 (3ware 6000/7000/8000
controllers) and /dev/twa0-15 (3ware 9000 series controllers).  Note
that the 9000 series controllers may <b>only</b> be accessed using the
character device interface /dev/twa0-15 and not the SCSI device
interface /dev/sd?.  Please see the <b>smartctl</b> man page for
further details.
<p>
Note that older 3w-xxxx drivers do not pass the &#39;Enable Autosave&#39;
(<b>-S on</b>) and &#39;Enable Automatic Offline&#39; (<b>-o on</b>) commands
to the disk, if the SCSI interface is used, and produce these types of
harmless syslog error messages instead: <b>&#39;3w-xxxx: tw_ioctl():
Passthru size (123392) too big&#39;</b>. This can be fixed by upgrading to
version 1.02.00.037 or later of the 3w-xxxx driver, or by applying a
patch to older versions.  See
<b><a href="http://smartmontools.sourceforge.net/">http://smartmontools.sourceforge.net</a>/</b> for instructions.
Alternatively use the character device interfaces /dev/twe0-15 (3ware
6/7/8000 series controllers) or /dev/twa0-15 (3ware 9000 series
controllers).
<p>
<i>cciss,N</i> - the device consists of one or more SCSI disks connected to a cciss
RAID controller. The non-negative integer N (in the range from 0 to 15
inclusive) denotes which disk on the controller is monitored.  In log
files and email messages this disk will be identified as cciss_disk_XX
with XX in the range from 00 to 15 inclusive.
<p>
<b>3ware and cciss controllers are currently ONLY supported under Linux.</b> <p>
<i>hpt,L/M/N</i> - the device consists of one or more ATA disks connected to a HighPoint
RocketRAID controller.  The integer L is the controller id, the integer M
is the channel number, and the integer N is the PMPort number if it is
available. The allowed values of L are from 1 to 4 inclusive, M are from
1 to 8 inclusive and N from 1 to 4 if PMPort available.  And also these
values are limited by the model of the HighPoint RocketRAID controller.
In log files and email messages this disk will be identified as
hpt_X/X/X and X/X/X is the same as L/M/N, note if no N indicated, N set
to the default value 1.
<p>
<b>HighPoint RocketRAID controllers are currently ONLY supported under Linux.</b> <p>
<i>removable</i> - the device or its media is removable.  This indicates to
<b>smartd</b>
that it should continue (instead of exiting, which is the default
behavior) if the device does not appear to be present when
<b>smartd</b> is started.  This Directive may be used in conjunction
with the other &#39;-d&#39; Directives.
<p>
</td></tr>
<tr valign="top"><td colspan="2">
<b>-n POWERMODE[,q]</b> </td></tr><tr valign="top"><td width=6%>&nbsp;</td><td>
This &#39;nocheck&#39; Directive is used to prevent a disk from being
spun-up when it is periodically polled by <b>smartd</b>.
<p>
ATA disks have five different power states. In order of increasing
power consumption they are: &#39;OFF&#39;, &#39;SLEEP&#39;, &#39;STANDBY&#39;, &#39;IDLE&#39;,
and &#39;ACTIVE&#39;.  Typically in the OFF, SLEEP, and STANDBY modes the
disk&#39;s platters are not spinning. But usually, in response to SMART
commands issued by <b>smartd</b>, the disk platters are spun up.  So if
this option is not used, then a disk which is in a low-power mode may
be spun up and put into a higher-power mode when it is periodically
polled by <b>smartd</b>.
<p>
Note that if the disk is in SLEEP mode when <b>smartd</b> is started,
then it won&#146;t respond to <b>smartd</b> commands, and so the disk won&#146;t
be registered as a device for <b>smartd</b> to monitor. If a disk is in
any other low-power mode, then the commands issued by <b>smartd</b> to
register the disk will probably cause it to spin-up.
<p>
The &#39;<b>-n</b>&#39; (nocheck) Directive specifies if <b>smartd</b>&#39;s
periodic checks should still be carried out when the device is in a
low-power mode.  It may be used to prevent a disk from being spun-up
by periodic <b>smartd</b> polling.  The allowed values of POWERMODE
are:
<p>
<i>never</i> - <b>smartd</b> will poll (check) the device regardless of its power
mode. This may cause a disk which is spun-down to be spun-up when
<b>smartd</b> checks it.  This is the default behavior if the &#146;-n&#146;
Directive is not given.
<p>
<i>sleep</i> - check the device unless it is in SLEEP mode.
<p>
<i>standby</i> - check the device unless it is in SLEEP or STANDBY mode.  In
these modes most disks are not spinning, so if you want to prevent
a laptop disk from spinning up each time that <b>smartd</b> polls,
this is probably what you want.
<p>
<i>idle</i> - check the device unless it is in SLEEP, STANDBY or IDLE mode.
In the IDLE state, most disks are still spinning, so this is probably
not what you want.
<p>
When a self test is scheduled (see &#39;-s&#39; Directive below), the
&#39;<b>-n</b>&#39; Directive is ignored, and all tests are carried out.
<p>
When a periodic test is skipped, <b>smartd</b> normally writes an
informal log message. The message can be suppressed by appending
the option &#39;,q&#39; to POWERMODE (like &#39;-n standby,q&#39;).
This prevents a laptop disk from spinning up due to this message.
<p>
</td></tr>
<tr valign="top"><td>
<b>-T TYPE</b> </td><td valign="bottom">
Specifies how tolerant
<b>smartd</b>
should be of SMART command failures.  The valid arguments to this
Directive are:
<p>
<i>normal</i> - do not try to monitor the disk if a mandatory SMART command fails, but
continue if an optional SMART command fails.  This is the default.
<p>
<i>permissive</i> - try to monitor the disk even if it appears to lack SMART
capabilities.  This may be required for some old disks (prior to
ATA-3 revision 4) that implemented SMART before the SMART standards
were incorporated into the ATA/ATAPI Specifications.  This may also be
needed for some Maxtor disks which fail to comply with the ATA
Specifications and don&#146;t properly indicate support for error- or
self-test logging.
<p>
[Please see the <b>smartctl -T</b> command-line option.]
</td></tr>
<tr valign="top"><td>
<b>-o VALUE</b> </td><td valign="bottom">
Enables or disables SMART Automatic Offline Testing when
<b>smartd</b>
starts up and has no further effect.  The valid arguments to this
Directive are <i>on</i> and <i>off</i>.
<p>
The delay between tests is vendor-specific, but is typically four
hours.
<p>
Note that SMART Automatic Offline Testing is <b>not</b> part of the ATA
Specification.  Please see the
<b>smartctl -o</b> command-line option documentation for further information about this
feature.
</td></tr>
<tr valign="top"><td>
<b>-S VALUE</b> </td><td valign="bottom">
Enables or disables Attribute Autosave when <b>smartd</b>
starts up and has no further effect.  The valid arguments to this
Directive are <i>on</i> and <i>off</i>.  Also affects SCSI devices.
[Please see the <b>smartctl -S</b> command-line option.]
</td></tr>
<tr valign="top"><td>
<b>-H</b> </td><td valign="bottom">
Check the SMART health status of the disk.  If any Prefailure
Attributes are less than or equal to their threshold values, then disk
failure is predicted in less than 24 hours, and a message at loglevel
<b>&#39;LOG_CRITICAL&#39;</b> will be logged to syslog.  [Please see the
<b>smartctl -H</b> command-line option.]
</td></tr>
<tr valign="top"><td>
<b>-l TYPE</b> </td><td valign="bottom">
Reports increases in the number of errors in one of the two SMART logs.  The
valid arguments to this Directive are:
<p>
<i>error</i> - report if the number of ATA errors reported in the ATA Error Log
has increased since the last check.
<p>
<i>selftest</i> - report if the number of failed tests reported in the SMART
Self-Test Log has increased since the last check, or if the timestamp
associated with the most recent failed test has increased.  Note that
such errors will <b>only</b> be logged if you run self-tests on the
disk (and it fails a test!).  Self-Tests can be run automatically by
<b>smartd</b>: please see the <b>&#39;-s&#39;</b> Directive below.
Self-Tests can also be run manually by using the <b>&#39;-t short&#39;</b>
and <b>&#39;-t long&#39;</b> options of <b>smartctl</b> and the results of
the testing can be observed using the <b>smartctl &#39;-l selftest&#39;</b>
command-line option.]
<p>
[Please see the <b>smartctl -l</b> and <b>-t</b> command-line
options.]
</td></tr>
<tr valign="top"><td colspan="2">
<b>-s REGEXP</b> </td></tr><tr valign="top"><td width=6%>&nbsp;</td><td>
Run Self-Tests or Offline Immediate Tests, at scheduled times.  A
Self- or Offline Immediate Test will be run at the end of periodic
device polling, if all 12 characters of the string <b>T/MM/DD/d/HH</b>
match the extended regular expression <b>REGEXP</b>. Here:
<table class="src" cellpadding="5" cellspacing="0" border="1">
<tr><th width="25%">Tag</th><th>Description</th></tr>
<tr><td width=1%>&nbsp;</td><td>
<table class="src" cellpadding="5" cellspacing="0" border="1">
<tr><th width="25%">Tag</th><th>Description</th></tr>
<tr valign="top"><td width=4%>
<b>T</b>
</td><td>
is the type of the test.  The values that <b>smartd</b> will try to
match (in turn) are: &#39;L&#39; for a <b>L</b>ong Self-Test, &#39;S&#39; for a
<b>S</b>hort Self-Test, &#39;C&#39; for a <b>C</b>onveyance Self-Test (ATA
only), and &#39;O&#39; for an <b>O</b>ffline Immediate Test (ATA only).  As
soon as a match is found, the test will be started and no additional
matches will be sought for that device and that polling cycle.
</td></tr>
<tr valign="top"><td width=4%>
<b>MM</b>
</td><td>
is the month of the year, expressed with two decimal digits.  The
range is from 01 (January) to 12 (December) inclusive.  Do <b>not</b>
use a single decimal digit or the match will always fail!
</td></tr>
<tr valign="top"><td width=4%>
<b>DD</b>
</td><td>
is the day of the month, expressed with two decimal digits. The
range is from 01 to 31 inclusive.  Do <b>not</b>
use a single decimal digit or the match will always fail!
</td></tr>
<tr valign="top"><td width=4%>
<b>d</b>
</td><td>
is the day of the week, expressed with one decimal digit.  The
range is from 1 (Monday) to 7 (Sunday) inclusive.
</td></tr>
<tr valign="top"><td width=4%>
<b>HH</b>
</td><td>
is the hour of the day, written with two decimal digits, and given in
hours after midnight.  The range is 00 (midnight to just before 1am)
to 23 (11pm to just before midnight) inclusive.  Do <b>not</b> use a
single decimal digit or the match will always fail!
</td></tr>
</table>
</td></tr>
</table>
</td></tr>
<tr valign="top"><td>
<b></b> </td><td valign="bottom">
Some examples follow.  In reading these, keep in mind that in extended
regular expressions a dot <b>&#39;.&#39;</b> matches any single character, and
a parenthetical expression such as <b>&#39;(A|B|C)&#39;</b> denotes any one of the three possibilities <b>A</b>,
<b>B</b>, or <b>C</b>.
<p>
To schedule a short Self-Test between 2-3am every morning, use:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b> -s S/../.././02</b>
</pre></td></tr>
</table>
To schedule a long Self-Test between 4-5am every Sunday morning, use:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b> -s L/../../7/04</b>
</pre></td></tr>
</table>
To schedule a long Self-Test between 10-11pm on the first and
fifteenth day of each month, use:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b> -s L/../(01|15)/./22</b>
</pre></td></tr>
</table>
To schedule an Offline Immediate test after every midnight, 6am,
noon,and 6pm, plus a Short Self-Test daily at 1-2am and a Long
Self-Test every Saturday at 3-4am, use:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b> -s (O/../.././(00|06|12|18)|S/../.././01|L/../../6/03)</b>
</pre></td></tr>
</table>
<p>
Scheduled tests are run immediately following the regularly-scheduled
device polling, if the current local date, time, and test type, match
<b>REGEXP</b>.  By default the regularly-scheduled device polling
occurs every thirty minutes after starting <b>smartd</b>.  Take caution
if you use the &#39;-i&#39; option to make this polling interval more than
sixty minutes: the poll times may fail to coincide with any of the
testing times that you have specified with <b>REGEXP</b>, and so the
self tests may not take place as you wish.
<p>
Before running an offline or self-test, <b>smartd</b> checks to be sure
that a self-test is not already running.  If a self-test <b>is</b>
already running, then this running self test will <b>not</b> be
interrupted to begin another test.
<p>
<b>smartd</b> will not attempt to run <b>any</b> type of test if another
test was already started or run in the same hour.
<p>
To avoid performance problems during system boot, <b>smartd</b> will
not attempt to run any scheduled tests following the very first
device polling (unless &#39;-q onecheck&#39; is specified).
<p>
Each time a test is run, <b>smartd</b> will log an entry to SYSLOG.
You can use these or the &#146;-q showtests&#146; command-line option to verify
that you constructed <b>REGEXP</b> correctly.  The matching order
(<b>L</b> before <b>S</b> before <b>C</b> before <b>O</b>) ensures that
if multiple test types are all scheduled for the same hour, the
longer test type has precedence.  This is usually the desired behavior.
<p>
Unix users: please beware that the rules for extended regular
expressions [regex(7)] are <b>not</b> the same as the rules for
file-name pattern matching by the shell [glob(7)].  <b>smartd</b> will
issue harmless informational warning messages if it detects characters
in <b>REGEXP</b> that appear to indicate that you have made this
mistake.
<p>
</td></tr>
<tr valign="top"><td>
<b>-m ADD</b> </td><td valign="bottom">
Send a warning email to the email address <b>ADD</b> if the &#39;-H&#39;,
&#39;-l&#39;, &#39;-f&#39;, &#39;-C&#39;, or &#39;-O&#39; Directives detect a failure or a
new error, or if a SMART command to the disk fails. This Directive
only works in conjunction with these other Directives (or with the
equivalent default &#39;-a&#39; Directive).
<p>
To prevent your email in-box from getting filled up with warning
messages, by default only a single warning will be sent for each of
the enabled alert types, &#39;-H&#39;, &#39;-l&#39;, &#39;-f&#39;, &#39;-C&#39;, or
&#39;-O&#39; even if more than one failure or error is detected or if the
failure or error persists.  [This behavior can be modified; see the
&#39;-M&#39; Directive below.]
<p>
To send email to more than one user, please use the following "comma
separated" form for the address: <b>user1@add1,user2@add2,...,userN@addN</b>
(with no spaces).
<p>
To test that email is being sent correctly, use the &#39;-M test&#39;
Directive described below to send one test email message on
<b>smartd</b>
startup.
<p>
By default, email is sent using the system
<b>mail</b> command.  In order that
<b>smartd</b>
find the mail command (normally /bin/mail) an executable named
<b>&#39;mail&#39;</b> must be in the path of the shell or environment from which
<b>smartd</b>
was started.  If you wish to specify an explicit path to the mail
executable (for example /usr/local/bin/mail) or a custom script to
run, please use the &#39;-M exec&#39; Directive below.
<p>
Note that by default under Solaris, in the previous paragraph,
&#39;<b>mailx</b>&#39; and &#39;<b>/bin/mailx</b>&#39; are used, since Solaris
&#39;/bin/mail&#39; does not accept a &#39;-s&#39; (Subject) command-line
argument.
<p>
On Windows, the &#39;<b>Blat</b>&#39; mailer
(<b><a href="http://blat.sourceforge.net/">http://blat.sourceforge.net</a>/</b>) is used by default.
This mailer uses a different command line syntax, see
&#39;-M exec&#39; below.
<p>
Note also that there is a special argument
<b>&lt;nomailer&gt;</b> which can be given to the &#39;-m&#39; Directive in conjunction with the &#39;-M
exec&#39; Directive. Please see below for an explanation of its effect.
<p>
If the mailer or the shell running it produces any STDERR/STDOUT
output, then a snippet of that output will be copied to SYSLOG.  The
remainder of the output is discarded. If problems are encountered in
sending mail, this should help you to understand and fix them.  If
you have mail problems, we recommend running <b>smartd</b> in debug
mode with the &#39;-d&#39; flag, using the &#39;-M test&#39; Directive described
below.
<p>
The following extension is available on Windows:
By specifying &#39;<b>msgbox</b>&#39; as a mail address, a warning
"email" is displayed as a message box on the screen.
Using both &#39;<b>msgbox</b>&#39; and regular mail addresses is possible,
if &#39;<b>msgbox</b>&#39; is the first word in the comma separated list.
With &#39;<b>sysmsgbox</b>&#39;, a system modal (always on top) message box
is used. If running as a service, a service notification message box
(always shown on current visible desktop) is used.
<p>
</td></tr>
<tr valign="top"><td>
<b>-M TYPE</b> </td><td valign="bottom">
These Directives modify the behavior of the
<b>smartd</b>
email warnings enabled with the &#39;-m&#39; email Directive described above.
These &#39;-M&#39; Directives only work in conjunction with the &#39;-m&#39;
Directive and can not be used without it.
<p>
Multiple -M Directives may be given.  If more than one of the
following three -M Directives are given (example: -M once -M daily)
then the final one (in the example, -M daily) is used.
<p>
The valid arguments to the -M Directive are (one of the following
three):
<p>
<i>once</i> - send only one warning email for each type of disk problem detected.  This
is the default.
<p>
<i>daily</i> - send additional warning reminder emails, once per day, for each type
of disk problem detected.
<p>
<i>diminishing</i> - send additional warning reminder emails, after a one-day interval,
then a two-day interval, then a four-day interval, and so on for each
type of disk problem detected. Each interval is twice as long as the
previous interval.
<p>
In addition, one may add zero or more of the following Directives:
<p>
<i>test</i> - send a single test email
immediately upon
<b>smartd</b>
startup.  This allows one to verify that email is delivered correctly.
Note that if this Directive is used,
<b>smartd</b>
will also send the normal email warnings that were enabled with the &#39;-m&#39; Directive,
in addition to the single test email!
<p>
<i>exec PATH</i> - run the executable PATH instead of the default mail command, when
<b>smartd</b>
needs to send email.  PATH must point to an executable binary file or
script.
<p>
By setting PATH to point to a customized script, you can make
<b>smartd</b> perform useful tricks when a disk problem is detected
(beeping the console, shutting down the machine, broadcasting warnings
to all logged-in users, etc.)  But please be careful. <b>smartd</b>
will <b>block</b> until the executable PATH returns, so if your
executable hangs, then <b>smartd</b> will also hang. Some sample
scripts are included in
/usr/share/doc/smartmontools-5.38/examplescripts/.
<p>
The return status of the executable is recorded by <b>smartd</b> in
SYSLOG. The executable is not expected to write to STDOUT or
STDERR.  If it does, then this is interpreted as indicating that
something is going wrong with your executable, and a fragment of this
output is logged to SYSLOG to help you to understand the problem.
Normally, if you wish to leave some record behind, the executable
should send mail or write to a file or device.
<p>
Before running the executable, <b>smartd</b> sets a number of
environment variables.  These environment variables may be used to
control the executable&#39;s behavior.  The environment variables
exported by <b>smartd</b> are:
<table class="src" cellpadding="5" cellspacing="0" border="1">
<tr><th width="25%">Tag</th><th>Description</th></tr>
<tr><td width=1%>&nbsp;</td><td>
<table class="src" cellpadding="5" cellspacing="0" border="1">
<tr><th width="25%">Tag</th><th>Description</th></tr>
<tr valign="top"><td width=4%>
<b>SMARTD_MAILER</b>
</td><td>
is set to the argument of -M exec, if present or else to &#39;mail&#39;
(examples: /bin/mail, mail).
</td></tr>
<tr valign="top"><td width=4%>
<b>SMARTD_DEVICE</b>
</td><td>
is set to the device path (examples: /dev/hda, /dev/sdb).
</td></tr>
<tr valign="top"><td width=4%>
<b>SMARTD_DEVICETYPE</b>
</td><td>
is set to the device type (possible values: ata, scsi, 3ware,N, hpt,L/M/N).
Here N=0,...,23 denotes the ATA disk behind a 3ware RAID controller and
L/M/N denotes the SATA disk behind a HighPoint RocketRAID controller.
</td></tr>
<tr valign="top"><td width=4%>
<b>SMARTD_DEVICESTRING</b>
</td><td>
is set to the device description.  For SMARTD_DEVICETYPE of ata or
scsi, this is the same as SMARTD_DEVICE.  For 3ware RAID controllers,
the form used is &#39;/dev/sdc [3ware_disk_01]&#39;.  For HighPoint RocketRAID
controller, the form is &#39;/dev/sdd [hpt_1/1/1]&#39;.  In these cases the
device string contains a space and is NOT quoted.  So to use
$SMARTD_DEVICESTRING in a bash script you should probably enclose it
in double quotes.
</td></tr>
<tr valign="top"><td width=4%>
<b>SMARTD_FAILTYPE</b>
</td><td>
gives the reason for the warning or message email.  The possible values that
it takes and their meanings are:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
</pre></td></tr>
</table>
<i>EmailTest</i>: this is an email test message.
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
</pre></td></tr>
</table>
<i>Health</i>: the SMART health status indicates imminent failure.
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
</pre></td></tr>
</table>
<i>Usage</i>: a usage Attribute has failed.
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
</pre></td></tr>
</table>
<i>SelfTest</i>: the number of self-test failures has increased.
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
</pre></td></tr>
</table>
<i>ErrorCount</i>: the number of errors in the ATA error log has increased.
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
</pre></td></tr>
</table>
<i>CurrentPendingSector</i>: one of more disk sectors could not be
read and are marked to be reallocated (replaced with spare sectors).
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
</pre></td></tr>
</table>
<i>OfflineUncorrectableSector</i>: during off-line testing, or self-testing,
one or more disk sectors could not be read.
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
</pre></td></tr>
</table>
<i>FailedHealthCheck</i>: the SMART health status command failed.
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
</pre></td></tr>
</table>
<i>FailedReadSmartData</i>: the command to read SMART Attribute data failed.
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
</pre></td></tr>
</table>
<i>FailedReadSmartErrorLog</i>: the command to read the SMART error log failed.
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
</pre></td></tr>
</table>
<i>FailedReadSmartSelfTestLog</i>: the command to read the SMART self-test log failed.
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
</pre></td></tr>
</table>
<i>FailedOpenDevice</i>: the open() command to the device failed.
</td></tr>
<tr valign="top"><td width=4%>
<b>SMARTD_ADDRESS</b>
</td><td>
is determined by the address argument ADD of the &#39;-m&#39; Directive.
If ADD is <b>&lt;nomailer&gt;</b>, then <b>SMARTD_ADDRESS</b> is not set.
Otherwise, it is set to the comma-separated-list of email addresses
given by the argument ADD, with the commas replaced by spaces
(example:<a href="mailto:admin@example.com">admin@example.com</a> root).  If more than one email address is
given, then this string will contain space characters and is NOT
quoted, so to use it in a bash script you may want to enclose it in
double quotes.
</td></tr>
<tr valign="top"><td width=4%>
<b>SMARTD_MESSAGE</b>
</td><td>
is set to the one sentence summary warning email message string from
<b>smartd</b>.
This message string contains space characters and is NOT quoted. So to
use $SMARTD_MESSAGE in a bash script you should probably enclose it in
double quotes.
</td></tr>
<tr valign="top"><td width=4%>
<b>SMARTD_FULLMESSAGE</b>
</td><td>
is set to the contents of the entire email warning message string from
<b>smartd</b>.
This message string contains space and return characters and is NOT quoted. So to
use $SMARTD_FULLMESSAGE in a bash script you should probably enclose it in
double quotes.
</td></tr>
<tr valign="top"><td width=4%>
<b>SMARTD_TFIRST</b>
</td><td>
is a text string giving the time and date at which the first problem
of this type was reported. This text string contains space characters
and no newlines, and is NOT quoted. For example:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
</pre></td></tr>
</table>
Sun Feb  9 14:58:19 2003 CST
</td></tr>
<tr valign="top"><td width=4%>
<b>SMARTD_TFIRSTEPOCH</b>
</td><td>
is an integer, which is the unix epoch (number of seconds since Jan 1,
1970) for <b>SMARTD_TFIRST</b>.
</td></tr>
</table>
</td></tr>
</table>
</td></tr>
<tr valign="top"><td>
<b></b> </td><td valign="bottom">
The shell which is used to run PATH is system-dependent. For vanilla
Linux/glibc it&#39;s bash. For other systems, the man page for
<b>popen</b>(3) should say what shell is used.
<p>
If the &#39;-m ADD&#39; Directive is given with a normal address argument,
then the executable pointed to by PATH will be run in a shell with
STDIN receiving the body of the email message, and with the same
command-line arguments:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
-s "$SMARTD_SUBJECT" $SMARTD_ADDRESS
</pre></td></tr>
</table>
that would normally be provided to &#39;mail&#39;.  Examples include:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>-m user@home -M exec /bin/mail</b> 
<b>-m admin@work -M exec /usr/local/bin/mailto</b> 
<b>-m root -M exec /Example_1/bash/script/below</b> 
</pre></td></tr>
</table>
<p>
Note that on Windows, the syntax of the &#39;<b>Blat</b>&#39; mailer is
used:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
- -q -subject "$SMARTD_SUBJECT" -to "$SMARTD_ADDRESS"
</pre></td></tr>
</table>
<p>
If the &#39;-m ADD&#39; Directive is given with the special address argument
<b>&lt;nomailer&gt;</b> then the executable pointed to by PATH is run in a shell with
<b>no</b> STDIN and
<b>no</b> command-line arguments, for example:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>-m &lt;nomailer&gt; -M exec /Example_2/bash/script/below</b> 
</pre></td></tr>
</table>
If the executable produces any STDERR/STDOUT output, then <b>smartd</b>
assumes that something is going wrong, and a snippet of that output
will be copied to SYSLOG.  The remainder of the output is then
discarded.
<p>
Some EXAMPLES of scripts that can be used with the &#39;-M exec&#39;
Directive are given below. Some sample scripts are also included in
/usr/share/doc/smartmontools-5.38/examplescripts/.
<p>
</td></tr>
<tr valign="top"><td>
<b>-f</b> </td><td valign="bottom">
Check for &#39;failure&#39; of any Usage Attributes.  If these Attributes are
less than or equal to the threshold, it does NOT indicate imminent
disk failure.  It "indicates an advisory condition where the usage or
age of the device has exceeded its intended design life period."
[Please see the <b>smartctl -A</b> command-line option.]
</td></tr>
<tr valign="top"><td>
<b>-p</b> </td><td valign="bottom">
Report anytime that a Prefail Attribute has changed
its value since the last check, 30 minutes ago. [Please see the
<b>smartctl -A</b> command-line option.]
</td></tr>
<tr valign="top"><td>
<b>-u</b> </td><td valign="bottom">
Report anytime that a Usage Attribute has changed its value
since the last check, 30 minutes ago. [Please see the
<b>smartctl -A</b> command-line option.]
</td></tr>
<tr valign="top"><td>
<b>-t</b> </td><td valign="bottom">
Equivalent to turning on the two previous flags &#39;-p&#39; and &#39;-u&#39;.
Tracks changes in <i>all</i> device Attributes (both Prefailure and
Usage). [Please see the <b>smartctl</b> -A command-line option.]
</td></tr>
<tr valign="top"><td>
<b>-i ID</b> </td><td valign="bottom">
Ignore device Attribute number <b>ID</b> when checking for failure of
Usage Attributes.  <b>ID</b> must be a decimal integer in the range
from 1 to 255.  This Directive modifies the behavior of the &#39;-f&#39;
Directive and has no effect without it.
<p>
This is useful, for example, if you have a very old disk and don&#39;t
want to keep getting messages about the hours-on-lifetime Attribute
(usually Attribute 9) failing.  This Directive may appear multiple
times for a single device, if you want to ignore multiple Attributes.
</td></tr>
<tr valign="top"><td>
<b>-I ID</b> </td><td valign="bottom">
Ignore device Attribute <b>ID</b> when tracking changes in the
Attribute values.  <b>ID</b> must be a decimal integer in the range
from 1 to 255.  This Directive modifies the behavior of the &#39;-p&#39;,
&#39;-u&#39;, and &#39;-t&#39; tracking Directives and has no effect without one
of them.
<p>
This is useful, for example, if one of the device Attributes is the disk
temperature (usually Attribute 194 or 231). It&#39;s annoying to get reports
each time the temperature changes.  This Directive may appear multiple
times for a single device, if you want to ignore multiple Attributes.
</td></tr>
<tr valign="top"><td>
<b>-r ID</b> </td><td valign="bottom">
When tracking, report the <i>Raw</i> value of Attribute <b>ID</b> along
with its (normally reported) <i>Normalized</i> value.  <b>ID</b> must be
a decimal integer in the range from 1 to 255.  This Directive modifies
the behavior of the &#39;-p&#39;, &#39;-u&#39;, and &#39;-t&#39; tracking Directives
and has no effect without one of them.  This Directive may be given
multiple times.
<p>
A common use of this Directive is to track the device Temperature
(often ID=194 or 231).
<p>
</td></tr>
<tr valign="top"><td>
<b>-R ID</b> </td><td valign="bottom">
When tracking, report whenever the <i>Raw</i> value of Attribute
<b>ID</b> changes.  (Normally <b>smartd</b> only tracks/reports changes
of the <i>Normalized</i> Attribute values.)  <b>ID</b> must be a decimal
integer in the range from 1 to 255.  This Directive modifies the
behavior of the &#39;-p&#39;, &#39;-u&#39;, and &#39;-t&#39; tracking Directives and
has no effect without one of them.  This Directive may be given
multiple times.
<p>
If this Directive is given, it automatically implies the &#39;-r&#39;
Directive for the same Attribute, so that the Raw value of the
Attribute is reported.
<p>
A common use of this Directive is to track the device Temperature
(often ID=194 or 231).  It is also useful for understanding how
different types of system behavior affects the values of certain
Attributes.
<p>
</td></tr>
<tr valign="top"><td>
<b>-C ID</b> </td><td valign="bottom">
[ATA only] Report if the current number of pending sectors is
non-zero.  Here <b>ID</b> is the id number of the Attribute whose raw
value is the Current Pending Sector count.  The allowed range of
<b>ID</b> is 0 to 255 inclusive.  To turn off this reporting, use
ID = 0.  If the <b>-C ID</b> option is not given, then it defaults to
<b>-C 197</b> (since Attribute 197 is generally used to monitor
pending sectors).
<p>
A pending sector is a disk sector (containing 512 bytes of your data)
which the device would like to mark as &#145;&#145;bad" and reallocate.
Typically this is because your computer tried to read that sector, and
the read failed because the data on it has been corrupted and has
inconsistent Error Checking and Correction (ECC) codes.  This is
important to know, because it means that there is some unreadable data
on the disk.  The problem of figuring out what file this data belongs
to is operating system and file system specific.  You can typically
force the sector to reallocate by writing to it (translation: make the
device substitute a spare good sector for the bad one) but at the
price of losing the 512 bytes of data stored there.
<p>
</td></tr>
<tr valign="top"><td>
<b>-U ID</b> </td><td valign="bottom">
[ATA only] Report if the number of offline uncorrectable sectors is
non-zero.  Here <b>ID</b> is the id number of the Attribute whose raw
value is the Offline Uncorrectable Sector count.  The allowed range of
<b>ID</b> is 0 to 255 inclusive.  To turn off this reporting, use
ID = 0.  If the <b>-U ID</b> option is not given, then it defaults to
<b>-U 198</b> (since Attribute 198 is generally used to monitor
offline uncorrectable sectors).
<p>
<p>
An offline uncorrectable sector is a disk sector which was not
readable during an off-line scan or a self-test.  This is important
to know, because if you have data stored in this disk sector, and you
need to read it, the read will fail.  Please see the previous &#39;-C&#39;
option for more details.
<p>
</td></tr>
<tr valign="top"><td colspan="2">
<b>-W DIFF[,INFO[,CRIT]]</b> </td></tr><tr valign="top"><td width=4%>&nbsp;</td><td>
Report if the current temperature had changed by at least <b>DIFF</b>
degrees since last report. Report or Warn if the temperature is greater
or equal than one of <b>INFO</b> or <b>CRIT</b> degrees Celsius. If the
limit <b>CRIT</b> is reached, a message with loglevel
<b>&#39;LOG_CRITICAL&#39;</b> will be logged to syslog and a warning email
will be send if &#146;-m&#146; is specified. If only the limit <b>INFO</b> is
reached, a message with loglevel <b>&#39;LOG_INFO&#39;</b> will be logged.
<p>
To disable any of the 3 reports, set the corresponding limit to 0.
Trailing zero arguments may be omitted. By default, all temperature
reports are disabled (&#39;-W 0&#39;).
<p>
To track temperature changes of at least 2 degrees, use:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b> -W 2
</pre></td></tr>
</table>
To log informal messages on temperatures of at least 40 degrees, use:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
</b><b> -W 0,40
</pre></td></tr>
</table>
For warning messages/mails on temperatures of at least 45 degrees, use:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
</b><b> -W 0,0,45
</pre></td></tr>
</table>
To combine all of the above reports, use:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
</b><b> -W 2,40,45
</pre></td></tr>
</table>
<p>
For ATA devices, smartd interprets Attribute 194 as Temperature Celsius
by default. This can be changed to Attribute 9 or 220 by the drive
database or by the &#39;-v&#39; directive, see below.
<p>
</td></tr>
<tr valign="top"><td>
</b><b>-F TYPE</b> </td><td valign="bottom">
[ATA only] Modifies the behavior of <b>smartd</b> to compensate for
some known and understood device firmware bug.  The arguments to this
Directive are exclusive, so that only the final Directive given is
used.  The valid values are:
<p>
<i>none</i> - Assume that the device firmware obeys the ATA specifications.  This is
the default, unless the device has presets for &#39;-F&#39; in the device
database.
<p>
<i>samsung</i> - In some Samsung disks (example: model SV4012H Firmware Version:
RM100-08) some of the two- and four-byte quantities in the SMART data
structures are byte-swapped (relative to the ATA specification).
Enabling this option tells <b>smartd</b> to evaluate these quantities
in byte-reversed order.  Some signs that your disk needs this option
are (1) no self-test log printed, even though you have run self-tests;
(2) very large numbers of ATA errors reported in the ATA error log;
(3) strange and impossible values for the ATA error log timestamps.
<p>
<i>samsung2</i> - In more recent Samsung disks (firmware revisions ending in "-23") the
number of ATA errors reported is byte swapped.  Enabling this option
tells <b>smartd</b> to evaluate this quantity in byte-reversed order.
<p>
<i>samsung3</i> - Some Samsung disks (at least SP2514N with Firmware VF100-37) report
a self-test still in progress with 0% remaining when the test was already
completed. If this directive is specified, <b>smartd</b> will not skip the
next scheduled self-test (see Directive &#39;-s&#39; above) in this case.
<p>
Note that an explicit &#39;-F&#39; Directive will over-ride any preset
values for &#39;-F&#39; (see the &#39;-P&#39; option below).
<p>
<p>
[Please see the <b>smartctl -F</b> command-line option.]
<p>
</td></tr>
<tr valign="top"><td colspan="2">
<b>-v N,OPTION</b> </td></tr><tr valign="top"><td width=4%>&nbsp;</td><td>
Modifies the labeling for Attribute N, for disks which use
non-standard Attribute definitions.  This is useful in connection with
the Attribute tracking/reporting Directives.
<p>
This Directive may appear multiple times. Valid arguments to this
Directive are:
<p>
<i>9,minutes</i> - Raw Attribute number 9 is power-on time in minutes.  Its raw value
will be displayed in the form &#39;Xh+Ym&#39;.  Here X is hours, and Y is
minutes in the range 0-59 inclusive.  Y is always printed with two
digits, for example &#39;06&#39; or &#39;31&#39; or &#39;00&#39;.
<p>
<i>9,seconds</i> - Raw Attribute number 9 is power-on time in seconds.  Its raw value
will be displayed in the form &#39;Xh+Ym+Zs&#39;.  Here X is hours, Y is
minutes in the range 0-59 inclusive, and Z is seconds in the range
0-59 inclusive.  Y and Z are always printed with two digits, for
example &#39;06&#39; or &#39;31&#39; or &#39;00&#39;.
<p>
<i>9,halfminutes</i> - Raw Attribute number 9 is power-on time, measured in units of 30
seconds.  This format is used by some Samsung disks.  Its raw value
will be displayed in the form &#39;Xh+Ym&#39;.  Here X is hours, and Y is
minutes in the range 0-59 inclusive.  Y is always printed with two
digits, for example &#39;06&#39; or &#39;31&#39; or &#39;00&#39;.
<p>
<i>9,temp</i> - Raw Attribute number 9 is the disk temperature in Celsius.
<p>
<i>192,emergencyretractcyclect</i> - Raw Attribute number 192 is the Emergency Retract Cycle Count.
<p>
<i>193,loadunload</i> - Raw Attribute number 193 contains two values. The first is the
number of load cycles.  The second is the number of unload cycles.
The difference between these two values is the number of times that
the drive was unexpectedly powered off (also called an emergency
unload). As a rule of thumb, the mechanical stress created by one
emergency unload is equivalent to that created by one hundred normal
unloads.
<p>
<i>194,10xCelsius</i> - Raw Attribute number 194 is ten times the disk temperature in
Celsius.  This is used by some Samsung disks (example: model SV1204H
with RK100-13 firmware).
<p>
<i>194,unknown</i> - Raw Attribute number 194 is NOT the disk temperature, and its
interpretation is unknown. This is primarily useful for the -P
(presets) Directive.
<p>
<i>198,offlinescanuncsectorct</i> - Raw Attribute number 198 is the Offline Scan UNC Sector Count.
<p>
<i>200,writeerrorcount</i> - Raw Attribute number 200 is the Write Error Count.
<p>
<i>201,detectedtacount</i> - Raw Attribute number 201 is the Detected TA Count.
<p>
<i>220,temp</i> - Raw Attribute number 220 is the disk temperature in Celsius.
<p>
Note: a table of hard drive models, listing which Attribute
corresponds to temperature, can be found at:
<b><a href="http://www.guzu.net/linux/hddtemp.db">http://www.guzu.net/linux/hddtemp.db</a></b>
<p>
<i>N,raw8</i> - Print the Raw value of Attribute N as six 8-bit unsigned base-10
integers.  This may be useful for decoding the meaning of the Raw
value.  The form &#39;N,raw8&#39; prints Raw values for ALL Attributes in this
form.  The form (for example) &#39;123,raw8&#39; only prints the Raw value for
Attribute 123 in this form.
<p>
<i>N,raw16</i> - Print the Raw value of Attribute N as three 16-bit unsigned base-10
integers.  This may be useful for decoding the meaning of the Raw
value.  The form &#39;N,raw16&#39; prints Raw values for ALL Attributes in this
form.  The form (for example) &#39;123,raw16&#39; only prints the Raw value for
Attribute 123 in this form.
<p>
<i>N,raw48</i> - Print the Raw value of Attribute N as a 48-bit unsigned base-10
integer.  This may be useful for decoding the meaning of the Raw
value.  The form &#39;N,raw48&#39; prints Raw values for ALL Attributes in
this form.  The form (for example) &#39;123,raw48&#39; only prints the Raw
value for Attribute 123 in this form.
<p>
</td></tr>
<tr valign="top"><td>
<b>-P TYPE</b> </td><td valign="bottom">
Specifies whether
<b>smartd</b>
should use any preset options that are available for this drive.  The
valid arguments to this Directive are:
<p>
<i>use</i> - use any presets that are available for this drive.  This is the default.
<p>
<i>ignore</i> - do not use any presets for this drive.
<p>
<i>show</i> - show the presets listed for this drive in the database.
<p>
<i>showall</i> - show the presets that are available for all drives and then exit.
<p>
[Please see the
<b>smartctl -P</b> command-line option.]
<p>
</td></tr>
<tr valign="top"><td>
<b>-a</b> </td><td valign="bottom">
Equivalent to turning on all of the following Directives:
<b>&#39;-H&#39;</b> to check the SMART health status,
<b>&#39;-f&#39;</b> to report failures of Usage (rather than Prefail) Attributes,
<b>&#39;-t&#39;</b> to track changes in both Prefailure and Usage Attributes,
<b>&#39;-l selftest&#39;</b> to report increases in the number of Self-Test Log errors,
<b>&#39;-l error&#39;</b> to report increases in the number of ATA errors,
<b>&#39;-C 197&#39;</b> to report nonzero values of the current pending sector count, and
<b>&#39;-U 198&#39;</b> to report nonzero values of the offline pending sector count.
<p>
Note that -a is the default for ATA devices.  If none of these other
Directives is given, then -a is assumed.
<p>
</td></tr>
<tr valign="top"><td>
<b>#</b> </td><td valign="bottom">
Comment: ignore the remainder of the line.
</td></tr>
<tr valign="top"><td>
<b>&#92;</b> </td><td valign="bottom">
Continuation character: if this is the last non-white or non-comment
character on a line, then the following line is a continuation of the current
one.
</td></tr>
<!-- Found tag TP -->
<tr><td colspan="2">
If you are not sure which Directives to use, I suggest experimenting
for a few minutes with
<b>smartctl</b> to see what SMART functionality your disk(s) support(s).  If you do
not like voluminous syslog messages, a good choice of
<b>smartd</b>
configuration file Directives might be:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>-H -l selftest -l error -f.</b> 
</pre></td></tr>
</table>
If you want more frequent information, use:
<b>-a.</b> <p>
</td></tr>
<tr valign="top"><td colspan="2">
<b>ADDITIONAL DETAILS ABOUT DEVICESCAN</b> </td></tr><tr valign="top"><td width=4%>&nbsp;</td><td>
If the first non-comment entry in the configuration file is the text
string <b>DEVICESCAN</b> in capital letters, then <b>smartd</b> will
ignore any remaining lines in the configuration file, and will scan
for devices.
<p>
If <b>DEVICESCAN</b> is not followed by any Directives, then smartd
will scan for both ATA and SCSI devices, and will monitor all possible
SMART properties of any devices that are found.
<p>
<b>DEVICESCAN</b> may optionally be followed by any valid Directives,
which will be applied to all devices that are found in the scan.  For
example
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>DEVICESCAN -m <a href="mailto:root@example.com">root@example.com</a></b> 
</pre></td></tr>
</table>
will scan for all devices, and then monitor them.  It will send one
email warning per device for any problems that are found.
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>DEVICESCAN -d ata -m <a href="mailto:root@example.com">root@example.com</a></b> 
</pre></td></tr>
</table>
will do the same, but restricts the scan to ATA devices only. 
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>DEVICESCAN -H -d ata -m <a href="mailto:root@example.com">root@example.com</a></b> 
</pre></td></tr>
</table>
will do the same, but only monitors the SMART health status of the
devices, (rather than the default -a, which monitors all SMART
properties).
<p>
</td></tr>
<tr valign="top"><td colspan="2">
<b>EXAMPLES OF SHELL SCRIPTS FOR &#39;-M exec&#39;</b> </td></tr><tr valign="top"><td width=4%>&nbsp;</td><td>
These are two examples of shell scripts that can be used with the &#39;-M
exec PATH&#39; Directive described previously.  The paths to these scripts
and similar executables is the PATH argument to the &#39;-M exec PATH&#39;
Directive.
<p>
Example 1: This script is for use with &#39;-m ADDRESS -M exec PATH&#39;.  It appends
the output of
<b>smartctl -a</b> to the output of the smartd email warning message and sends it to ADDRESS.
<p>
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>
#! /bin/bash
<p>
# Save the email message (STDIN) to a file:
cat &gt; /root/msg
<p>
# Append the output of smartctl -a to the message:
/usr/sbin/smartctl -a -d $SMART_DEVICETYPE $SMARTD_DEVICE &gt;&gt; /root/msg
<p>
# Now email the message to the user at address ADD:
/bin/mail -s "$SMARTD_SUBJECT" $SMARTD_ADDRESS &lt; /root/msg
</b>
</pre></td></tr>
</table>
<p>
Example 2: This script is for use with &#39;-m &lt;nomailer&gt; -M exec
PATH&#39;. It warns all users about a disk problem, waits 30 seconds, and
then powers down the machine.
<p>
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>
#! /bin/bash
<p>
# Warn all users of a problem
wall &#39;Problem detected with disk: &#39; "$SMARTD_DEVICESTRING"
wall &#39;Warning message from smartd is: &#39; "$SMARTD_MESSAGE"
wall &#39;Shutting down machine in 30 seconds... &#39;
<p>
# Wait half a minute
sleep 30
<p>
# Power down the machine
/sbin/shutdown -hf now
</b>
</pre></td></tr>
</table>
<p>
Some example scripts are distributed with the smartmontools package,
in /usr/share/doc/smartmontools-5.38/examplescripts/.
<p>
Please note that these scripts typically run as root, so any files
that they read/write should not be writable by ordinary users or
reside in directories like /tmp that are writable by ordinary users
and may expose your system to symlink attacks.
<p>
As previously described, if the scripts write to STDOUT or STDERR,
this is interpreted as indicating that there was an internal error
within the script, and a snippet of STDOUT/STDERR is logged to SYSLOG.
The remainder is flushed.
<p>
<p>
</td></tr>
</table>
<h1 class="manpages">NOTES</h1>
<b>smartd</b>
will make log entries at loglevel
<b>LOG_INFO</b> if the Normalized SMART Attribute values have changed, as reported using the
<b>&#39;-t&#39;, &#39;-p&#39;,</b> or
<b>&#39;-u&#39;</b> Directives. For example:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>&#39;Device: /dev/hda, SMART Attribute: 194 Temperature_Celsius changed from 94 to 93&#39;</b> 
</pre></td></tr>
</table>
Note that in this message, the value given is the &#39;Normalized&#39; not the &#39;Raw&#39;
Attribute value (the disk temperature in this case is about 22
Celsius).  The
<b>&#39;-R&#39;</b> and
<b>&#39;-r&#39;</b> Directives modify this behavior, so that the information is printed
with the Raw values as well, for example:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>&#39;Device: /dev/hda, SMART Attribute: 194 Temperature_Celsius changed from 94 [Raw 22] to 93 [Raw 23]&#39;</b> 
</pre></td></tr>
</table>
Here the Raw values are the actual disk temperatures in Celsius.  The
way in which the Raw values are printed, and the names under which the
Attributes are reported, is governed by the various
<b>&#39;-v Num,Description&#39;</b> Directives described previously.
<p>
Please see the
<b>smartctl</b> manual page for further explanation of the differences between
Normalized and Raw Attribute values.
<p>
<b>smartd</b>
will make log entries at loglevel
<b>LOG_CRIT</b> if a SMART Attribute has failed, for example:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>&#39;Device: /dev/hdc, Failed SMART Attribute: 5 Reallocated_Sector_Ct&#39;</b> 
</pre></td></tr>
</table>
<br />
 This loglevel is used for reporting enabled by the
<b>&#39;-H&#39;, -f&#39;, &#39;-l selftest&#39;,</b> and
<b>&#39;-l error&#39;</b> Directives. Entries reporting failure of SMART Prefailure Attributes
should not be ignored: they mean that the disk is failing.  Use the
<b>smartctl</b> utility to investigate.
<p>
Under Solaris with the default <b>/etc/syslog.conf</b> configuration,
messages below loglevel <b>LOG_NOTICE</b> will <b>not</b> be recorded.
Hence all <b>smartd</b> messages with loglevel <b>LOG_INFO</b> will be
lost.  If you want to use the existing daemon facility to log all
messages from <b>smartd</b>, you should change <b>/etc/syslog.conf</b>
from:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
       ...;daemon.notice;...        /var/adm/messages
</pre></td></tr>
</table>
to read:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
       ...;daemon.info;...          /var/adm/messages
</pre></td></tr>
</table>
Alternatively, you can use a local facility to log messages: please
see the <b>smartd</b> &#146;-l&#146; command-line option described above.
<p>
On Cygwin and Windows, the log messages are written to the event log
or to a file. See documentation of the &#146;-l FACILITY&#146; option above for
details.
<p>
On Windows, the following built-in commands can be used to control
<b>smartd</b>, if running as a daemon:
<p>
&#39;<b>smartd status</b>&#39; - check status
<p>
&#39;<b>smartd stop</b>&#39; - stop smartd
<p>
&#39;<b>smartd reload</b>&#39; - reread config file
<p>
&#39;<b>smartd restart</b>&#39; - restart smartd
<p>
&#39;<b>smartd sigusr1</b>&#39; - check disks now
<p>
&#39;<b>smartd sigusr2</b>&#39; - toggle debug mode
<p>
On WinNT4/2000/XP, <b>smartd</b> can also be run as a Windows service:
<p>
<p>
The Cygwin Version of <b>smartd</b> can be run as a service via the
cygrunsrv tool. The start-up script provides Cygwin-specific commands
to install and remove the service:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>/etc/rc.d/init.d/smartd install [options]</b> 
<b>/etc/rc.d/init.d/smartd remove</b> 
</pre></td></tr>
</table>
The service can be started and stopped by the start-up script as usual
(see <b><a href=#5>EXAMPLES</a></b> above).
<p>
<p>
The Windows Version of <b>smartd</b> has buildin support for services:
<p>
&#39;<b>smartd install [options]</b>&#39; installs a service
named "smartd" (display name "SmartD Service") using the command line
&#39;/installpath/smartd.exe --service [options]&#39;.
<p>
&#39;<b>smartd remove</b>&#39; can later be used to remove the service entry
from registry.
<p>
Upon startup, the smartd service changes the working directory
to its own installation path. If smartd.conf and blat.exe are stored
in this directory, no &#39;-c&#39; option and &#39;-M exec&#39; directive is needed.
<p>
The debug mode (&#39;-d&#39;, &#39;-q onecheck&#39;) does not work if smartd is
running as service.
<p>
The service can be controlled as usual with Windows commands &#39;net&#39;
or &#39;sc&#39; (&#39;<b>net start smartd</b>&#39;, &#39;<b>net stop smartd</b>&#39;).
<p>
Pausing the service (&#39;<b>net pause smartd</b>&#39;) sets the interval between
disk checks (&#39;-i N&#39;) to infinite.
<p>
Continuing the paused service (&#39;<b>net continue smartd</b>&#39;) resets the
interval and rereads the configuration file immediately (like <b>SIGHUP</b>):
<p>
Continuing a still running service (&#39;<b>net continue smartd</b>&#39; without
preceding &#39;<b>net pause smartd</b>&#39;) does not reread configuration but
checks disks immediately (like <b>SIGUSR1</b>).
<p>
<h1 class="manpages">LOG TIMESTAMP TIMEZONE</h1>
<p>
When <b>smartd</b> makes log entries, these are time-stamped.  The time
stamps are in the computer&#146;s local time zone, which is generally set
using either the environment variable &#39;<b>TZ</b>&#39; or using a
time-zone file such as <b>/etc/localtime</b>.  You may wish to change
the timezone while <b>smartd</b> is running (for example, if you carry
a laptop to a new time-zone and don&#146;t reboot it).  Due to a bug in the
<b>tzset(3)</b> function of many unix standard C libraries, the
time-zone stamps of <b>smartd</b> might not change.  For some systems,
<b>smartd</b> will work around this problem <i>if</i> the time-zone is
set using <b>/etc/localtime</b>. The work-around <i>fails</i> if the
time-zone is set using the &#39;<b>TZ</b>&#39; variable (or a file that it
points to).
<p>
<p>
<h1 class="manpages">RETURN VALUES</h1>
The return value (exit status) of
<b>smartd</b>
can have the following values:
<table class="src" cellpadding="5" cellspacing="0" border="1">
<tr><th width="25%">Tag</th><th>Description</th></tr>
<tr valign="top"><td>
<b>0:</b> </td><td valign="bottom">
Daemon startup successful, or <b>smartd</b> was killed by a SIGTERM (or in debug mode, a SIGQUIT).
</td></tr>
<tr valign="top"><td>
<b>1:</b> </td><td valign="bottom">
Commandline did not parse.
</td></tr>
<tr valign="top"><td>
<b>2:</b> </td><td valign="bottom">
There was a syntax error in the config file.
</td></tr>
<tr valign="top"><td>
<b>3:</b> </td><td valign="bottom">
Forking the daemon failed.
</td></tr>
<tr valign="top"><td>
<b>4:</b> </td><td valign="bottom">
Couldn&#39;t create PID file.
</td></tr>
<tr valign="top"><td>
<b>5:</b> </td><td valign="bottom">
Config file does not exist (only returned in conjunction with the &#39;-c&#39; option).
</td></tr>
<tr valign="top"><td>
<b>6:</b> </td><td valign="bottom">
Config file exists, but cannot be read.
</td></tr>
<tr valign="top"><td>
<b>8:</b> </td><td valign="bottom">
<b>smartd</b>
ran out of memory during startup.
</td></tr>
<tr valign="top"><td>
<b>9:</b> </td><td valign="bottom">
A compile time constant of<b> smartd</b> was too small.  This can be caused by an
excessive number of disks, or by lines in <b> /etc/smartd.conf</b> that are too long.
Please report this problem to <b> <a href="mailto:smartmontools-support@lists.sourceforge.net">smartmontools-support@lists.sourceforge.net</a></b>.
</td></tr>
<tr valign="top"><td>
<b>10</b> </td><td valign="bottom">
An inconsistency was found in <b>smartd</b>&#39;s internal data
structures. This should never happen.  It must be due to either a
coding or compiler bug.  <i>Please</i> report such failures to
<a href="mailto:smartmontools-support@lists.sourceforge.net.">smartmontools-support@lists.sourceforge.net.</a>
</td></tr>
<tr valign="top"><td>
<b>16:</b> </td><td valign="bottom">
A device explicitly listed in
<b>/etc/smartd.conf</b> can&#39;t be monitored.
</td></tr>
<tr valign="top"><td>
<b>17:</b> </td><td valign="bottom">
<b>smartd</b>
didn&#39;t find any devices to monitor.
</td></tr>
<tr valign="top"><td>
<b>254:</b> </td><td valign="bottom">
When in daemon mode,
<b>smartd</b>
received a SIGINT or SIGQUIT.  (Note that in debug mode, SIGINT has
the same effect as SIGHUP, and makes <b>smartd</b> reload its
configuration file. SIGQUIT has the same effect as SIGTERM and causes
<b>smartd</b> to exit with zero exit status.
</td></tr>
<tr valign="top"><td colspan="2">
<b>132 and above</b> </td></tr><tr valign="top"><td width=6%>&nbsp;</td><td>
<b>smartd</b>
was killed by a signal that is not explicitly listed above.  The exit
status is then 128 plus the signal number.  For example if
<b>smartd</b>
is killed by SIGKILL (signal 9) then the exit status is 137.
<p>
</td></tr>
<!-- PP ends table -->
</table>
<h1 class="manpages">AUTHOR</h1>
<b>Bruce Allen</b> <a href="mailto:smartmontools-support@lists.sourceforge.net">smartmontools-support@lists.sourceforge.net</a>
University of Wisconsin - Milwaukee Physics Department
<p>
<p>
<h1 class="manpages">CONTRIBUTORS</h1>
The following have made large contributions to smartmontools:
<table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<b>Casper Dik</b> (Solaris SCSI interface)
<b>Christian Franke</b> (Windows interface and Cygwin package)
<b>Douglas Gilbert</b> (SCSI subsystem)
<b>Guido Guenther</b> (Autoconf/Automake packaging)
<b>Geoffrey Keating</b> (Darwin ATA interface)
<b>Eduard Martinescu</b> (FreeBSD interface)
<b>Fr&#233;d&#233;ric L. W. Meunier</b> (Web site and Mailing list)
<b>Keiji Sawada</b> (Solaris ATA interface)
<b>Sergey Svishchev</b> (NetBSD interface)
<b>David Snyder and Sergey Svishchev</b> (OpenBSD interface)
<b>Phil Williams</b> (User interface and drive database)
<b>Shengfeng Zhou</b> (Linux Highpoint RocketRaid interface)
</pre></td></tr>
</table>
Many other individuals have made smaller contributions and corrections.
<p>
<p>
<h1 class="manpages">CREDITS</h1>
This code was derived from the smartsuite package, written by Michael
Cornwell, and from the previous ucsc smartsuite package. It extends
these to cover ATA-5 disks. This code was originally developed as a
Senior Thesis by Michael Cornwell at the Concurrent Systems Laboratory
(now part of the Storage Systems Research Center), Jack Baskin School
of Engineering, University of California, Santa
Cruz. <b><a href="http://ssrc.soe.ucsc.edu/">http://ssrc.soe.ucsc.edu</a>/</b> .
<h1 class="manpages"></h1>
HOME PAGE FOR SMARTMONTOOLS:
Please see the following web site for updates, further documentation, bug
reports and patches: <b><a href="http://smartmontools.sourceforge.net/">http://smartmontools.sourceforge.net</a>/</b>
<p>
<h1 class="manpages">SEE ALSO:</h1>
<b>smartd.conf</b>(5), <b>smartctl</b>(8), <b>syslogd</b>(8),
<b>syslog.conf</b>(5), <b>badblocks</b>(8), <b>ide-smart</b>(8), <b>regex</b>(7).
<p>
<h1 class="manpages"></h1>
REFERENCES FOR SMART
An introductory article about smartmontools is <i>Monitoring Hard
Disks with SMART</i>, by Bruce Allen, Linux Journal, January 2004,
pages 74-77. This is <b><a href="http://www.linuxjournal.com/article.php">http://www.linuxjournal.com/article.php</a>?sid=6983</b>
online.
<p>
If you would like to understand better how SMART works, and what it
does, a good place to start is with Sections 4.8 and 6.54 of the first
volume of the &#39;AT Attachment with Packet Interface-7&#39; (ATA/ATAPI-7)
specification.  This documents the SMART functionality which the
<b>smartmontools</b> utilities provide access to.  You can find
Revision 4b of this document at
<b><a href="http://www.t13.org/docs2004/d1532v1r4b-ATA-ATAPI-7.pdf">http://www.t13.org/docs2004/d1532v1r4b-ATA-ATAPI-7.pdf</a></b> .
Earlier and later versions of this Specification are available from
the T13 web site <b><a href="http://www.t13.org/">http://www.t13.org</a>/</b> .
<p>
The functioning of SMART was originally defined by the SFF-8035i
revision 2 and the SFF-8055i revision 1.4 specifications.  These are
publications of the Small Form Factors (SFF) Committee.  Links to
these documents may be found in the References section of the
smartmontools home page at <b><a href="http://smartmontools.sourceforge.net/#references">http://smartmontools.sourceforge.net/#references</a></b> .
<p>
<h1 class="manpages"></h1>
CVS ID OF THIS PAGE:
$Id: smartd.8.in,v 1.121 2008/03/04 22:09:47 ballen4705 Exp $
<br />
<hr />
<a href="index.html"><img alt="previous" border="0" src="../images/previous.gif" /></a>
<a href="index.html"><img alt="next" border="0" src="../images/next.gif" /></a>
<a href='../cgi-bin/printversion09a5.html?tutorial=unix_commands&amp;file=smartd.htm' target="_blank">
<img src="../images/print.gif" alt="Printer Friendly" border="0" /></a>
<br />
<hr />
<!-- PRINTING ENDS HERE -->
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text_image";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</td></tr>
</table>
</td>
<td class="right" align="center" valign="top">
<br /><br />
<table width="100%" cellpadding="0" cellspacing="0">
<tr valign="middle">
<td  class="top" style="border:0px;">
&nbsp;&nbsp;
</td>
</tr>
</table>
<table class="right"  cellpadding="0" cellspacing="0">
<tr>
<td align="center" class="right">
<p>
<u>Advertisements</u>
</p>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
  src="../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<br /><br /></td></tr></table>
</td></tr></table>
</center>
</body>

<!-- Mirrored from www.tutorialspoint.com/unix_commands/smartd.htm by HTTrack Website Copier/3.x [XR&CO'2010], Mon, 15 Apr 2013 05:05:26 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>
