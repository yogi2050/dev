<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<!-- Mirrored from www.tutorialspoint.com/unix_commands/psed.htm by HTTrack Website Copier/3.x [XR&CO'2010], Mon, 15 Apr 2013 05:05:16 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>psed - Unix, Linux Command</title>
<meta name="Description" Content="psed - Unix, Linux Command Manual Pages (Manpages) ,  Learning fundamentals of UNIX and Linux in simple and easy steps : A beginner's tutorial containing complete knowledge of Unix Korn  and Bourne Shell and Programming, Utilities, File System, Directories, Memory Management, Special Variables, vi editor, Processes" />
<meta name="Keywords" content="Unix, Tutorials, Learning, Operating, System, OS, Beginners, Basics, System Calls, Korn, Bourne, Shell,Programming, Utilities, File System, Directories, Memory Management, Special Variables, vi editor, Processes" />
<meta http-equiv="pragma" content="no-cache" />
<meta http-equiv="cache-control" content="no-cache" />
<base  />
<link rel="stylesheet" type="text/css" href="../tp.css" />
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
</script>
</head>
<body>
<center>
<a name="top"></a>
<table border="0" class="main" cellpadding="2" cellspacing="0">
<tr>
<td class="content" valign="top" align="left">
<a href="../index-2.html"><img src="../images/tp-logo.gif" border="0"  alt="Tutorials Point" /></a>
<br />
<br />
<div  class="search">
<!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0">
<tr><td nowrap="nowrap" valign="top" align="center" height="32">
<a href="http://www.google.com/">
<img src="../../www.google.com/logos/Logo_25wht.gif" border="0" alt="Google" align="middle"></img></a>
</td>
</tr>
<tr>
<td nowrap="nowrap">
<input type="hidden" name="domains" value="www.tutorialspoint.com"></input>
<input type="text" name="q" size="20" maxlength="255" value=""></input>
<input type="submit" name="sa" style="width:20px;font-weight:bold" value="..."></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="radio" name="sitesearch" value="" checked="checked"></input>
<font size="-1" color="#000000">Web</font>
</td>
<td>
<input type="radio" name="sitesearch" value="www.tutorialspoint.com"></input>
<font size="-1" color="#000000">This Site</font>
</td>
</tr>
</table>
<input type="hidden" name="client" value="pub-7133395778201029"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="cof" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"></input>
<input type="hidden" name="hl" value="en"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google -->
</div>
<br />
&nbsp;&nbsp;<b>Unix for Beginners</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="../unix/index.html">Unix - Home</a></li>
<li><a class="left" target="_top" href="../unix/unix-getting-started.html">Unix - Getting Started</a></li>
<li><a class="left" target="_top" href="../unix/unix-file-management.html">Unix - File Management</a></li>
<li><a class="left" target="_top" href="../unix/unix-directories.html">Unix - Directories</a></li>
<li><a class="left" target="_top" href="../unix/unix-file-permission.html">Unix - File Permission</a></li>
<li><a class="left" target="_top" href="../unix/unix-environment.html">Unix - Environment</a></li>
<li><a class="left" target="_top" href="../unix/unix-basic-utilities.html">Unix - Basic Utilities</a></li>
<li><a class="left" target="_top" href="../unix/unix-pipes-filters.html">Unix - Pipes &amp; Filters</a></li>
<li><a class="left" target="_top" href="../unix/unix-processes.html">Unix - Processes</a></li>
<li><a class="left" target="_top" href="../unix/unix-communication.html">Unix - Communication</a></li>
<li><a class="left" target="_top" href="../unix/unix-vi-editor.html">Unix - The vi Editor</a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>Unix Shell Programming</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="../unix/unix-shell.html">Unix - What is Shell?</a></li>
<li><a class="left" target="_top" href="../unix/unix-using-variables.html">Unix - Using Variables</a></li>
<li><a class="left" target="_top" href="../unix/unix-special-variables.html">Unix - Special Variables</a></li>
<li><a class="left" target="_top" href="../unix/unix-using-arrays.html">Unix - Using Arrays</a></li>
<li><a class="left" target="_top" href="../unix/unix-basic-operators.html">Unix - Basic Operators</a></li>
<li><a class="left" target="_top" href="../unix/unix-decision-making.html">Unix - Decision Making</a></li>
<li><a class="left" target="_top" href="../unix/unix-shell-loops.html">Unix - Shell Loops</a></li>
<li><a class="left" target="_top" href="../unix/unix-loop-control.html">Unix - Loop Control</a></li>
<li><a class="left" target="_top" href="../unix/unix-shell-substitutions.html">Unix - Shell Substitutions</a></li>
<li><a class="left" target="_top" href="../unix/unix-quoting-mechanisms.html">Unix - Quoting Mechanisms</a></li>
<li><a class="left" target="_top" href="../unix/unix-io-redirections.html">Unix - IO Redirections</a></li>
<li><a class="left" target="_top" href="../unix/unix-shell-functions.html">Unix - Shell Functions</a></li>
<li><a class="left" target="_top" href="../unix/unix-manpage-help.html">Unix - Manpage Help</a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>Advanced Unix</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="../unix/unix-regular-expressions.html">Unix - Regular Expressions</a></li>
<li><a class="left" target="_top" href="../unix/unix-file-system.html">Unix - File System Basics</a></li>
<li><a class="left" target="_top" href="../unix/unix-user-administration.html">Unix - User Administration</a></li>
<li><a class="left" target="_top" href="../unix/unix-system-performance.html">Unix - System Performance</a></li>
<li><a class="left" target="_top" href="../unix/unix-system-logging.html">Unix - System Logging</a></li>
<li><a class="left" target="_top" href="../unix/unix-signals-traps.html">Unix - Signals and Traps</a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>Unix Useful References</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="../unix/unix-useful-commands.html">Unix - Useful Commands</a></li>
<li><a class="left" target="_top" href="../unix/unix-quick-guide.html">Unix - Quick Guide</a></li>
<li><a class="left" target="_top" href="../unix/unix-builtin-functions.html">Unix - Builtin Functions</a></li>
<li><a class="left" target="_top" href="../unix_system_calls/index.html">Unix - System Calls</a></li>
<li><a class="left" target="_top" href="index.html"><b>Unix - Commands List</b></a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>Unix Useful Resources</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="../unix/unix-useful-resources.html">Unix Useful Resources</a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>Selected Reading</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="../computer_glossary.html">Computer Glossary</a></li>
<li><a class="left" target="_top" href="../computer_whoiswho.html">Who is Who</a></li>
</ul>
</div>
<br /><br />
<small>&copy; 2013 TutorialsPoint.COM </small>
</td>
<td valign="top">
<br /><br />
<table cellpadding="0" cellspacing="0">
<tr valign="middle">
<td  style="width:20px;"></td>
<td  class="top">
&nbsp;&nbsp;<a class="top" href="../index-2.html">Home</a>&nbsp;&nbsp;
</td>
<td  style="width:20px;"></td>
<td  class="top">
&nbsp;&nbsp;<a class="top" href="../references.html">References</a>&nbsp;&nbsp;
</td>
<td  style="width:20px;"></td>
<td  class="top">
&nbsp;&nbsp;<a class="top" href="../forums/index.html">Discussion Forums</a>&nbsp;&nbsp;
</td>
<td  style="width:20px;"></td>
<td  class="top">
&nbsp;&nbsp;<a class="top" href="../about/index.html">About TP</a>&nbsp;&nbsp;
</td>
</tr>
</table>
<table class="middle" cellpadding="5" cellspacing="0">
<tr>
<td>
<!-- PRINTING STARTS HERE -->
<h1>psed - Unix, Linux Command</h1>
<hr />
<a href="index.html"><img alt="previous" border="0" src="../images/previous.gif" /></a>
<a href="index.html"><img alt="next" border="0" src="../images/next.gif" /></a>
<!-- AddThis Bookmark Button BEGIN -->
<a href="http://www.addthis.com/bookmark.php" rel="nofollow" onclick="addthis_url   = location.href; addthis_title = document.title; return addthis_click(this);" target="_blank"><img src="../images/add-this.gif" border="0" alt="AddThis Social Bookmark Button" /></a> <script type="text/javascript">var addthis_pub = 'tutorialspoint';</script><script type="text/javascript" src="http://s9.addthis.com/js/widget.php?v=10"></script>
<script type="text/javascript">var addthis_pub = 'tutorialspoint';</script><script type="text/javascript" src="http://s9.addthis.com/js/widget.php?v=10"></script>  
<!-- AddThis Bookmark Button END -->
<br />
<br />
<hr/><div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
  src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
<hr />
<!-- Not defining reserved macro 'Sh' ! -->
<!-- ignored unsupported tag .tr -->
<!-- ignored unsupported tag .ie -->
<!-- ignored unsupported tag .if -->
<!-- ignored unsupported tag .if -->
<!-- ignored unsupported tag .br\} -->
<!-- ignored unsupported tag .el\{ -->
<!-- ignored unsupported tag .br\} -->
<!-- ignored unsupported tag .if -->
<!-- ignored unsupported tag .rr -->
<!-- ignored unsupported tag .\} -->
<!-- ignored unsupported tag .hy -->
<!-- ignored unsupported tag .if -->
<!-- ignored unsupported tag .if -->
<!-- ignored unsupported tag .\} -->

<!-- ignored unsupported tag .\} -->
<!-- ignored unsupported tag .if -->
<!-- ignored unsupported tag .\} -->

<!-- ignored unsupported tag .\} -->
<!-- ignored unsupported tag .if -->
<!-- ignored unsupported tag .if -->
<!-- ignored unsupported tag .if -->

<!-- ignored unsupported tag .\} -->
<!-- ignored unsupported tag .tm -->
<h1 class="manpages">NAME</h1>
psed - a stream editor
<h1 class="manpages">SYNOPSIS</h1>
<!-- ignored unsupported tag .tm -->
<tt><table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<!-- ignored unsupported tag .ne -->
   psed [-an] script [file ...]
   psed [-an] [-e script] [-f script-file] [file ...]
</tt></pre></td></tr>
</table>
<p>
<tt><table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<!-- ignored unsupported tag .ne -->
   s2p  [-an] [-e script] [-f script-file]
</tt></pre></td></tr>
</table>
<h1 class="manpages">DESCRIPTION</h1>
<!-- ignored unsupported tag .tm -->
A stream editor reads the input stream consisting of the specified files
(or standard input, if none are given), processes is line by line by
applying a script consisting of edit commands, and writes resulting lines
to standard output. The filename &#145;<tt>-</tt>&#146; may be used to read standard input.
<p>
The edit script is composed from arguments of <b>-e</b> options and
script-files, in the given order. A single script argument may be specified
as the first parameter.
<p>
If this program is invoked with the name <i>s2p</i>, it will act as a
sed-to-Perl translator. See sed Script Translation.
<p>
<b>sed</b> returns an exit code of 0 on success or &gt;0 if an error occurred.
<h1 class="manpages">OPTIONS</h1>
<!-- ignored unsupported tag .tm -->
<table class="src" cellpadding="5" cellspacing="0" border="1">
<tr><th width="25%">Tag</th><th>Description</th></tr>
<tr valign="top"><td width=4%>
<b>-a</b>
</td><td>
<!-- ignored unsupported tag .tm -->
A file specified as argument to the <b>w</b> edit command is by default
opened before input processing starts. Using <b>-a</b>, opening of such
files is delayed until the first line is actually written to the file.
</td></tr>
<tr valign="top"><td width=4%>
<b>-e</b> <i>script</i>
</td><td>
<!-- ignored unsupported tag .tm -->
The editing commands defined by <i>script</i> are appended to the script.
Multiple commands must be separated by newlines.
</td></tr>
<tr valign="top"><td width=4%>
<b>-f</b> <i>script-file</i>
</td><td>
<!-- ignored unsupported tag .tm -->
Editing commands from the specified <i>script-file</i> are read and appended
to the script.
</td></tr>
<tr valign="top"><td width=4%>
<b>-n</b>
</td><td>
<!-- ignored unsupported tag .tm -->
By default, a line is written to standard output after the editing script
has been applied to it. The <b>-n</b> option suppresses automatic printing.
</td></tr>
</table>
<h1 class="manpages">COMMANDS</h1>
<!-- ignored unsupported tag .tm -->
<b>sed</b> command syntax is defined as
<p>
   [<i>address</i>[<b>,</b><i>address</i>]][<b>!</b>]<i>function</i>[<i>argument</i>]
<p>
with whitespace being permitted before or after addresses, and between
the function character and the argument. The <i>address</i>es and the
address inverter (<tt>!</tt>) are used to restrict the application of a
command to the selected line(s) of input.
<p>
Each command must be on a line of its own, except where noted in
the synopses below.
<p>
The edit cycle performed on each input line consist of reading the line
(without its trailing newline character) into the <i>pattern space</i>,
applying the applicable commands of the edit script, writing the final
contents of the pattern space and a newline to the standard output.
A <i>hold space</i> is provided for saving the contents of the
pattern space for later use.
<h1 class="manpages">Addresses</h1>
<!-- ignored unsupported tag .tm -->
A sed address is either a line number or a pattern, which may be combined
arbitrarily to construct ranges. Lines are numbered across all input files.
<p>
Any address may be followed by an exclamation mark (&#145;<tt>!</tt>&#146;), selecting
all lines not matching that address.
<table class="src" cellpadding="5" cellspacing="0" border="1">
<tr><th width="25%">Tag</th><th>Description</th></tr>
<tr valign="top"><td width=4%>
<i>number</i>
</td><td>
<!-- ignored unsupported tag .tm -->
The line with the given number is selected.
</td></tr>
<tr valign="top"><td width=4%>
<b>$</b>
</td><td>
<!-- ignored unsupported tag .tm -->
A dollar sign (<tt>$</tt>) is the line number of the last line of the input stream.
</td></tr>
<tr valign="top"><td width=4%>
<b>/</b><i>regular expression</i><b>/</b>
</td><td>
<!-- ignored unsupported tag .tm -->
A pattern address is a basic regular expression (see
Basic Regular Expressions), between the delimiting character <tt>/</tt>.
Any other character except <tt>&#92;</tt> or newline may be used to delimit a
pattern address when the initial delimiter is prefixed with a
backslash (&#145;<tt>&#92;</tt>&#146;).
</td></tr>
<!-- PP ends table -->
</table>
If no address is given, the command selects every line.
<p>
If one address is given, it selects the line (or lines) matching the
address.
<p>
Two addresses select a range that begins whenever the first address
matches, and ends (including that line) when the second address matches.
If the first (second) address is a matching pattern, the second
address is not applied to the very same line to determine the end of
the range. Likewise, if the second address is a matching pattern, the
first address is not applied to the very same line to determine the
begin of another range. If both addresses are line numbers,
and the second line number is less than the first line number, then
only the first line is selected.
<h1 class="manpages">Functions</h1>
<!-- ignored unsupported tag .tm -->
The maximum permitted number of addresses is indicated with each
function synopsis below.
<p>
The argument <i>text</i> consists of one or more lines following the command.
Embedded newlines in <i>text</i> must be preceded with a backslash.  Other
backslashes in <i>text</i> are deleted and the following character is taken
literally.
<table class="src" cellpadding="5" cellspacing="0" border="1">
<tr><th width="25%">Tag</th><th>Description</th></tr>
<tr valign="top"><td width=4%>
[1addr]<b>a&#92;</b> <i>text</i>
</td><td>
<!-- ignored unsupported tag .tm -->
Write <i>text</i> (which must start on the line following the command)
to standard output immediately before reading the next line
of input, either by executing the <b>N</b> function or by beginning a new cycle.
</td></tr>
<tr valign="top"><td width=4%>
[2addr]<b>b</b> [<i>label</i>]
</td><td>
<!-- ignored unsupported tag .tm -->
Branch to the <b>:</b> function with the specified <i>label</i>. If no label
is given, branch to the end of the script.
</td></tr>
<tr valign="top"><td width=4%>
[2addr]<b>c&#92;</b> <i>text</i>
</td><td>
<!-- ignored unsupported tag .tm -->
The line, or range of lines, selected by the address is deleted.
The <i>text</i> (which must start on the line following the command)
is written to standard output. With an address range, this occurs at
the end of the range.
</td></tr>
<tr valign="top"><td width=4%>
[2addr]<b>d</b>
</td><td>
<!-- ignored unsupported tag .tm -->
Deletes the pattern space and starts the next cycle.
</td></tr>
<tr valign="top"><td width=4%>
[2addr]<b>D</b>
</td><td>
<!-- ignored unsupported tag .tm -->
Deletes the pattern space through the first embedded newline or to the end.
If the pattern space becomes empty, a new cycle is started, otherwise
execution of the script is restarted.
</td></tr>
<tr valign="top"><td width=4%>
[2addr]<b>g</b>
</td><td>
<!-- ignored unsupported tag .tm -->
Replace the contents of the pattern space with the hold space.
</td></tr>
<tr valign="top"><td width=4%>
[2addr]<b>G</b>
</td><td>
<!-- ignored unsupported tag .tm -->
Append a newline and the contents of the hold space to the pattern space.
</td></tr>
<tr valign="top"><td width=4%>
[2addr]<b>h</b>
</td><td>
<!-- ignored unsupported tag .tm -->
Replace the contents of the hold space with the pattern space.
</td></tr>
<tr valign="top"><td width=4%>
[2addr]<b>H</b>
</td><td>
<!-- ignored unsupported tag .tm -->
Append a newline and the contents of the pattern space to the hold space.
</td></tr>
<tr valign="top"><td width=4%>
[1addr]<b>i&#92;</b> <i>text</i>
</td><td>
<!-- ignored unsupported tag .tm -->
Write the <i>text</i> (which must start on the line following the command)
to standard output.
</td></tr>
<tr valign="top"><td width=4%>
[2addr]<b>l</b>
</td><td>
<!-- ignored unsupported tag .tm -->
Print the contents of the pattern space: non-printable characters are
shown in C-style escaped form; long lines are split and have a trailing
&#145;<tt>&#92;</tt>&#146; at the point of the split; the true end of a line is marked with
a &#145;<tt>$</tt>&#146;. Escapes are: &#145;&#92;a&#146;, &#145;&#92;t&#146;, &#145;&#92;n&#146;, &#145;&#92;f&#146;, &#145;&#92;r&#146;, &#145;&#92;e&#146; for
<font size="-1">BEL</font>, <font size="-1">HT</font>, <font size="-1">LF</font>, <font size="-1">FF</font>, <font size="-1">CR</font>, <font size="-1">ESC</font>, respectively, and &#145;&#92;&#146; followed by a three-digit
octal number for all other non-printable characters.
</td></tr>
<tr valign="top"><td width=4%>
[2addr]<b>n</b>
</td><td>
<!-- ignored unsupported tag .tm -->
If automatic printing is enabled, write the pattern space to the standard
output. Replace the pattern space with the next line of input. If
there is no more input, processing is terminated.
</td></tr>
<tr valign="top"><td width=4%>
[2addr]<b>N</b>
</td><td>
<!-- ignored unsupported tag .tm -->
Append a newline and the next line of input to the pattern space. If
there is no more input, processing is terminated.
</td></tr>
<tr valign="top"><td width=4%>
[2addr]<b>p</b>
</td><td>
<!-- ignored unsupported tag .tm -->
Print the pattern space to the standard output. (Use the <b>-n</b> option
to suppress automatic printing at the end of a cycle if you want to
avoid double printing of lines.)
</td></tr>
<tr valign="top"><td width=4%>
[2addr]<b>P</b>
</td><td>
<!-- ignored unsupported tag .tm -->
Prints the pattern space through the first embedded newline or to the end.
</td></tr>
<tr valign="top"><td width=4%>
[1addr]<b>q</b>
</td><td>
<!-- ignored unsupported tag .tm -->
Branch to the end of the script and quit without starting a new cycle.
</td></tr>
<tr valign="top"><td width=4%>
[1addr]<b>r</b> <i>file</i>
</td><td>
<!-- ignored unsupported tag .tm -->
Copy the contents of the <i>file</i> to standard output immediately before
the next attempt to read a line of input. Any error encountered while
reading <i>file</i> is silently ignored.
</td></tr>
<tr valign="top"><td width=4%>
[2addr]<b>s/</b><i>regular expression</i><b>/</b><i>replacement</i><b>/</b><i>flags</i>
</td><td>
<!-- ignored unsupported tag .tm -->
Substitute the <i>replacement</i> string for the first substring in
the pattern space that matches the <i>regular expression</i>.
Any character other than backslash or newline can be used instead of a
slash to delimit the regular expression and the replacement.
To use the delimiter as a literal character within the regular expression
and the replacement, precede the character by a backslash (&#145;<tt>&#92;</tt>&#146;).
<p>
<!-- ignored unsupported tag .if -->
Literal newlines may be embedded in the replacement string by
preceding a newline with a backslash.
<p>
<!-- ignored unsupported tag .if -->
Within the replacement, an ampersand (&#145;<tt>&</tt>&#146;) is replaced by the string
matching the regular expression. The strings &#145;<tt>&#92;1</tt>&#146; through &#145;<tt>&#92;9</tt>&#146; are
replaced by the corresponding subpattern (see Basic Regular Expressions).
To get a literal &#145;<tt>&</tt>&#146; or &#145;<tt>&#92;</tt>&#146; in the replacement text, precede it
by a backslash.
<p>
<!-- ignored unsupported tag .if -->
The following <i>flags</i> modify the behaviour of the <b>s</b> command:
<table class="src" cellpadding="5" cellspacing="0" border="1">
<tr><th width="25%">Tag</th><th>Description</th></tr>
<tr valign="top"><td width=8%>
<b>g</b>
</td><td>
<!-- ignored unsupported tag .tm -->
The replacement is performed for all matching, non-overlapping substrings
of the pattern space.
</td></tr>
<tr valign="top"><td width=8%>
<b>1</b>..<b>9</b>
</td><td>
<!-- ignored unsupported tag .tm -->
Replace only the n-th matching substring of the pattern space.
</td></tr>
<tr valign="top"><td width=8%>
<b>p</b>
</td><td>
<!-- ignored unsupported tag .tm -->
If the substitution was made, print the new value of the pattern space.
</td></tr>
<tr valign="top"><td width=8%>
<b>w</b> <i>file</i>
</td><td>
<!-- ignored unsupported tag .tm -->
If the substitution was made, write the new value of the pattern space
to the specified file.
</td></tr>
</table>
</td></tr>
<tr valign="top"><td width=8%>
[2addr]<b>t</b> [<i>label</i>]
</td><td>
<!-- ignored unsupported tag .tm -->
Branch to the <b>:</b> function with the specified <i>label</i> if any <b>s</b>
substitutions have been made since the most recent reading of an input line
or execution of a <b>t</b> function. If no label is given, branch to the end of
the script.
</td></tr>
<tr valign="top"><td width=8%>
[2addr]<b>w</b> <i>file</i>
</td><td>
<!-- ignored unsupported tag .tm -->
The contents of the pattern space are written to the <i>file</i>.
</td></tr>
<tr valign="top"><td width=8%>
[2addr]<b>x</b>
</td><td>
<!-- ignored unsupported tag .tm -->
Swap the contents of the pattern space and the hold space.
</td></tr>
<tr valign="top"><td width=8%>
[1addr]<b>=</b>
</td><td>
<!-- ignored unsupported tag .tm -->
Prints the current line number on the standard output.
</td></tr>
<tr valign="top"><td width=8%>
[0addr]<b>:</b> [<i>label</i>]
</td><td>
<!-- ignored unsupported tag .tm -->
The command specifies the position of the <i>label</i>. It has no other effect.
</td></tr>
<tr valign="top"><td width=8%>
[2addr]<b>{</b> [<i>command</i>]
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<tr valign="top"><td width=8%>
[0addr]<b>}</b>
</td><td>
<!-- ignored unsupported tag .tm -->
These two commands begin and end a command list. The first command may
be given on the same line as the opening <b>{</b> command. The commands
within the list are jointly selected by the address(es) given on the
<b>{</b> command (but may still have individual addresses).
</td></tr>
<tr valign="top"><td width=8%>
[0addr]<b>#</b> [<i>comment</i>]
</td><td>
<!-- ignored unsupported tag .tm -->
The entire line is ignored (treated as a comment). If, however, the first
two characters in the script are &#145;<tt>#n</tt>&#146;, automatic printing of output is
suppressed, as if the <b>-n</b> option were given on the command line.
</td></tr>
</table>
<h1 class="manpages">BASIC REGULAR EXPRESSIONS</h1>
<!-- ignored unsupported tag .tm -->
A <i>Basic Regular Expression</i> (<font size="-1">BRE</font>), as defined in <font size="-1">POSIX</font> 1003.2, consists
of <i>atoms</i>, for matching parts of a string, and <i>bounds</i>, specifying
repetitions of a preceding atom.
<h1 class="manpages">Atoms</h1>
<!-- ignored unsupported tag .tm -->
The possible atoms of a <font size="-1">BRE</font> are: <b>.</b>, matching any single character;
<b>^</b> and <b>$</b>, matching the null string at the beginning or end
of a string, respectively; a <i>bracket expressions</i>, enclosed
in <b>[</b> and <b>]</b> (see below); and any single character with no
other significance (matching that character). A <b>&#92;</b> before one
of: <b>.</b>, <b>^</b>, <b>$</b>, <b>[</b>, <b>*</b>, <b>&#92;</b>, matching the character
after the backslash. A sequence of atoms enclosed in <b>&#92;(</b> and <b>&#92;)</b>
becomes an atom and establishes the target for a <i>backreference</i>,
consisting of the substring that actually matches the enclosed atoms.
Finally, <b>&#92;</b> followed by one of the digits <b>0</b> through <b>9</b> is a
backreference.
<p>
A <b>^</b> that is not first, or a <b>$</b> that is not last does not have
a special significance and need not be preceded by a backslash to
become literal. The same is true for a <b>]</b>, that does not terminate
a bracket expression.
<p>
An unescaped backslash cannot be last in a <font size="-1">BRE</font>.
<h1 class="manpages">Bounds</h1>
<!-- ignored unsupported tag .tm -->
The <font size="-1">BRE</font> bounds are: <b>*</b>, specifying 0 or more matches of the preceding
atom; <b>&#92;{</b><i>count</i><b>&#92;}</b>, specifying that many repetitions;
<b>&#92;{</b><i>minimum</i><b>,&#92;}</b>, giving a lower limit; and
<b>&#92;{</b><i>minimum</i><b>,</b><i>maximum</i><b>&#92;}</b> finally defines a lower and upper
bound.
<p>
A bound appearing as the first item in a <font size="-1">BRE</font> is taken literally.
<h1 class="manpages">Bracket Expressions</h1>
<!-- ignored unsupported tag .tm -->
A <i>bracket expression</i> is a list of characters, character ranges
and character classes enclosed in <b>[</b> and <b>]</b> and matches any
single character from the represented set of characters.
<p>
A character range is written as two characters separated by <b>-</b> and
represents all characters (according to the character collating sequence)
that are not less than the first and not greater than the second.
(Ranges are very collating-sequence-dependent, and portable programs
should avoid relying on them.)
<p>
A character class is one of the class names
<p>
<tt><table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<!-- ignored unsupported tag .ne -->
   alnum     digit     punct
   alpha     graph     space
   blank     lower     upper
   cntrl     print     xdigit
</tt></pre></td></tr>
</table>
<p>
enclosed in <b>[:</b> and <b>:]</b> and represents the set of characters
as defined in <i>ctype</i>(3).
<p>
If the first character after <b>[</b> is <b>^</b>, the sense of matching is
inverted.
<p>
To include a literal &#145;<tt>^</tt>&#146;, place it anywhere else but first. To
include a literal &#146;<tt>]</tt>&#146; place it first or immediately after an
initial <b>^</b>. To include a literal &#145;<tt>-</tt>&#146; make it the first (or
second after <b>^</b>) or last character, or the second endpoint of
a range.
<p>
The special bracket expression constructs <tt>[[:&lt;:]]</tt> and <tt>[[:&gt;:]]</tt>
match the null string at the beginning and end of a word respectively.
(Note that neither is identical to Perl&#146;s &#145;&#92;b&#146; atom.)
<h1 class="manpages">Additional Atoms</h1>
<!-- ignored unsupported tag .tm -->
Since some sed implementations provide additional regular expression
atoms (not defined in <font size="-1">POSIX</font> 1003.2), <b>psed</b> is capable of translating
the following backslash escapes:
<!-- ignored unsupported tag .ie -->
<table class="src" cellpadding="5" cellspacing="0" border="1">
<tr><th width="25%">Tag</th><th>Description</th></tr>
<tr valign="top"><td width=4%>
<b>&#92;&lt;</b> This is the same as <tt>[[:&gt;:]]</tt>.
</td><td>
<!-- ignored unsupported tag .tm -->
<!-- ignored unsupported tag .ie -->
</td></tr>
<tr valign="top"><td width=4%>
<b>&#92;&gt;</b> This is the same as <tt>[[:&lt;:]]</tt>.
</td><td>
<!-- ignored unsupported tag .tm -->
<!-- ignored unsupported tag .ie -->
</td></tr>
<tr valign="top"><td width=4%>
<b>&#92;w</b> This is an abbreviation for <tt>[[:alnum:]_]</tt>.
</td><td>
<!-- ignored unsupported tag .tm -->
<!-- ignored unsupported tag .ie -->
</td></tr>
<tr valign="top"><td width=4%>
<b>&#92;W</b> This is an abbreviation for <tt>[^[:alnum:]_]</tt>.
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<tr valign="top"><td width=4%>
<b>&#92;y</b> Match the empty string at a word boundary.
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<tr valign="top"><td width=4%>
<b>&#92;B</b> Match the empty string between any two either word or non-word characters.
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<!-- PP ends table -->
</table>
To enable this feature, the environment variable <font size="-1">PSEDEXTBRE</font> must be set
to a string containing the requested characters, e.g.:
<tt>PSEDEXTBRE=<blink><blink>\(</blink>aq</blink>&lt;&gt;wW<blink><blink>\(</blink>aq</blink></tt>.
<h1 class="manpages">ENVIRONMENT</h1>
<!-- ignored unsupported tag .tm -->
The environment variable <tt>PSEDEXTBRE</tt> may be set to extend BREs.
See Additional Atoms.
<h1 class="manpages">DIAGNOSTICS</h1>
<!-- ignored unsupported tag .tm -->
<table class="src" cellpadding="5" cellspacing="0" border="1">
<tr><th width="25%">Tag</th><th>Description</th></tr>
<tr valign="top"><td width=4%>
ambiguous translation for character &#145;%s&#146; in &#145;y&#146; command
</td><td>
<!-- ignored unsupported tag .tm -->
The indicated character appears twice, with different translations.
</td></tr>
<tr valign="top"><td width=4%>
&#145;[&#146; cannot be last in pattern
</td><td>
<!-- ignored unsupported tag .tm -->
A &#145;[&#146; in a <font size="-1">BRE</font> indicates the beginning of a <i>bracket expression</i>.
</td></tr>
<tr valign="top"><td width=4%>
&#145;&#92;&#146; cannot be last in pattern
</td><td>
<!-- ignored unsupported tag .tm -->
A &#145;&#92;&#146; in a <font size="-1">BRE</font> is used to make the subsequent character literal.
</td></tr>
<tr valign="top"><td width=4%>
&#145;&#92;&#146; cannot be last in substitution
</td><td>
<!-- ignored unsupported tag .tm -->
A &#145;&#92;&#146; in a subsitution string is used to make the subsequent character literal.
</td></tr>
<tr valign="top"><td width=4%>
conflicting flags &#145;%s&#146;
</td><td>
<!-- ignored unsupported tag .tm -->
In an <b>s</b> command, either the &#145;g&#146; flag and an n-th occurrence flag, or
multiple n-th occurrence flags are specified. Note that only the digits
&#145;1&#146; through &#145;9&#146; are permitted.
<!-- ignored unsupported tag .ie -->
</td></tr>
<tr valign="top"><td width=4%>
duplicate label <tt>%s</tt> (first defined at <tt>%s</tt>)
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<tr valign="top"><td width=4%>
excess address(es)
</td><td>
<!-- ignored unsupported tag .tm -->
The command has more than the permitted number of addresses.
</td></tr>
<tr valign="top"><td width=4%>
extra characters after command (%s)
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<tr valign="top"><td width=4%>
illegal option &#145;%s&#146;
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<tr valign="top"><td width=4%>
improper delimiter in s command
</td><td>
<!-- ignored unsupported tag .tm -->
The <font size="-1">BRE</font> and substitution may not be delimited with &#145;&#92;&#146; or newline.
</td></tr>
<tr valign="top"><td width=4%>
invalid address after &#145;,&#146;
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<tr valign="top"><td width=4%>
invalid backreference (%s)
</td><td>
<!-- ignored unsupported tag .tm -->
The specified backreference number exceeds the number of backreferences
in the <font size="-1">BRE</font>.
</td></tr>
<tr valign="top"><td width=4%>
invalid repeat clause &#145;&#92;{%s&#92;}&#146;
</td><td>
<!-- ignored unsupported tag .tm -->
The repeat clause does not contain a valid integer value, or pair of
values.
</td></tr>
<tr valign="top"><td width=4%>
malformed regex, 1st address
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<tr valign="top"><td width=4%>
malformed regex, 2nd address
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<tr valign="top"><td width=4%>
malformed regular expression
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<tr valign="top"><td width=4%>
malformed substitution expression
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<tr valign="top"><td width=4%>
malformed &#145;y&#146; command argument
</td><td>
<!-- ignored unsupported tag .tm -->
The first or second string of a <b>y</b> command  is syntactically incorrect.
</td></tr>
<tr valign="top"><td width=4%>
maximum less than minimum in &#145;&#92;{%s&#92;}&#146;
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<tr valign="top"><td width=4%>
no script command given
</td><td>
<!-- ignored unsupported tag .tm -->
There must be at least one <b>-e</b> or one <b>-f</b> option specifying a
script or script file.
</td></tr>
<tr valign="top"><td width=4%>
&#145;&#92;&#146; not valid as delimiter in &#145;y&#146; command
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<tr valign="top"><td width=4%>
option -e requires an argument
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<tr valign="top"><td width=4%>
option -f requires an argument
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<tr valign="top"><td width=4%>
&#145;s&#146; command requires argument
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<tr valign="top"><td width=4%>
start of unterminated &#145;{&#146;
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<tr valign="top"><td width=4%>
string lengths in &#145;y&#146; command differ
</td><td>
<!-- ignored unsupported tag .tm -->
The translation table strings in a <b>y</b> commanf must have equal lengths.
</td></tr>
<tr valign="top"><td width=4%>
undefined label &#145;%s&#146;
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<tr valign="top"><td width=4%>
unexpected &#145;}&#146;
</td><td>
<!-- ignored unsupported tag .tm -->
A <b>}</b> command without a preceding <b>{</b> command was encountered.
</td></tr>
<tr valign="top"><td width=4%>
unexpected end of script
</td><td>
<!-- ignored unsupported tag .tm -->
The end of the script was reached although a text line after a
<b>a</b>, <b>c</b> or <b>i</b> command indicated another line.
</td></tr>
<tr valign="top"><td width=4%>
unknown command &#145;%s&#146;
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<tr valign="top"><td width=4%>
unterminated &#145;[&#146;
</td><td>
<!-- ignored unsupported tag .tm -->
A <font size="-1">BRE</font> contains an unterminated bracket expression.
</td></tr>
<tr valign="top"><td width=4%>
unterminated &#145;&#92;(&#146;
</td><td>
<!-- ignored unsupported tag .tm -->
A <font size="-1">BRE</font> contains an unterminated backreference.
</td></tr>
<tr valign="top"><td width=4%>
&#145;&#92;{&#146; without closing &#145;&#92;}&#146;
</td><td>
<!-- ignored unsupported tag .tm -->
A <font size="-1">BRE</font> contains an unterminated bounds specification.
</td></tr>
<tr valign="top"><td width=4%>
&#145;&#92;)&#146; without preceding &#145;&#92;(&#146;
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
<tr valign="top"><td width=4%>
&#145;y&#146; command requires argument
</td><td>
<!-- ignored unsupported tag .tm -->
</td></tr>
</table>
<h1 class="manpages">EXAMPLE</h1>
<!-- ignored unsupported tag .tm -->
The basic material for the preceding section was generated by running
the sed script
<p>
<tt><table class="src" cellpadding="5" cellspacing="5">
<tr><td><pre>
<!-- ignored unsupported tag .ne -->
   #no autoprint
   s/^.*Warn( *"&#92;([^"]*&#92;)".*$/&#92;1/
   t process
   b
   :process
   s/$!/%s/g
   s/$[_[:alnum:]]&#92;{1,&#92;}/%s/g
   s/&#92;&#92;&#92;&#92;/&#92;&#92;/g
   s/^/=item /
   p
</tt></pre></td></tr>
</table>
<p>
on the program&#146;s own text, and piping the output into <tt>sort -u</tt>.
<h1 class="manpages">SED SCRIPT TRANSLATION</h1>
<!-- ignored unsupported tag .tm -->
If this program is invoked with the name <i>s2p</i> it will act as a
sed-to-Perl translator. After option processing (all other
arguments are ignored), a Perl program is printed on standard
output, which will process the input stream (as read from all
arguments) in the way defined by the sed script and the option setting
used for the translation.
<h1 class="manpages">SEE ALSO</h1>
<ul>
</ul>
<i>perl</i>(1), <i>re_format</i>(7)
<h1 class="manpages">BUGS</h1>
<!-- ignored unsupported tag .tm -->
The <b>l</b> command will show escape characters (<font size="-1">ESC</font>) as &#145;<tt>&#92;e</tt>&#146;, but
a vertical tab (<font size="-1">VT</font>) in octal.
<p>
Trailing spaces are truncated from labels in <b>:</b>, <b>t</b> and <b>b</b> commands.
<p>
The meaning of an empty regular expression (&#145;<tt>//</tt>&#146;), as defined by <b>sed</b>,
is the last pattern used, at run time. This deviates from the Perl
interpretation, which will re-use the last last successfully executed
regular expression. Since keeping track of pattern usage would create
terribly cluttered code, and differences would only appear in obscure
context (where other <b>sed</b> implementations appear to deviate, too),
the Perl semantics was adopted. Note that common usage of this feature,
such as in <tt>/abc/s//xyz/</tt>, will work as expected.
<p>
Collating elements (of bracket expressions in BREs) are not implemented.
<h1 class="manpages">STANDARDS</h1>
<!-- ignored unsupported tag .tm -->
This <b>sed</b> implementation conforms to the <font size="-1">IEEE</font> Std1003.2-1992 (<font size="-1">POSIX</font>.2)
definition of <b>sed</b>, and is compatible with the <i>OpenBSD</i>
implementation, except where otherwise noted (see <font size="-1">BUGS</font>).
<h1 class="manpages">AUTHOR</h1>
<!-- ignored unsupported tag .tm -->
This Perl implementation of <i>sed</i> was written by Wolfgang Laun,
<i><a href="mailto:Wolfgang.Laun@alcatel.at">Wolfgang.Laun@alcatel.at</a></i>.
<h1 class="manpages">COPYRIGHT and LICENSE</h1>
<!-- ignored unsupported tag .tm -->
This program is free and open software. You may use, modify,
distribute, and sell this program (and any modified variants) in any
way you wish, provided you do not restrict others from doing the same.
<br />
<hr />
<a href="index.html"><img alt="previous" border="0" src="../images/previous.gif" /></a>
<a href="index.html"><img alt="next" border="0" src="../images/next.gif" /></a>
<a href='../cgi-bin/printversionb192.html?tutorial=unix_commands&amp;file=psed.htm' target="_blank">
<img src="../images/print.gif" alt="Printer Friendly" border="0" /></a>
<br />
<hr />
<!-- PRINTING ENDS HERE -->
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text_image";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</td></tr>
</table>
</td>
<td class="right" align="center" valign="top">
<br /><br />
<table width="100%" cellpadding="0" cellspacing="0">
<tr valign="middle">
<td  class="top" style="border:0px;">
&nbsp;&nbsp;
</td>
</tr>
</table>
<table class="right"  cellpadding="0" cellspacing="0">
<tr>
<td align="center" class="right">
<p>
<u>Advertisements</u>
</p>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
  src="../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<br /><br /></td></tr></table>
</td></tr></table>
</center>
</body>

<!-- Mirrored from www.tutorialspoint.com/unix_commands/psed.htm by HTTrack Website Copier/3.x [XR&CO'2010], Mon, 15 Apr 2013 05:05:16 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>
