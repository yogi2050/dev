<!doctype html> 
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--><html lang="en"><!--<![endif]-->

<!-- Mirrored from www.tutorialspoint.com/ruby/ruby_tk_canvas.htm by HTTrack Website Copier/3.x [XR&CO'2010], Mon, 15 Apr 2013 05:03:07 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="utf-8">
<title>Ruby/TK - Canvas Widget</title>
<link rel="shortcut icon" href="../favicon.png" type="image/x-icon" />
<meta name="Keywords" content="Ruby, Tutorials, Learning, Beginners, Basics, Scripting Language, Syntax, Classes, , Variables, Comments, Loops, File, I/O, Functions, Objects, TK, Ranges, iterators, arrays, strings, methods, blocks, Exception, Multi-Threading, Hashes, Modules, LDAP, Web Services, Web Programming." />
<meta name="description" content="Ruby/TK Canvas Widget - Learning Ruby in simple and easy steps - A beginner's tutorial containing complete knowledge of Ruby Syntax Syntax, Classes, , Variables, Comments, Loops, File, I/O, Functions, Objects, TK, Ranges, iterators, arrays, strings, methods, blocks, Exception, Multi-Threading, Hashes, Modules, LDAP, Web Services, Web Programming." />
<base  />
<link rel="stylesheet" type="text/css" href="../scripts/style.css" />
<link rel="stylesheet" type="text/css" href="../scripts/prettify.css" />
<script type="text/javascript" src="../scripts/prettify.js"></script>
<style media="screen" type="text/css">
/* Ruby Scheme */
#topmenu a:link {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#topmenu a:visited {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#topmenu a:hover {text-decoration:none;color:#C83932 !important;background-color:transparent;font-weight:bold;}
#header{ 
background:#C83932 !important;
}
#topmenu
{
background-color:#5E0500 !important;
}
#leftcol ul.menu li.heading 
{
background:#C83932 !important;
border:1px solid #964800 !important;
}
#leftcol, #middlecol, #rightcol {min-height:1500px; padding:0px;}
</style>
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
</script>
</head>
<body onload="prettyPrint()">
<div id="header">
<div class="wrapper">
<h1 class="logo"><a href="../index-2.html">Tutorials Point - Simply Easy Learning</a></h1>
<div id="search">
<form method="get" id="searchform" name="searchform" action="http://www.google.com/search" target="_blank">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com"/>
<input type="text" name="as_q" id="s" value="Search this site..." onfocus="if (this.value == 'Search this site...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search this site...';}"/>
<input value="FORID:11" name="cof" type="hidden"/>
<input type="hidden" name="ie" value="ISO-8859-1" />
<input class="submit btn" type="image" src="../images/icon-search.png" alt="Go"/>
</form>
</div>
</div>
</div>
<div id="topmenu">
<div class="wrapper">
<div id="left">
<a href="../index-2.html" target="_top">HOME </a>
<a href="../java/index.html" target="_top">JAVA </a>
<a href="../php/index.html" target="_top">PHP </a>
<a href="../python/index.html" target="_top">Python </a>
<a href="index.html" target="_top">Ruby </a>
<a href="../perl/index.html" target="_top">Perl </a>
<a href="../html/index.html" target="_top">HTML </a>
<a href="../css/index.html" target="_top">CSS </a>
<a href="../javascript/index.html" target="_top">Javascript </a>
<a href="../mysql/index.html" target="_top">MySQL </a>
<a href="../cplusplus/index.html" target="_top">C++ </a>
<a href="../unix/index.html" target="_top">UNIX </a>
<a href="../more.html" target="_top">MORE...</a>
</div>
<div id="right">
<a href="../references.html" target="_top">REFERENCES</a> |
<a href="../forums/index.html" target="_top">FORUM</a> |
<a href="../about/index.html" target="_top">ABOUT</a> |
<a href="../about/contact_us.html" target="_top">CONTACT</a>
</div>
</div>
</div>
<div class="wrapper">
<div id="leftcol">
<div class="mini-logo">
<img src="../images/ruby-mini-logo.png" alt="Ruby Tutorial" />
</div>
<ul class="menu">
<li class="heading">Ruby Basics</li>
<li><a class="left" target="_top" href="index.html">Ruby Home</a></li>
<li><a class="left" target="_top" href="ruby_overview.html">Ruby Overview</a></li>
<li><a class="left" target="_top" href="ruby_environment.html">Ruby Environment</a></li>
<li><a class="left" target="_top" href="ruby_syntax.html">Ruby Syntax</a></li>
<li><a class="left" target="_top" href="ruby_classes.html">Ruby Classes</a></li>
<li><a class="left" target="_top" href="ruby_variables.html">Ruby Variables</a></li>
<li><a class="left" target="_top" href="ruby_operators.html">Ruby Operators</a></li>
<li><a class="left" target="_top" href="ruby_comments.html">Ruby Comments</a></li>
<li><a class="left" target="_top" href="ruby_if_else.html">Ruby IF...ELSE</a></li>
<li><a class="left" target="_top" href="ruby_loops.html">Ruby Loops</a></li>
<li><a class="left" target="_top" href="ruby_methods.html">Ruby Methods</a></li>
<li><a class="left" target="_top" href="ruby_blocks.html">Ruby Blocks</a></li>
<li><a class="left" target="_top" href="ruby_modules.html">Ruby Modules</a></li>
<li><a class="left" target="_top" href="ruby_strings.html">Ruby Strings</a></li>
<li><a class="left" target="_top" href="ruby_arrays.html">Ruby Arrays</a></li>
<li><a class="left" target="_top" href="ruby_hashes.html">Ruby Hashes</a></li>
<li><a class="left" target="_top" href="ruby_date_time.html">Ruby Date &amp; Time</a></li>
<li><a class="left" target="_top" href="ruby_ranges.html">Ruby Ranges</a></li>
<li><a class="left" target="_top" href="ruby_iterators.html">Ruby Iterators</a></li>
<li><a class="left" target="_top" href="ruby_input_output.html">Ruby File I/O</a></li>
<li><a class="left" target="_top" href="ruby_exceptions.html">Ruby Exceptions</a></li>
</ul>
<ul class="menu">
<li class="heading">Ruby Advanced</li>
<li><a class="left" target="_top" href="ruby_object_oriented.html">Ruby Object Oriented</a></li>
<li><a class="left" target="_top" href="ruby_regular_expressions.html">Ruby Regular Expressions</a></li>
<li><a class="left" target="_top" href="ruby_database_access.html">Ruby Database Access</a></li>
<li><a class="left" target="_top" href="ruby_web_applications.html">Ruby Web Applications</a></li>
<li><a class="left" target="_top" href="ruby_sending_email.html">Ruby Sending Email</a></li>
<li><a class="left" target="_top" href="ruby_socket_programming.html">Ruby Socket Programming</a></li>
<li><a class="left" target="_top" href="ruby_xml_xslt.html">Ruby/XML, XSLT</a></li>
<li><a class="left" target="_top" href="ruby_web_services.html">Ruby Web Services</a></li>
<li><a class="left" target="_top" href="ruby_tk_guide.html"><b>Ruby/Tk Guide</b></a></li>
<li><a class="left" target="_top" href="ruby_ldap.html">Ruby/LDAP Tutorial</a></li>
<li><a class="left" target="_top" href="ruby_multithreading.html">Ruby Multithreading</a></li>
</ul>
<ul class="menu">
<li class="heading">Ruby Useful Resources</li>
<li><a class="left" target="_top" href="ruby_quick_guide.html">Ruby Quick Guide</a></li>
<li><a class="left" target="_top" href="ruby_builtin_functions.html">Ruby Built-in Functions</a></li>
<li><a class="left" target="_top" href="ruby_predefined_variables.html">Ruby Predefined Variables</a></li>
<li><a class="left" target="_top" href="ruby_predefined_constants.html">Ruby Predefined Constants</a></li>
<li><a class="left" target="_top" href="ruby_associated_tools.html">Ruby Associated Tools</a></li>
<li><a class="left" target="_top" href="ruby_resources.html">Ruby Useful Resources</a></li>
<li><a class="left" target="_top" href="../ruby-on-rails/index.html">Ruby on Rails Tutorial</a></li>
</ul>
<ul class="menu">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="../developers_best_practices/index.html">Developer's Best Practices</a></li>
<li><a target="_top" href="../computer_glossary.html">Computer Glossary</a></li>
<li><a target="_top" href="../computer_whoiswho.html">Who is Who</a></li>
</ul>
</div><!-- leftcol -->
<div id="middlecol">
<!-- PRINTING STARTS HERE -->
<div class="content">
<h1>Ruby/TK - Canvas Widget</h1>
<div class="topgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
<hr />
<div class="pre-btn">
<a href="ruby_tk_guide.html">Previous Page</a>
</div>
<div class="nxt-btn">
<a href="ruby_tk_guide.html">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
<h2>Description:</h2>
<p>A <b>Canvas</b> widgets implement structured graphics. A canvas displays any number of items, which may be things like rectangles, circles, lines, and text. </p>
<p>Items may be manipulated (e.g. moved or re-colored) and callbacks may be associated with items in much the same way that the bind method allows callbacks to be bound to widgets.</p>
<h2>Syntax:</h2>
<p>Here is a simple syntax to create this widget:</p>
<pre class="prettyprint">
TkCanvas.new{
  .....Standard Options....
  .....Widget-specific Options....
}
</pre>
<h2>Standard Options:</h2>
<ul class="list">
<li><p>background</p></li>
<li><p>borderwidth </p></li>
<li><p>cursor </p></li>
<li><p>highlightbackground </p></li>
<li><p>highlightcolor </p></li>
<li><p>highlightthickness </p></li>
<li><p>relief </p></li>
<li><p>selectbackground </p></li>
<li><p>selectborderwidth </p></li>
<li><p>selectforeground </p></li>
<li><p>state </p></li>
<li><p>takefocus </p></li>
<li><p>tile </p></li>
<li><p>xscrollcommand </p></li>
<li><p>yscrollcommand</p></li>
</ul>
<p>These options have been described in previous chapter.</p>
<h2>Widget-specific Options:</h2>
<table class="src">
<tr><th style="width:5%">SN</th><th>Options with Description</th></tr>
<tr><td>1</td><td><b>closeenough</b>  =&gt;Integer<br />Specifies a floating-point value indicating how close the mouse cursor must be to an item before it is considered to be <b>inside</b> the item. Defaults to 1.0.</td></tr>
<tr><td>2</td><td><b>confine</b>  =&gt;Boolean<br />Specifies a boolean value that indicates whether or not it should be allowable to set the canvas's view outside the region defined by the <i>scrollregion</i> argument. Defaults to true, which means that the view will be constrained within the scroll region.</td></tr>
<tr><td>3</td><td><b>height</b>  =&gt;Integer<br />Specifies a desired window height that the canvas widget should request from its geometry manager. </td></tr>
<tr><td>4</td><td><b>scrollregion</b>  =&gt;Coordinates<br />Specifies a list with four coordinates describing the left, top, right, and bottom coordinates of a rectangular region. This region is used for scrolling purposes and is considered to be the boundary of the information in the canvas.</td></tr>
<tr><td>5</td><td><b>state</b>  =&gt;String<br />Modifies the default state of the canvas where state may be set to one of: <b>normal, disabled,</b> or <b>hidden</b>. Individual canvas objects all have their own state option, which overrides the default state. </td></tr>
<tr><td>6</td><td><b>width</b>  =&gt;Integer<br />Specifies a desired window width that the canvas widget should request from its geometry manager. </td></tr>
<tr><td>7</td><td><b>xscrollincrement</b>  =&gt;Integer<br />Specifies an increment for horizontal scrolling, in any of the usual forms permitted for screen distances. If the value of this option is greater than zero, the horizontal view in the window will be constrained so that the canvas x coordinate at the left edge of the window is always an even multiple of xscrollincrement; furthermore, the units for scrolling will also be xscrollincrement. </td></tr>
<tr><td>8</td><td><b>yscrollincrement</b>  =&gt;Integer<br />Specifies an increment for vertical scrolling, in any of the usual forms permitted for screen distances. If the value of this option is greater than zero, the vertical view in the window will be constrained so that the canvas y coordinate at the top edge of the window is always an even multiple of yscrollincrement; furthermore, the units for scrolling will also be yscrollincrement. </td></tr>
</table>
<h2>Indices:</h2>
<p>Indices are used for methods such as inserting text, deleting a range of characters, and setting the insertion cursor position. An index may be specified in any of a number of ways, and different types of items may support different forms for specifying indices.</p>
<p>Text items support the following forms for an index:</p>
<ul class="list">
<li><p><b>number:</b> A decimal number giving the position of the desired character within the text item. 0 refers to the first character, 1 to the next character, and so on.</p></li>
<li><p><b>end:</b> Refers to the character or coordinate just after the last one in the item (same as the number of characters or coordinates in the item).</p></li>
<li><p><b>insert:</b> Refers to the character just before which the insertion cursor is drawn in this item. Not valid for lines and polygons.</p></li>
</ul>
<h2>Creating Items:</h2>
<p>When you create a new canvas widget, it will essentially be a large rectangle with nothing on it; truly a blank canvas in other words. To do anything useful with it, you'll need to add items to it. </p>
<p>There are a wide variety of different types of items you can add. Following methods will be used to create different items inside a canvas:</p>
<h2>Arc items:</h2>
<p>Items of type arc appear on the display as arc-shaped regions. An arc is a section of an oval delimited by two angles. Arcs are created with methods of the following form:</p>
<p>The <b>TkcArc.new(canvas, x1, y1, x2, y2, ?option, value, option, value, ...?)</b> method will be used to create an arc.</p>
<p>The arguments x1, y1, x2, and y2 give the coordinates of two diagonally opposite corners of a rectangular region enclosing the oval that defines the arc. Here is the description of other options:</p>
<ul class="list">
<li><p><b>extent => degrees:</b> Specifies the size of the angular range occupied by the arc. If it is greater than 360 or less than -360, then degrees modulo 360 is used as the extent.</p></li>
<li><p><b>fill => color:</b> Fill the region of the arc with color. </p></li>
<li><p><b>outline => color:</b> Color specifies a color to use for drawing the arc's outline.</p></li>
<li><p><b>start => degrees:</b>Specifies the beginning of the angular range occupied by the arc.</p></li>
<li><p><b>style => type:</b> Specifies how to draw the arc.  If <i>type</i> is <b>pieslice</b> (the default) then the arc's region is defined by a section of the oval's perimeter plus two line segments, one between the center of the oval and each end of the perimeter section. If <i>type</i> is <b>chord</b> then the arc's region is defined by a section of the oval's perimeter plus a single line segment
connecting the two end points of the perimeter section. If <i>type</i> is <b>arc</b> then the arc's region consists of a section of the perimeter alone. </p></li>
<li><p><b>tags => tagList:</b> Specifies a set of tags to apply to the item. TagList consists of a list of tag names, which replace any existing tags for the item. TagList may be an empty list. </p></li>
<li><p><b>width => outlineWidth:</b> Specifies the width of the outline to be drawn around the arc's region.</p></li>
</ul>
<h2>Bitmap items:</h2>
<p>Items of type bitmap appear on the display as images with two colors, foreground and background. Bitmaps are created with methods of the following form:</p>
<p>The <b>TkcBitmap.new(canvas, x, y, ?option, value, option, value, ...?)</b> method will be used to create a bitmap.</p>
<p>The arguments x and y specify the coordinates of a point used to position the bitmap on the display. Here is the description of other options:</p>
<ul class="list">
<li><p><b>anchor => anchorPos:</b> AnchorPos tells how to position the bitmap relative to the positioning point for the item. For example, if anchorPos is center then the bitmap is centered on the point; if anchorPos is n then the bitmap will be drawn so that its top center point is at the positioning point. This option defaults to center.</p></li>
<li><p><b>background => color:</b> Specifies a color to use for each of the bitmap pixels whose value is 0. </p></li>
<li><p><b>bitmap => bitmap:</b> Specifies the bitmap to display in the item.</p></li>
<li><p><b>foreground => color:</b>Specifies a color to use for each of the bitmap pixels whose value is 1.</p></li>
<li><p><b>tags => tagList:</b> Specifies a set of tags to apply to the item. TagList consists of a list of tag names, which replace any existing tags for the item. TagList may be an empty list. </p></li>
</ul>
<h2>Image items:</h2>
<p>Items of type image are used to display images on a canvas. Images are created with methods of the following form: :</p>
<p>The <b>TkcImage.new(canvas,x, y, ?option, value, option, value, ...?)</b> method will be used to create a image.</p>
<p>The arguments x and y specify the coordinates of a point used to position the image on the display. Here is the description of other options:</p>
<ul class="list">
<li><p><b>anchor => anchorPos:</b> AnchorPos tells how to position the bitmap relative to the positioning point for the item. For example, if anchorPos is center then the bitmap is centered on the point; if anchorPos is n then the bitmap will be drawn so that its top center point is at the positioning point. This option defaults to center.</p></li>
<li><p><b>image => name:</b> Specifies the name of the image to display in the item. This image must have been created previously with the image create command.</p></li>
<li><p><b>tags => tagList:</b> Specifies a set of tags to apply to the item. TagList consists of a list of tag names, which replace any existing tags for the item. TagList may be an empty list. </p></li>
</ul>
<h2>Line items:</h2>
<p>Items of type line appear on the display as one or more connected line segments or curves. Lines are created with methods of the following form:</p>
<p>The <b>TkcLine.new(canvas, x1, y1..., xn, yn, ?option, value, ...?)</b> method will be used to create a line.</p>
<p>The arguments x1 through yn give the coordinates for a series of two or more points that describe a series of connected line segments. Here is the description of other options:</p>
<ul class="list">
<li><p><b>arrow => where:</b> Indicates whether or not arrowheads are to be drawn at one or both ends of the line. <i>Where</i> must have one of the values <b>none</b> (for no arrowheads), <b>first</b> (for an arrowhead at the first point of the line), <b>last</b> (for an arrowhead at the last point of the line), or <b>both</b> (for arrowheads at both ends). This option defaults to <b>none</b>.</p></li>
<li><p><b>arrowshape => shape:</b> This option indicates how to draw arrowheads. If this option isn't specified then Tk picks a reasonable shape. </p></li>
<li><p><b>dash => pattern:</b> Specifies a pattern to draw the line.</p></li>
<li><p><b>capstyle => style:</b> Specifies the ways in which caps are to be drawn at the endpoints of the line. Possible values are butt, projecting, or round.</p></li>
<li><p><b>fill => color:</b>Color specifies a color to use for drawing the line.</p></li>
<li><p><b>joinstyle => style:</b> Specifies the ways in which joints are to be drawn at the vertices of the line. Possible values are bevel, miter, or round.</p></li>
<li><p><b>smooth => boolean:</b> It indicates whether or not the line should be drawn as a curve.</p></li>
<li><p><b>splinesteps => number:</b> Specifies the degree of smoothness desired for curves: each spline will be approximated with number line segments. This option is ignored unless the <i>smooth</i> option is true.</p></li>
<li><p><b>stipple => bitmap:</b> Indicates that the line should be filled in a stipple pattern; bitmap specifies the stipple pattern to use.</p></li>
<li><p><b>tags => tagList:</b> Specifies a set of tags to apply to the item. TagList consists of a list of tag names, which replace any existing tags for the item. TagList may be an empty list.</p></li>
<li><p><b>width => lineWidth:</b> Specifies the width of the line.</p></li>
</ul>
<h2>Rectangle items:</h2>
<p>Items of type rectangle appear as rectangular regions on the display. Each rectangle may have an outline, a fill, or both. Rectangles are created with methods of the following form:</p>
<p>The <b>TkcRectangle.new(canvas, x1, y1, x2, y2, ?option, value,...?)</b> method will be used to create a Rectangle.</p>
<p>The arguments x1, y1, x2, and y2 give the coordinates of two diagonally opposite corners of the rectangle. Here is the description of other options:</p>
<ul class="list">
<li><p><b>fill => color:</b>Fill the area of the rectangle with color.</p></li>
<li><p><b>outline => color:</b> Draw an outline around the edge of the rectangle in color. </p></li>
<li><p><b>stipple => bitmap:</b>Indicates that the rectangle should be filled in a stipple pattern; bitmap specifies the stipple pattern to use.</p></li>
<li><p><b>tags => tagList:</b> Specifies a set of tags to apply to the item. TagList consists of a list of tag names, which replace any existing tags for the item. TagList may be an empty list. </p></li>
<li><p><b>width => outlineWidth:</b> Specifies the width of the outline to be drawn around the rectangle.</p></li>
</ul>
<h2>Event Bindings:</h2>
<p>Canvas has default bindings to allow scrolling if necessary: &lt;Up&gt;, &lt;Down&gt;, &lt;Left&gt; and &lt;Right&gt; (and their &lt;Control-*&gt; counter parts). Further &lt;Proir&gt;, &lt;Next&gt;, &lt;Home&gt; and &lt;End&gt;. These bindings allow you to navigate the same way as in other widgets that can scroll.</p>
<h2>Example 1:</h2>
<pre class="prettyprint">
require "tk"

canvas = TkCanvas.new

TkcRectangle.new(canvas, '1c', '2c', '3c', '3c',
                 'outline' => 'black', 'fill' => 'blue')

TkcLine.new(canvas, 0, 0, 100, 100,
                 'width' => '2', 'fill' => 'red')
canvas.pack

Tk.mainloop
</pre>
<p>This will produce following result</p>
<center>
<img src="../images/tk-canvas.html" alt="Ruby/Tk canvas" />
</center>
<h2>Example 2:</h2>
<pre class="prettyprint">
require 'tk'

root = TkRoot.new
root.title = "Window"

canvas = TkCanvas.new(root) do
   place('height' => 170, 'width' => 100, 
          'x' => 10, 'y' => 10)
end

TkcLine.new(canvas, 0, 5, 100, 5)
TkcLine.new(canvas, 0, 15, 100, 15, 'width' => 2)
TkcLine.new(canvas, 0, 25, 100, 25, 'width' => 3)
TkcLine.new(canvas, 0, 35, 100, 35, 'width' => 4)
TkcLine.new(canvas, 0, 55, 100, 55, 'width' => 3, 
                    'dash' => ".")
TkcLine.new(canvas, 0, 65, 100, 65, 'width' => 3, 
                    'dash' => "-")
TkcLine.new(canvas, 0, 75, 100, 75, 'width' => 3, 
                    'dash' => "-.")
TkcLine.new(canvas, 0, 85, 100, 85, 'width' => 3, 
                    'dash' => "-..")
TkcLine.new(canvas, 0, 105, 100, 105, 'width' => 2, 
                    'arrow' => "first")
TkcLine.new(canvas, 0, 115, 100, 115, 'width' => 2, 
                    'arrow' => "last")
TkcLine.new(canvas, 0, 125, 100, 125, 'width' => 2, 
                    'arrow' => "both")
TkcLine.new(canvas, 10, 145, 90, 145, 'width' => 15, 
                    'capstyle' => "round")
Tk.mainloop
</pre>
<p>This will produce following result</p>
<center>
<img src="../images/tk-canvas2.html" alt="Ruby/Tk canvas" />
</center>
<h2>Example 3:</h2>
<pre class="prettyprint">
require 'tk'

root = TkRoot.new
root.title = "Window"

canvas = TkCanvas.new(root) do
   place('height' => 170, 'width' => 100, 
          'x' => 10, 'y' => 10)
end

TkcRectangle.new(canvas, 10,  5,    55,  50, 
                         'width' => 1)
TkcRectangle.new(canvas, 10,  65,  55, 110, 
                         'width' => 5) 
TkcRectangle.new(canvas, 10,  125, 55, 170, 
                         'width' => 1, 'fill'  => "red") 

Tk.mainloop
</pre>
<p>This will produce following result</p>
<center>
<img src="../images/tk-canvas3.html" alt="Ruby/Tk canvas" />
</center>
<h2>Example 4:</h2>
<pre class="prettyprint">
require 'tk'

root = TkRoot.new
root.title = "Window"

canvas = TkCanvas.new(root) do
   place('height' => 170, 'width' => 100, 
          'x' => 10, 'y' => 10)
end

TkcLine.new(canvas, 0,  10, 100,  10, 
                    'width' => 10, 'fill' => "blue")
TkcLine.new(canvas, 0,  30, 100,  30, 
                    'width' => 10, 'fill' => "red")
TkcLine.new(canvas, 0,  50, 100,  50, 
                    'width' => 10, 'fill' => "green")
TkcLine.new(canvas, 0,  70, 100,  70, 
                    'width' => 10, 'fill' => "violet")
TkcLine.new(canvas, 0,  90, 100,  90, 
                    'width' => 10, 'fill' => "yellow")
TkcLine.new(canvas, 0, 110, 100, 110, 
                    'width' => 10, 'fill' => "pink")
TkcLine.new(canvas, 0, 130, 100, 130, 
                    'width' => 10, 'fill' => "orange")
TkcLine.new(canvas, 0, 150, 100, 150, 
                    'width' => 10, 'fill' => "grey")
Tk.mainloop
</pre>
<p>This will produce following result</p>
<center>
<img src="../images/tk-canvas4.html" alt="Ruby/Tk canvas" />
</center>
<hr />
<div class="pre-btn">
<a href="ruby_tk_guide.html">Previous Page</a>
</div>
<div class="print-btn">
<a href="../cgi-bin/printpage.html" target="_blank">Print Version</a>
</div>
<div class="pdf-btn">
<a href="pdf/ruby_tk_canvas.html" alt="Ruby/TK - Canvas Widget" target="_blank">PDF Version</a>
</div>
<div class="nxt-btn">
<a href="ruby_tk_guide.html">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
</div>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</div>
</div><!-- middlecol -->
<div id="rightcol">
<!-- AddThis Button BEGIN -->
<div class="addthis">
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook"></a>
<a class="addthis_button_twitter"></a>
<script type="text/javascript">
<!--
 document.write('<a class="addthis_button_google_plusone" g:plusone:count="false"></a>');
//-->
</script>
<a class="addthis_button_linkedin"></a>
<a class="addthis_button_email"></a>
<a class="addthis_button_compact"></a>
</div>
<script type="text/javascript" src="../../s7.addthis.com/js/250/addthis_widget.js#pubid=ra-4f661ec623a400f0"></script>
</div>
<!-- AddThis Button END -->
<div class="localad">
<a rel="nofollow" href="http://www.modernindianbabynames.com/" target="_blank" title="Modern Baby Names">Modern Baby Names</a>
</div>
<div class="localad">
<a rel="nofollow" href="http://www.photofuntoos.com/" target="_blank" title="Online Photo Editing">Online Photo Editing</a>
</div>
<div class="rightgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
</div><!-- rightcol -->
<div style="clear:both;"></div>
</div><!-- wrapper -->
<div id="footer">
<div class="wrapper">
<div id="bottommenu">
<a href="../asp.net/index.html" target="_top">ASP.NET </a> |
<a href="../jquery/index.html" target="_top">jQuery </a> |
<a href="../ajax/index.html" target="_top">AJAX </a> |
<a href="../ant/index.html" target="_top">ANT</a> |
<a href="../jsp/index.html" target="_top">JSP </a> |
<a href="../servlets/index.html" target="_top">Servlets </a> |
<a href="../log4j/index.html" target="_top">log4j </a> |
<a href="../ibatis/index.html" target="_top">iBATIS </a> |
<a href="../hibernate/index.html" target="_top">Hibernate </a> |
<a href="../jdbc/index.html" target="_top">JDBC </a> |
<a href="../struts_2/index.html" target="_top">Struts </a> |
<a href="../html5/index.html" target="_top">HTML5 </a> |
<a href="../sql/index.html" target="_top">SQL </a> |
<a href="../mysql/index.html" target="_top">MySQL </a> |
<a href="../cplusplus/index.html" target="_top">C++ </a> |
<a href="../unix/index.html" target="_top">UNIX </a>
</div>
<div id="copyright">
<p>Copyright &copy; 2013 by tutorialspoint. All Rights Reserved.</p>
</div>
</div>
</div>
</body>

<!-- Mirrored from www.tutorialspoint.com/ruby/ruby_tk_canvas.htm by HTTrack Website Copier/3.x [XR&CO'2010], Mon, 15 Apr 2013 05:03:07 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>