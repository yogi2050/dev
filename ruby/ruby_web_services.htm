<!doctype html> 
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--><html lang="en"><!--<![endif]-->

<!-- Mirrored from www.tutorialspoint.com/ruby/ruby_web_services.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 19:46:14 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="utf-8">
<title>Web Services with Ruby - SOAP4R</title>
<link rel="shortcut icon" href="../favicon.png" type="image/x-icon" />
<meta name="Keywords" content="Ruby, Tutorials, Learning, Beginners, Basics, Scripting Language, Syntax, Classes, , Variables, Comments, Loops, File, I/O, Functions, Objects, TK, Ranges, iterators, arrays, strings, methods, blocks, Exception, Multi-Threading, Hashes, Modules, LDAP, Web Services, Web Programming." />
<meta name="description" content="Web Services with Ruby SOAP4R - Learning Ruby in simple and easy steps - A beginner's tutorial containing complete knowledge of Ruby Syntax Syntax, Classes, , Variables, Comments, Loops, File, I/O, Functions, Objects, TK, Ranges, iterators, arrays, strings, methods, blocks, Exception, Multi-Threading, Hashes, Modules, LDAP, Web Services, Web Programming." />
<base  />
<link rel="stylesheet" type="text/css" href="../scripts/style.css" />
<link rel="stylesheet" type="text/css" href="../scripts/prettify.css" />
<script type="text/javascript" src="../scripts/prettify.js"></script>
<style media="screen" type="text/css">
/* Ruby Scheme */
#topmenu a:link {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#topmenu a:visited {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#topmenu a:hover {text-decoration:none;color:#C83932 !important;background-color:transparent;font-weight:bold;}
#header{ 
background:#C83932 !important;
}
#topmenu
{
background-color:#5E0500 !important;
}
#leftcol ul.menu li.heading 
{
background:#C83932 !important;
border:1px solid #964800 !important;
}
#leftcol, #middlecol, #rightcol {min-height:1500px; padding:0px;}
</style>
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
</script>
</head>
<body onload="prettyPrint()">
<div id="header">
<div class="wrapper">
<h1 class="logo"><a href="../index.htm">Tutorials Point - Simply Easy Learning</a></h1>
<div id="search">
<form method="get" id="searchform" name="searchform" action="http://www.google.com/search" target="_blank">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com"/>
<input type="text" name="as_q" id="s" value="Search this site..." onfocus="if (this.value == 'Search this site...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search this site...';}"/>
<input value="FORID:11" name="cof" type="hidden"/>
<input type="hidden" name="ie" value="ISO-8859-1" />
<input class="submit btn" type="image" src="../images/icon-search.png" alt="Go"/>
</form>
</div>
</div>
</div>
<div id="topmenu">
<div class="wrapper">
<div id="left">
<a href="../index.htm" target="_top">HOME </a>
<a href="../java/index.htm" target="_top">JAVA </a>
<a href="../php/index.htm" target="_top">PHP </a>
<a href="../python/index.htm" target="_top">Python </a>
<a href="index.htm" target="_top">Ruby </a>
<a href="../perl/index.htm" target="_top">Perl </a>
<a href="../html/index.htm" target="_top">HTML </a>
<a href="../css/index.htm" target="_top">CSS </a>
<a href="../javascript/index.htm" target="_top">Javascript </a>
<a href="../mysql/index.htm" target="_top">MySQL </a>
<a href="../cplusplus/index.htm" target="_top">C++ </a>
<a href="../unix/index.htm" target="_top">UNIX </a>
<a href="../more.htm" target="_top">MORE...</a>
</div>
<div id="right">
<a href="../references.htm" target="_top">REFERENCES</a> |
<a href="../forums/index.html" target="_top">FORUM</a> |
<a href="../about/index.htm" target="_top">ABOUT</a> |
<a href="../about/contact_us.htm" target="_top">CONTACT</a>
</div>
</div>
</div>
<div class="wrapper">
<div id="leftcol">
<div class="mini-logo">
<img src="../images/ruby-mini-logo.png" alt="Ruby Tutorial" />
</div>
<ul class="menu">
<li class="heading">Ruby Basics</li>
<li><a class="left" target="_top" href="index.htm">Ruby Home</a></li>
<li><a class="left" target="_top" href="ruby_overview.htm">Ruby Overview</a></li>
<li><a class="left" target="_top" href="ruby_environment.htm">Ruby Environment</a></li>
<li><a class="left" target="_top" href="ruby_syntax.htm">Ruby Syntax</a></li>
<li><a class="left" target="_top" href="ruby_classes.htm">Ruby Classes</a></li>
<li><a class="left" target="_top" href="ruby_variables.htm">Ruby Variables</a></li>
<li><a class="left" target="_top" href="ruby_operators.htm">Ruby Operators</a></li>
<li><a class="left" target="_top" href="ruby_comments.htm">Ruby Comments</a></li>
<li><a class="left" target="_top" href="ruby_if_else.htm">Ruby IF...ELSE</a></li>
<li><a class="left" target="_top" href="ruby_loops.htm">Ruby Loops</a></li>
<li><a class="left" target="_top" href="ruby_methods.htm">Ruby Methods</a></li>
<li><a class="left" target="_top" href="ruby_blocks.htm">Ruby Blocks</a></li>
<li><a class="left" target="_top" href="ruby_modules.htm">Ruby Modules</a></li>
<li><a class="left" target="_top" href="ruby_strings.htm">Ruby Strings</a></li>
<li><a class="left" target="_top" href="ruby_arrays.htm">Ruby Arrays</a></li>
<li><a class="left" target="_top" href="ruby_hashes.htm">Ruby Hashes</a></li>
<li><a class="left" target="_top" href="ruby_date_time.htm">Ruby Date &amp; Time</a></li>
<li><a class="left" target="_top" href="ruby_ranges.htm">Ruby Ranges</a></li>
<li><a class="left" target="_top" href="ruby_iterators.htm">Ruby Iterators</a></li>
<li><a class="left" target="_top" href="ruby_input_output.htm">Ruby File I/O</a></li>
<li><a class="left" target="_top" href="ruby_exceptions.htm">Ruby Exceptions</a></li>
</ul>
<ul class="menu">
<li class="heading">Ruby Advanced</li>
<li><a class="left" target="_top" href="ruby_object_oriented.htm">Ruby Object Oriented</a></li>
<li><a class="left" target="_top" href="ruby_regular_expressions.htm">Ruby Regular Expressions</a></li>
<li><a class="left" target="_top" href="ruby_database_access.htm">Ruby Database Access</a></li>
<li><a class="left" target="_top" href="ruby_web_applications.htm">Ruby Web Applications</a></li>
<li><a class="left" target="_top" href="ruby_sending_email.htm">Ruby Sending Email</a></li>
<li><a class="left" target="_top" href="ruby_socket_programming.htm">Ruby Socket Programming</a></li>
<li><a class="left" target="_top" href="ruby_xml_xslt.htm">Ruby/XML, XSLT</a></li>
<li><a class="left" target="_top" href="ruby_web_services.htm"><b>Ruby Web Services</b></a></li>
<li><a class="left" target="_top" href="ruby_tk_guide.htm">Ruby/Tk Guide</a></li>
<li><a class="left" target="_top" href="ruby_ldap.htm">Ruby/LDAP Tutorial</a></li>
<li><a class="left" target="_top" href="ruby_multithreading.htm">Ruby Multithreading</a></li>
</ul>
<ul class="menu">
<li class="heading">Ruby Useful Resources</li>
<li><a class="left" target="_top" href="ruby_quick_guide.htm">Ruby Quick Guide</a></li>
<li><a class="left" target="_top" href="ruby_builtin_functions.htm">Ruby Built-in Functions</a></li>
<li><a class="left" target="_top" href="ruby_predefined_variables.htm">Ruby Predefined Variables</a></li>
<li><a class="left" target="_top" href="ruby_predefined_constants.htm">Ruby Predefined Constants</a></li>
<li><a class="left" target="_top" href="ruby_associated_tools.htm">Ruby Associated Tools</a></li>
<li><a class="left" target="_top" href="ruby_resources.htm">Ruby Useful Resources</a></li>
<li><a class="left" target="_top" href="../ruby-on-rails/index.htm">Ruby on Rails Tutorial</a></li>
</ul>
<ul class="menu">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="../developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="../computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="../computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div><!-- leftcol -->
<div id="middlecol">
<!-- PRINTING STARTS HERE -->
<div class="content">
<h1>Web Services with Ruby - SOAP4R</h1>
<div class="topgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
<hr />
<div class="pre-btn">
<a href="ruby_xml_xslt.htm">Previous Page</a>
</div>
<div class="nxt-btn">
<a href="ruby_tk_guide.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
<h2>What is SOAP ?</h2>
<p>The Simple Object Access Protocol (SOAP) is a cross-platform and language-independent RPC protocol based on XML and, usually (but not necessarily) HTTP.</p>
<p>It uses XML to encode the information that makes the remote procedure call, and HTTP to transport that information across a network
from clients to servers and vice versa.</p>
<p>SOAP has several advantages over other technologies like COM, CORBA etc: for example, its relatively cheap deployment and debugging costs, its extensibility and ease-of-use, and the existence of several implementations for different languages and platforms.</p>
<p>Please refer to out simple tutorial  to understand <a href="../soap/index.html" title="SOAP Tutorial">SOAP</a>.</p>
<p>This tutorial will make you familiar to the SOAP implementation for Ruby (SOAP4R). This is a basic tutorial, so if you need a deep detail you would need to refer other resources.</p>
<h2>Installing SOAP4R:</h2>
<p>SOAP4R is the SOAP implementation for Ruby developed by Hiroshi Nakamura and can be downloaded from:</p>
<p><b>NOTE:</b> There may be a great chance that you already have installed this component.</p>
<pre class="prettyprint">
<a href="http://raa.ruby-lang.org/project/soap4r/" target="_blank">Download SOAP</a>
</pre>
<p>If you are aware of <b>gem</b> utility then you can use following command to install SOAP4R and related packages.</p>
<pre class="prettyprint">
$ gem install soap4r --include-dependencies
</pre>
<p>If you are working on Windows then you need to download a zipped file from the above location and need to install it using standard installation method by running <i>ruby install.rb</i>.</p>
<h2>Writing SOAP4R Servers:</h2>
<p>SOAP4R supports two different types of servers:</p>
<ul class="list">
<li><p>CGI/FastCGI based (SOAP::RPC::CGIStub)</p></li>
<li><p>Standalone (SOAP::RPC:StandaloneServer)</p></li>
</ul>
<p>This tutorial will give deatail on writing a stand alone server. There are following steps involved in writing a SOAP server:</p>
<h2>Step 1 - Inherit SOAP::RPC::StandaloneServer Class:</h2>
<p>To implement your own stand alone server you need to write a new class which will be child of <i>SOAP::StandaloneServer</i> as follows:</p>
<pre class="prettyprint">
class MyServer &lt; SOAP::RPC::StandaloneServer
  ...............
end
</pre>
<p><b>NOTE:</b> If you want to write a FastCGI based server then you need to take <i>SOAP::RPC::CGIStub</i> as parent class, rest of the procedure will remain same.</p>
<h2>Step 2 - Define Handler Methods:</h2>
<p>Second step is to write your Web Services methods which  you would like to expose to the outside world.</p>
<p>They can be written as simple Ruby methods. For example, lets write two methods two add two numbers and divid two numbers: </p>
<pre class="prettyprint">
class MyServer &lt; SOAP::RPC::StandaloneServer
   ...............

   # Handler methods
   def add(a, b)
      return a + b
   end
   def div(a, b) 
      return a / b 
   end
end
</pre>
<h2>Step 3 - Expose Handler Methods:</h2>
<p>Next step is to add our defined methods to our server. The <i>initialize</i> method is used to expose service methods with one of the two following methods:</p>
<pre class="prettyprint">
class MyServer &lt; SOAP::RPC::StandaloneServer
   def initialize(*args)
      add_method(receiver, methodName, *paramArg)
   end
end
</pre>
<p>Here is the description of the parameters:</p>
<table class="src">
<tr><th>Paramter</th><th>Description</th></tr>
<tr><td><b>receiver</b></td><td>The object that contains the methodName method. you define the service methods in the same class as the
methodDef method, this parameter is <i>self</i>.</td></tr>
<tr><td><b>methodName</b></td><td>The name of the method that is called due to a RPC request.</td></tr>
<tr><td><b>paramArg</b></td><td>Specifies, when given, the parameter names and parameter modes.</td></tr>
</table>
<p>To understand the usage of <i>inout</i> or <i>out</i> parameters, consider the following service method that takes two parameters (inParam and inoutParam), returns one normal return value (retVal) and two further parameters: <i>inoutParam</i> and <i>outParam</i>:</p>
<pre class="prettyprint">
def aMeth(inParam, inoutParam)
   retVal = inParam + inoutParam
   outParam = inParam . inoutParam
   inoutParam = inParam * inoutParam
   return retVal, inoutParam, outParam
end
</pre>
<p>Now we can expose this method as follows:</p>
<pre class="prettyprint">
add_method(self, 'aMeth', [
    %w(in inParam),
    %w(inout inoutParam),
    %w(out outParam),
    %w(retval return)
])
</pre>
<h2>Step 4 - Start the Server:</h2>
<p>The final step is to start your server by instantiating one instance of the derived class and calling <b>start</b> method.</p>
<pre class="prettyprint">
myServer = MyServer.new('ServerName',
                        'urn:ruby:ServiceName', hostname, port)

myServer.start
</pre>
<p>Here is the description of required parameters :</p>
<table class="src">
<tr><th>Paramter</th><th>Description</th></tr>
<tr><td><b>ServerName</b></td><td>A server name, you can give what you like most.</td></tr>
<tr><td><b>urn:ruby:ServiceName</b></td><td>Here <i>urn:ruby</i> is constant but you can give a unique <i>ServiceName</i> name for this server.</td></tr>
<tr><td><b>hostname</b></td><td>Specifies the hostname on which this server will listen.</td></tr>
<tr><td><b>port</b></td><td>An available port number to be used for the web service.</td></tr>
</table>
<h2>Example:</h2>
<p>Now using above steps, let us write one standalone server:</p>
<pre class="prettyprint">
require "soap/rpc/standaloneserver"

begin
   class MyServer &lt; SOAP::RPC::StandaloneServer

      # Expose our services
      def initialize(*args)
         add_method(self, 'add', 'a', 'b')
         add_method(self, 'div', 'a', 'b')
      end

      # Handler methods
      def add(a, b)
         return a + b
      end
      def div(a, b) 
         return a / b 
      end
  end
  server = MyServer.new("MyServer", 
            'urn:ruby:calculation', 'localhost', 8080)
  trap('INT){
     server.shutdown
  }
  server.start
rescue => err
  puts err.message
end
</pre>
<p>When executed, this server application starts a standalone SOAP server on <i>localhost</i> and listens for requests on <i>port</i> 8080. It exposes one service methods, <i>add</i> and <i>div</i>, which takes two parameters and return the result.</p>
<p>Now you can run this server in background as follows:</p>
<pre class="prettyprint">
$ ruby MyServer.rb&amp;
</pre>
<h2>Writing SOAP4R Clients:</h2>
<p>The <i>SOAP::RPC::Driver</i> class provides support for writing SOAP client applications. This tutorial will describe this class and demonstrate its usage on the basis of an application.</p>
<p>Following is the bare minimum information you would need to call a SOAP service:</p>
<ul class="list">
<li><p>The URL of the SOAP service (SOAP Endpoint URL)</p></li>
<li><p>The namespace of the service methods (Method Namespace URI)</p></li>
<li><p>The names of the service methods and their parameters</p></li>
</ul>
<p>Now we will write a SOAP client which would call service methods defined in above example, named <i>add</i> and <i>div</i>.</p>
<p>Here are the main steps to create a SOAP client:</p>
<h2>Step 1 - Create a SOAP Driver Instance:</h2>
<p>We create an instance of <i>SOAP::RPC::Driver</i> by calling its new method as follows:</p>
<pre class="prettyprint">
SOAP::RPC::Driver.new(endPoint, nameSpace, soapAction)
</pre>
<p>Here is the description of required parameters :</p>
<table class="src">
<tr><th>Paramter</th><th>Description</th></tr>
<tr><td><b>endPoint</b></td><td>URL of the SOAP server to connect with.</td></tr>
<tr><td><b>nameSpace</b></td><td> The namespace to use for all RPCs done with this SOAP::RPC::Driver object.</td></tr>
<tr><td><b>soapAction</b></td><td>A value for the SOAPAction field of the HTTP header. If <i>nil</i> this defaults to the empty string ""</td></tr>
</table>
<h2>Step 2 - Add Service Methods:</h2>
<p>To add a SOAP service method to a <i>SOAP::RPC::Driver</i> we can call the following method using <i>SOAP::RPC::Driver</i> instance:</p>
<pre class="prettyprint">
<i>driver</i>.add_method(name, *paramArg)
</pre>
<p>Here is the description of the parameters:</p>
<table class="src">
<tr><th>Paramter</th><th>Description</th></tr>
<tr><td><b>name</b></td><td>The name of the remote web service method.</td></tr>
<tr><td><b>paramArg</b></td><td> Specifies the names of the remote procedures' parameters.</td></tr>
</table>
<h2>Step 3 - Invoke SOAP service:</h2>
<p>The final step is to invoice SOAP service using <i>SOAP::RPC::Driver</i> instance as follows:</p>
<pre class="prettyprint">
result = driver.<i>serviceMethod</i>(paramArg...)
</pre>
<p>Here <i>serviceMethod</i> is the actual web service method and <i>paramArg...</i> is the list parameters required to pass in the service method.</p>
<h2>Example:</h2>
<p>Based on the above steps, we will write a SOAP client as follows:</p>
<pre class="prettyprint">
#!/usr/bin/ruby -w

require 'soap/rpc/driver'

NAMESPACE = 'urn:ruby:calculation'
URL = 'http://localhost:8080/'

begin
   driver = SOAP::RPC::Driver.new(URL, NAMESPACE)
   
   # Add remote sevice methods
   driver.add_method('add', 'a', 'b')

   # Call remote service methods
   puts driver.add(20, 30)
rescue => err
   puts err.message
end
</pre>
<h2>Further Readings:</h2>
<p>I have explained you just very basic concepts of Web Services with Ruby. If you want to drill down it further then there is following link to find more detail on <a href="http://www.ruby-doc.org/stdlib/libdoc/soap/rdoc/index.html" title="Web Services with Ruby" target="_blank">Web Services with Ruby</a>.</p>
<hr />
<div class="pre-btn">
<a href="ruby_xml_xslt.htm">Previous Page</a>
</div>
<div class="print-btn">
<a href="../cgi-bin/printpage.html" target="_blank">Print Version</a>
</div>
<div class="pdf-btn">
<a href="pdf/ruby_web_services.pdf" alt="Web Services with Ruby - SOAP4R" target="_blank">PDF Version</a>
</div>
<div class="nxt-btn">
<a href="ruby_tk_guide.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
</div>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</div>
</div><!-- middlecol -->
<div id="rightcol">
<!-- AddThis Button BEGIN -->
<div class="addthis">
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook"></a>
<a class="addthis_button_twitter"></a>
<script type="text/javascript">
<!--
 document.write('<a class="addthis_button_google_plusone" g:plusone:count="false"></a>');
//-->
</script>
<a class="addthis_button_linkedin"></a>
<a class="addthis_button_email"></a>
<a class="addthis_button_compact"></a>
</div>
<script type="text/javascript" src="../../s7.addthis.com/js/250/addthis_widget.js#pubid=ra-4f661ec623a400f0"></script>
</div>
<!-- AddThis Button END -->
<div class="localad">
<a rel="nofollow" href="http://www.modernindianbabynames.com/" target="_blank" title="Modern Baby Names">Modern Baby Names</a>
</div>
<div class="localad">
<a rel="nofollow" href="http://www.photofuntoos.com/" target="_blank" title="Online Photo Editing">Online Photo Editing</a>
</div>
<div class="rightgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
</div><!-- rightcol -->
<div style="clear:both;"></div>
</div><!-- wrapper -->
<div id="footer">
<div class="wrapper">
<div id="bottommenu">
<a href="../asp.net/index.htm" target="_top">ASP.NET </a> |
<a href="../jquery/index.htm" target="_top">jQuery </a> |
<a href="../ajax/index.htm" target="_top">AJAX </a> |
<a href="../ant/index.htm" target="_top">ANT</a> |
<a href="../jsp/index.htm" target="_top">JSP </a> |
<a href="../servlets/index.htm" target="_top">Servlets </a> |
<a href="../log4j/index.htm" target="_top">log4j </a> |
<a href="../ibatis/index.htm" target="_top">iBATIS </a> |
<a href="../hibernate/index.htm" target="_top">Hibernate </a> |
<a href="../jdbc/index.htm" target="_top">JDBC </a> |
<a href="../struts_2/index.htm" target="_top">Struts </a> |
<a href="../html5/index.htm" target="_top">HTML5 </a> |
<a href="../sql/index.htm" target="_top">SQL </a> |
<a href="../mysql/index.htm" target="_top">MySQL </a> |
<a href="../cplusplus/index.htm" target="_top">C++ </a> |
<a href="../unix/index.htm" target="_top">UNIX </a>
</div>
<div id="copyright">
<p>Copyright &copy; 2013 by tutorialspoint. All Rights Reserved.</p>
</div>
</div>
</div>
</body>

<!-- Mirrored from www.tutorialspoint.com/ruby/ruby_web_services.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 19:46:17 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>