<!doctype html> 
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--><html lang="en"><!--<![endif]-->

<!-- Mirrored from www.tutorialspoint.com/ruby/ruby_tk_guide.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 19:46:19 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="utf-8">
<title>Ruby/TK Guide</title>
<link rel="shortcut icon" href="../favicon.png" type="image/x-icon" />
<meta name="Keywords" content="Ruby, Tutorials, Learning, Beginners, Basics, Scripting Language, Syntax, Classes, , Variables, Comments, Loops, File, I/O, Functions, Objects, TK, Ranges, iterators, arrays, strings, methods, blocks, Exception, Multi-Threading, Hashes, Modules, LDAP, Web Services, Web Programming." />
<meta name="description" content="Ruby/TK Guide - Learning Ruby in simple and easy steps - A beginner's tutorial containing complete knowledge of Ruby Syntax Syntax, Classes, , Variables, Comments, Loops, File, I/O, Functions, Objects, TK, Ranges, iterators, arrays, strings, methods, blocks, Exception, Multi-Threading, Hashes, Modules, LDAP, Web Services, Web Programming." />
<base  />
<link rel="stylesheet" type="text/css" href="../scripts/style.css" />
<link rel="stylesheet" type="text/css" href="../scripts/prettify.css" />
<script type="text/javascript" src="../scripts/prettify.js"></script>
<style media="screen" type="text/css">
/* Ruby Scheme */
#topmenu a:link {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#topmenu a:visited {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#topmenu a:hover {text-decoration:none;color:#C83932 !important;background-color:transparent;font-weight:bold;}
#header{ 
background:#C83932 !important;
}
#topmenu
{
background-color:#5E0500 !important;
}
#leftcol ul.menu li.heading 
{
background:#C83932 !important;
border:1px solid #964800 !important;
}
#leftcol, #middlecol, #rightcol {min-height:1500px; padding:0px;}
</style>
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
</script>
</head>
<body onload="prettyPrint()">
<div id="header">
<div class="wrapper">
<h1 class="logo"><a href="../index.htm">Tutorials Point - Simply Easy Learning</a></h1>
<div id="search">
<form method="get" id="searchform" name="searchform" action="http://www.google.com/search" target="_blank">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com"/>
<input type="text" name="as_q" id="s" value="Search this site..." onfocus="if (this.value == 'Search this site...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search this site...';}"/>
<input value="FORID:11" name="cof" type="hidden"/>
<input type="hidden" name="ie" value="ISO-8859-1" />
<input class="submit btn" type="image" src="../images/icon-search.png" alt="Go"/>
</form>
</div>
</div>
</div>
<div id="topmenu">
<div class="wrapper">
<div id="left">
<a href="../index.htm" target="_top">HOME </a>
<a href="../java/index.htm" target="_top">JAVA </a>
<a href="../php/index.htm" target="_top">PHP </a>
<a href="../python/index.htm" target="_top">Python </a>
<a href="index.htm" target="_top">Ruby </a>
<a href="../perl/index.htm" target="_top">Perl </a>
<a href="../html/index.htm" target="_top">HTML </a>
<a href="../css/index.htm" target="_top">CSS </a>
<a href="../javascript/index.htm" target="_top">Javascript </a>
<a href="../mysql/index.htm" target="_top">MySQL </a>
<a href="../cplusplus/index.htm" target="_top">C++ </a>
<a href="../unix/index.htm" target="_top">UNIX </a>
<a href="../more.htm" target="_top">MORE...</a>
</div>
<div id="right">
<a href="../references.htm" target="_top">REFERENCES</a> |
<a href="../forums/index.html" target="_top">FORUM</a> |
<a href="../about/index.htm" target="_top">ABOUT</a> |
<a href="../about/contact_us.htm" target="_top">CONTACT</a>
</div>
</div>
</div>
<div class="wrapper">
<div id="leftcol">
<div class="mini-logo">
<img src="../images/ruby-mini-logo.png" alt="Ruby Tutorial" />
</div>
<ul class="menu">
<li class="heading">Ruby Basics</li>
<li><a class="left" target="_top" href="index.htm">Ruby Home</a></li>
<li><a class="left" target="_top" href="ruby_overview.htm">Ruby Overview</a></li>
<li><a class="left" target="_top" href="ruby_environment.htm">Ruby Environment</a></li>
<li><a class="left" target="_top" href="ruby_syntax.htm">Ruby Syntax</a></li>
<li><a class="left" target="_top" href="ruby_classes.htm">Ruby Classes</a></li>
<li><a class="left" target="_top" href="ruby_variables.htm">Ruby Variables</a></li>
<li><a class="left" target="_top" href="ruby_operators.htm">Ruby Operators</a></li>
<li><a class="left" target="_top" href="ruby_comments.htm">Ruby Comments</a></li>
<li><a class="left" target="_top" href="ruby_if_else.htm">Ruby IF...ELSE</a></li>
<li><a class="left" target="_top" href="ruby_loops.htm">Ruby Loops</a></li>
<li><a class="left" target="_top" href="ruby_methods.htm">Ruby Methods</a></li>
<li><a class="left" target="_top" href="ruby_blocks.htm">Ruby Blocks</a></li>
<li><a class="left" target="_top" href="ruby_modules.htm">Ruby Modules</a></li>
<li><a class="left" target="_top" href="ruby_strings.htm">Ruby Strings</a></li>
<li><a class="left" target="_top" href="ruby_arrays.htm">Ruby Arrays</a></li>
<li><a class="left" target="_top" href="ruby_hashes.htm">Ruby Hashes</a></li>
<li><a class="left" target="_top" href="ruby_date_time.htm">Ruby Date &amp; Time</a></li>
<li><a class="left" target="_top" href="ruby_ranges.htm">Ruby Ranges</a></li>
<li><a class="left" target="_top" href="ruby_iterators.htm">Ruby Iterators</a></li>
<li><a class="left" target="_top" href="ruby_input_output.htm">Ruby File I/O</a></li>
<li><a class="left" target="_top" href="ruby_exceptions.htm">Ruby Exceptions</a></li>
</ul>
<ul class="menu">
<li class="heading">Ruby Advanced</li>
<li><a class="left" target="_top" href="ruby_object_oriented.htm">Ruby Object Oriented</a></li>
<li><a class="left" target="_top" href="ruby_regular_expressions.htm">Ruby Regular Expressions</a></li>
<li><a class="left" target="_top" href="ruby_database_access.htm">Ruby Database Access</a></li>
<li><a class="left" target="_top" href="ruby_web_applications.htm">Ruby Web Applications</a></li>
<li><a class="left" target="_top" href="ruby_sending_email.htm">Ruby Sending Email</a></li>
<li><a class="left" target="_top" href="ruby_socket_programming.htm">Ruby Socket Programming</a></li>
<li><a class="left" target="_top" href="ruby_xml_xslt.htm">Ruby/XML, XSLT</a></li>
<li><a class="left" target="_top" href="ruby_web_services.htm">Ruby Web Services</a></li>
<li><a class="left" target="_top" href="ruby_tk_guide.htm"><b>Ruby/Tk Guide</b></a></li>
<li><a class="left" target="_top" href="ruby_ldap.htm">Ruby/LDAP Tutorial</a></li>
<li><a class="left" target="_top" href="ruby_multithreading.htm">Ruby Multithreading</a></li>
</ul>
<ul class="menu">
<li class="heading">Ruby Useful Resources</li>
<li><a class="left" target="_top" href="ruby_quick_guide.htm">Ruby Quick Guide</a></li>
<li><a class="left" target="_top" href="ruby_builtin_functions.htm">Ruby Built-in Functions</a></li>
<li><a class="left" target="_top" href="ruby_predefined_variables.htm">Ruby Predefined Variables</a></li>
<li><a class="left" target="_top" href="ruby_predefined_constants.htm">Ruby Predefined Constants</a></li>
<li><a class="left" target="_top" href="ruby_associated_tools.htm">Ruby Associated Tools</a></li>
<li><a class="left" target="_top" href="ruby_resources.htm">Ruby Useful Resources</a></li>
<li><a class="left" target="_top" href="../ruby-on-rails/index.htm">Ruby on Rails Tutorial</a></li>
</ul>
<ul class="menu">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="../developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="../computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="../computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div><!-- leftcol -->
<div id="middlecol">
<!-- PRINTING STARTS HERE -->
<div class="content">
<h1>Ruby/TK Guide</h1>
<div class="topgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
<hr />
<div class="pre-btn">
<a href="ruby_web_services.htm">Previous Page</a>
</div>
<div class="nxt-btn">
<a href="ruby_ldap.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
<h2>Introduction:</h2>
<p>The standard graphical user interface (GUI) for Ruby is Tk. Tk started out as the GUI for the Tcl scripting language developed by John Ousterhout.</p>
<p>Tk has the unique distinction of being the only cross-platform GUI. Tk runs on Windows, Mac, and Linux and provides a native look-and-feel on each operating system.</p>
<p>The basic component of a Tk-based application is called a widget. A component is also sometimes called a window, since, in Tk, "window" and "widget" are often used interchangeably.</p>
<p>Tk applications follow a widget hierarchy where any number of widgets may be placed within another widget, and those widgets within another widget, ad infinitum. The main widget in a Tk program is referred to as the root widget and can be created by making a new instance of the TkRoot class.</p>
<ul class="list">
<li><p>Most Tk-based applications follow the same cycle: create the widgets, place them in the interface, and finally, bind the events associated with each widget to a method.</p></li>
<li><p>There are three geometry managers <i>place, grid</i> and <i>pack</i> that are responsible for controlling the size and location of each of the widgets in the interface. </p></li>
</ul>
<h2>Installation:</h2>
<p>The Ruby Tk bindings are distributed with Ruby but Tk is a separate installation. Windows users can download a single click Tk installation from <a href="http://aspn.activestate.com/ASPN/Downloads/ActiveTcl/" target="_blank">ActiveState's ActiveTcl</a>.</p>
<p>Mac and Linux users may not need to install it because there is a great chance that its already installed along with OS but if not, you can download prebuilt packages or get the source from the <a href="http://www.tcl.tk/software/tcltk/downloadnow84.tml" target="_blank">Tcl Developer Xchange</a>.</p>
<h2>Simple Tk Application:</h2>
<p>A typical structure for Ruby/Tk programs is to create the main or <b>root</b> window (an instance of TkRoot), add widgets to it to build up the user interface, and then start the main event loop by calling <b>Tk.mainloop</b>.</p>
<p>The traditional <i>Hello, World!</i> example for Ruby/Tk looks something like this:</p>
<pre class="prettyprint">
require 'tk'

root = TkRoot.new { title "Hello, World!" }
TkLabel.new(root) do
   text 'Hello, World!'
   pack { padx 15 ; pady 15; side 'left' }
end
Tk.mainloop
</pre>
<p>Here after loading the tk extension module, we create a root-level frame using <i>TkRoot.new</i>. We then make a <i>TkLabel</i> widget as a child of the root frame, setting several options for the label. Finally, we pack the root frame and enter the main GUI event loop.</p> 
<p>If you would run this script, it would produce following result</p>
<center>
<img src="../images/ruby-tk1.jpg" alt="Ruby/Tk Hello World" />
</center>
<h2>Ruby/Tk Widget Classes:</h2>
<p>There is a list of various Ruby/Tk classes which can be used to create a desired GUI using Ruby/Tk.</p>
<ul class="list">
<li><p><a href="ruby_tk_frame.htm">TkFrame</a> Create and manipulate frame widgets</p></li>
<li><p><a href="ruby_tk_button.htm">TkButton</a> Create and manipulate button widgets</p></li>
<li><p><a href="ruby_tk_label.htm">TkLabel</a> Create and manipulate label widgets</p></li>
<li><p><a href="ruby_tk_entry.htm">TkEntry</a> Create and manipulate entry widgets</p></li>
<li><p><a href="ruby_tk_checkbutton.htm">TkCheckButton</a> Create and manipulate checkbutton widgets</p></li>
<li><p><a href="ruby_tk_radiobutton.htm"> TkRadioButton</a> Create and manipulate radiobutton widgets</p></li>
<li><p><a href="ruby_tk_listbox.htm">TkListbox</a> Create and manipulate listbox widgets</p></li>
<li><p><a href="ruby_tk_combobox.htm">TkComboBox</a> Create and manipulate listbox widgets</p></li>
<li><p><a href="ruby_tk_menu.htm">TkMenu</a> Create and manipulate menu widgets</p></li>
<li><p><a href="ruby_tk_menubutton.htm">TkMenubutton</a> Create and manipulate menubutton widgets</p></li>
<li><p><a href="ruby_tk_messagebox.htm">Tk.messageBox</a> Create and manipulate a message dialog</p></li>
<li><p><a href="ruby_tk_scrollbar.htm"> TkScrollbar</a> Create and manipulate scrollbar widgets</p></li>
<li><p><a href="ruby_tk_canvas.htm">TkCanvas</a> Create and manipulate canvas widgets</p></li>
<li><p><a href="ruby_tk_scale.htm"> TkScale</a> Create and manipulate scale widgets</p></li>
<li><p><a href="ruby_tk_text.htm"> TkText</a> Create and manipulate text widgets</p></li>
<li><p><a href="ruby_tk_toplevel.htm"> TkToplevel</a> Create and manipulate toplevel widgets</p></li>
<li><p><a href="ruby_tk_spinbox.htm"> TkSpinbox</a> Create and manipulate Spinbox widgets</p></li>
<li><p><a href="ruby_tk_progressbar.htm">TkProgressBar</a> Create and manipulate Progress Bar widgets</p></li>
<li><p><a href="ruby_tk_dialogbox.htm">Dialog Box</a> Create and manipulate Dialog Box widgets</p></li>
<li><p><a href="ruby_tk_notebook.htm"> Tk::Tile::Notebook</a> Display several windows in limited space with notebook metaphor.</p></li>
<li><p><a href="ruby_tk_paned.htm"> Tk::Tile::Paned</a> Displays a number of subwindows, stacked either vertically or horizontally.</p></li>
<li><p><a href="ruby_tk_separator.htm"> Tk::Tile::Separator</a> Displays a horizontal or vertical separator bar.</p></li>
<li><p><a href="ruby_tk_fonts_colors_images.htm">Ruby/Tk Font, Colors and Images</a> Understanding Ruby/Tk Fonts, Colors and Images</p></li>
</ul>
<h2>Standard Configuration Options:</h2>
<p>All widgets have a number of different configuration options, which generally control how they are displayed or how they behave. The options that are available depend upon the widget class of course.</p>
<p>Here is a list of all the standard configuration options which could be applicable to any Ruby/Tk widget. There are other widget specific options also which would be explained along with widgets.</p>
<table class="src">
<tr><th style="width:5%">SN</th><th>Options with Description</th></tr>
<tr><td>1</td><td><b>activebackground</b>  => String <br />Specifies background color to use when drawing active elements. An element is active if the mouse cursor is positioned over the element and pressing a mouse button will cause some action to occur. You can use color names like "red", "blue", "pink", "yellow" etc.</td></tr>
<tr><td>2</td><td><b>activeborderwidth</b>  => Integer <br />Specifies a non-negative value indicating the width of the 3-D border drawn around active elements.</td></tr>
<tr><td>3</td><td><b>activeforeground</b>  => String <br />Specifies foreground color to use when drawing active elements.</td></tr>
<tr><td>4</td><td><b>anchor</b>  => String <br />Specifies how the information in a widget (e.g. text or a bitmap)
is to be displayed in the widget. Must be one of the values <b>n</b>, <b>ne</b>, <b>e</b>, <b>se</b>,
<b>s</b>, <b>sw</b>, <b>w</b>, <b>nw</b>, or <b>center</b>.
For example, <b>nw</b> means display the information such that its
top-left corner is at the top-left corner of the widget.</td></tr>
<tr><td>5</td><td><b>background or bg</b>  => String <br />Specifies the normal background color to use when displaying the widget.</td></tr>
<tr><td>6</td><td><b>bitmap</b>  => Bitmap<br />Specifies a bitmap to display in the widget. The exact way in which the bitmap is displayed may be affected by other options such as anchor or justify.</td></tr>
<tr><td>7</td><td><b>borderwidth or bd</b>  => Integer <br />Specifies a non-negative value indicating the width of the 3-D border to draw around the outside of the widget.</td></tr>
<tr><td>8</td><td><b>compound</b>  => String <br />Specifies if the widget should display text and bitmaps/images at the same time, and if so, where the bitmap/image should be placed relative to the text.  Must be one of the values <b>none</b>, <b>bottom</b>, <b>top</b>, <b>left</b>, <b>right</b>, or <b>center</b>.</td></tr>
<tr><td>9</td><td><b>cursor</b>  => String <br />Specifies the mouse cursor to be used for the widget. Possible values could be "watch", "arrow" etc.</td></tr>
<tr><td>10</td><td><b>disabledforeground</b>  => String <br />Specifies foreground color to use when drawing a disabled element.</td></tr>
<tr><td>11</td><td><b>exportselection</b>  => Boolean <br />Specifies whether or not a selection in the widget should also be the X selection. The value may have any of the <b>true</b>, <b>false</b>, <b>0</b>, <b>1</b>, <b>yes</b>, or <b>no</b>.If the selection is exported, then selecting in the widget deselects the current X selection, selecting outside the widget deselects any widget selection, and the widget will respond to selection retrieval requests when it has a selection. </td></tr>
<tr><td>12</td><td><b>font</b>  => String <br />Specifies the font to use when drawing text inside the widget.</td></tr>
<tr><td>13</td><td><b>foreground or fg</b>  => String <br />Specifies the normal foreground color to use when displaying the widget.</td></tr>
<tr><td>14</td><td><b>highlightbackground</b>  => String <br />Specifies the color to display in the traversal highlight region when the widget does not have the input focus.</td></tr>
<tr><td>15</td><td><b>highlightcolor</b>  => String <br />Specifies the color to use for the traversal highlight rectangle that is drawn around the widget when it has the input focus.</td></tr>
<tr><td>16</td><td><b>highlightthickness</b>  => Integer <br />Specifies a non-negative value indicating the width of the highlight rectangle to draw around the outside of the widget when it has the input focus.</td></tr>
<tr><td>17</td><td><b>image</b>  => Image <br />Specifies an image to display in the widget, which must have been created with an image create. Typically, if the image option is specified then it overrides other options that specify a bitmap or textual value to display in the widget; the image option may be reset to an empty string to re-enable a bitmap or text display.</td></tr>
<tr><td>18</td><td><b>jump </b>  => String <br />For widgets with a slider that can be dragged to adjust a value, such as scrollbars and scales, this option determines when notifications are made about changes in the value. The option's value must be a boolean. If the value is false, updates are made continuously as the slider is dragged. If the value is true, updates are delayed until the mouse button is released to end the drag; at that point a single notification is made.</td></tr>
<tr><td>19</td><td><b>justify </b>  => String <br />When there are multiple lines of text displayed in a widget, this option determines how the lines line up with each other.  Must be one of <b>left</b>, <b>center</b>, or <b>right</b>.  <b>Left</b> means that the lines' left edges all line up, <b>center</b> means that the lines' centers are aligned, and <b>right</b> means that the lines' right edges line up.</td></tr>
<tr><td>20</td><td><b>offset </b>  => String <br />Specifies the offset of tiles (see also <b>tile</b> option).  It can have two different formats <b>offset x,y</b> or <b>offset side</b>, where side can be <b>n</b>, <b>ne</b>, <b>e</b>, <b>se</b>, <b>s</b>, <b>sw</b>, <b>w</b>, <b>nw</b>, or <b>center</b>.</td></tr>
<tr><td>21</td><td><b>orient </b>  => String <br />For widgets that can lay themselves out with either a horizontal or vertical orientation, such as scrollbars, this option specifies which orientation should be used.  Must be either <b>horizontal</b>
or <b>vertical</b> or an abbreviation of one of these.</td></tr>
<tr><td>22</td><td><b>padx</b>  => Integer <br />Specifies a non-negative value indicating how much extra space to request for the widget in the X-direction.</td></tr>
<tr><td>23</td><td><b>pady </b>  => Integer <br />Specifies a non-negative value indicating how much extra space to request for the widget in the Y-direction. </td></tr>
<tr><td>24</td><td><b>relief </b>  => Integer <br />Specifies the 3-D effect desired for the widget.  Acceptable
values are <b>raised</b>, <b>sunken</b>, <b>flat</b>, <b>ridge</b>, and <b>groove</b>.
</td></tr>
<tr><td>25</td><td><b>repeatdelay </b>  => Integer <br />Specifies the number of milliseconds a button or key must be held down before it begins to auto-repeat. Used, for example, on the up- and down-arrows in scrollbars.</td></tr>
<tr><td>26</td><td><b>repeatinterval </b>  => Integer <br />Used in conjunction with <b>repeatdelay</b>:  once auto-repeat
begins, this option determines the number of milliseconds between
auto-repeats.</td></tr>
<tr><td>27</td><td><b>selectbackground </b>  => String <br />Specifies the background color to use when displaying selected items.</td></tr>
<tr><td>28</td><td><b>selectborderwidth</b>  => Integer <br />Specifies a non-negative value indicating the width of the 3-D border to draw around selected items.</td></tr>
<tr><td>29</td><td><b>selectforeground</b>  => String <br />Specifies the foreground color to use when displaying selected items.</td></tr>
<tr><td>30</td><td><b>setgrid</b>  => Boolean <br />Specifies a boolean value that determines whether this widget controls the resizing grid for its top-level window. This option is typically used in text widgets, where the information in the widget has a natural size (the size of a character) and it makes sense for the window's dimensions to be integral numbers of these units.</td></tr>
<tr><td>31</td><td><b>takefocus</b>  => Integer <br />Provides information used when moving the focus from window to window via keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a window, the traversal scripts first check whether the window is viewable (it and all its ancestors are mapped); if not, the window is skipped. A value of 0 means that this window should be skipped entirely during keyboard traversal. 1 means that the this window should always receive the input focus. </td></tr>
<tr><td>32</td><td><b>text </b>  => String <br />Specifies a string to be displayed inside the widget.  The way in which
the string is displayed depends on the particular widget and may be determined by other options, such as <b>anchor</b> or <b>justify</b>.</td></tr>
<tr><td>33</td><td><b>textvariable</b>  => Variable <br />Specifies the name of a variable.  The value of the variable is a text string to be displayed inside the widget;  if the variable value changes then the widget will automatically update itself to reflect the new value. The way in which the string is displayed in the widget depends on the particular widget and may be determined by other options, such as <b>anchor</b> or <b>justify</b>.</td></tr>
<tr><td>34</td><td><b>tile</b>  => Image <br />Specifies image used to display the widget. If image is the empty string, then the normal background color is displayed.</td></tr>
<tr><td>35</td><td><b>troughcolor</b>  => String <br />Specifies the color to use for the rectangular trough areas in widgets such as scrollbars and scales.</td></tr>
<tr><td>36</td><td><b>troughtile</b>  => Image <br />Specifies image used to display in the rectangular trough areas in widgets such as scrollbars and scales.</td></tr>
<tr><td>37</td><td><b>underline</b>  => Integer <br />Specifies the integer index of a character to underline in the widget. This option is used by the default bindings to implement keyboard traversal for menu buttons and menu entries. 0 corresponds to the first character of the text displayed in the widget, 1 to the next character, and so on.</td></tr>
<tr><td>38</td><td><b>wraplength </b>  => Integer <br />For widgets that can perform word-wrapping, this option specifies the maximum line length.</td></tr>
<tr><td>39</td><td><b>xscrollcommand </b>  => function <br />Specifies a callback used to communicate with horizontal scrollbars.</td></tr>
<tr><td>40</td><td><b>yscrollcommand </b>  => function <br />Specifies a calback used to communicate with vertical scrollbars.</td></tr>
</table>
<h2>Ruby/Tk Geometry Management:</h2>
<p>Geometry Management deals with positioning different widgets as per requirement. Geometry management in Tk relies on the concept of master and slave widgets.</p>
<p>A master is a widget, typically a toplevel window or a frame, which will contain other widgets, which are called slaves. You can think of a geometry manager as taking control of the master widget, and deciding what will be displayed within.</p>
<p>The geometry manager will ask each slave widget for its natural size, or how large it would ideally like to be displayed. It then takes that information and combines it with any parameters provided by the program when it asks the geometry manager to manage that particular slave widget.</p>
<p>There are three geometry managers <i>place, grid</i> and <i>pack</i> that are responsible for controlling the size and location of each of the widgets in the interface.</p>
<ul class="list">
<li><p><a href="ruby_tk_grid.htm">grid</a> Geometry manager that arranges widgets in a grid</p></li>
<li><p><a href="ruby_tk_pack.htm">pack</a> Geometry manager that packs around edges of cavity</p></li>
<li><p><a href="ruby_tk_place.htm">place</a> Geometry manager for fixed or rubber-sheet placement</p></li>
</ul>
<h2>Ruby/Tk Event Handling:</h2>
<p>Ruby/Tk supports <i>event loop</i> which receives events from the operating system. These are things like button presses, keystrokes, mouse movement, window resizing, and so on.</p>
<p>Ruby/Tk takes care of managing this event loop for you. It will figure out what widget the event applies to (did the user click on this button? if a key was pressed, which textbox had the focus?), and dispatch it accordingly. Individual widgets know how to respond to events, so for example a button might change color when the mouse moves over it, and revert back when the mouse leaves.</p>
<p>At a higher level, Ruby/Tk invokes callbacks in your program to indicate that something significant happened to a widget For either case, you can provide a code block or a <i>Ruby Proc</i> object that specifies how the application responds to the event or callback.</p>
<p>Let's take a look at how to use the bind method to associate basic window system events with the Ruby procedures that handle them.The simplest form of bind takes as its inputs a string indicating the event name and a code block that Tk uses to handle the event.</p>
<p>For example, to catch the <i>ButtonRelease</i> event for the first mouse button on some widget, you'd write:</p>
<pre class="prettyprint">
someWidget.bind('ButtonRelease-1') {
    ....code block to handle this event...
}
</pre>
<p>An event name can include additional modifiers and details. A modifier is a string like <i>Shift</i>, <i>Control</i> or <i>Alt</i>, indicating that one of the modifier keys was pressed.</p>
<p>So, for example, to catch the event that's generated when the user holds down the <i>Ctrl</i> key and clicks the right mouse button</p>
<pre class="prettyprint">
someWidget.bind('Control-ButtonPress-3', proc { puts "Ouch!" })
</pre>
<p>Many Ruby/Tk widgets can trigger <i>callbacks</i> when the user activates them, and you can use the <i>command</i> callback
to specify that a certain code block or procedure is invoked when that happens. As seen earlier, you can specify the command callback
procedure when you create the widget:</p>
<pre class="prettyprint">
helpButton = TkButton.new(buttonFrame) {
   text "Help"
   command proc { showHelp }
}
</pre>
<p>or you can assign it later, using the widget's <i>command</i> method:</p>
<pre class="prettyprint">
helpButton.command proc { showHelp }
</pre>
<p>Since the command method accepts either procedures or code blocks, you could also write the previous code example as:</p>
<pre class="prettyprint">
helpButton = TkButton.new(buttonFrame) {
   text "Help"
   command { showHelp }
}
</pre>
<p>There are following basic event types which you can use in your Ruby/Tk application:</p>
<table class="src">
<tr><th>Tag</th><th>Event Description</th></tr>
<tr><td>"1" (one)</td><td>Clicked left mouse button</td></tr>
<tr><td>"ButtonPress-1"</td><td>Clicked left mouse button</td></tr>
<tr><td>"Enter"</td><td>Moved mouse inside</td></tr>
<tr><td>"Leave"</td><td>Moved mouse outside</td></tr>
<tr><td>"Double-1"</td><td>Double clicked</td></tr>
<tr><td>"B3-Motion"</td><td>Right button drag from one position to another</td></tr>
<tr><td>Control-ButtonPress-3</td><td>Right button is pressed along with <i>Ctrl</i> Key.</td></tr>
<tr><td>Alt-ButtonPress-1</td><td>Let button is pressed along with <i>Alt</i> Key.</td></tr>
</table>
<h2>The <i>configure</i> Method</h2>
<p>The <i>configure</i> method can be used to set and retrieve any widget configuration values. For example, to change the width of a button you can call configure method any time as follows:</p>
<pre class="prettyprint">
require "tk"

button = TkButton.new {
  text 'Hello World!'
  pack
}
button.configure('activebackground', 'blue')
Tk.mainloop
</pre>
<p>To get the value for a current widget, just supply it without a value as follows:</p>
<pre class="prettyprint">
color = button.configure('activebackground')
</pre>
<p>You can also call configure without any options at all, which will give you a listing of all options and their values. </p>
<h2>The <i>cget</i> Method:</h2>
<p>For simply retrieving the value of an option, configure returns more information than you generally want. The cget method returns just the current value.</p>
<pre class="prettyprint">
color = button.cget('activebackground')
</pre>
<hr />
<div class="pre-btn">
<a href="ruby_web_services.htm">Previous Page</a>
</div>
<div class="print-btn">
<a href="../cgi-bin/printpage.html" target="_blank">Print Version</a>
</div>
<div class="pdf-btn">
<a href="pdf/ruby_tk_guide.pdf" alt="Ruby/TK Guide" target="_blank">PDF Version</a>
</div>
<div class="nxt-btn">
<a href="ruby_ldap.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
</div>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</div>
</div><!-- middlecol -->
<div id="rightcol">
<!-- AddThis Button BEGIN -->
<div class="addthis">
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook"></a>
<a class="addthis_button_twitter"></a>
<script type="text/javascript">
<!--
 document.write('<a class="addthis_button_google_plusone" g:plusone:count="false"></a>');
//-->
</script>
<a class="addthis_button_linkedin"></a>
<a class="addthis_button_email"></a>
<a class="addthis_button_compact"></a>
</div>
<script type="text/javascript" src="../../s7.addthis.com/js/250/addthis_widget.js#pubid=ra-4f661ec623a400f0"></script>
</div>
<!-- AddThis Button END -->
<div class="localad">
<a rel="nofollow" href="http://www.modernindianbabynames.com/" target="_blank" title="Modern Baby Names">Modern Baby Names</a>
</div>
<div class="localad">
<a rel="nofollow" href="http://www.photofuntoos.com/" target="_blank" title="Online Photo Editing">Online Photo Editing</a>
</div>
<div class="rightgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
</div><!-- rightcol -->
<div style="clear:both;"></div>
</div><!-- wrapper -->
<div id="footer">
<div class="wrapper">
<div id="bottommenu">
<a href="../asp.net/index.htm" target="_top">ASP.NET </a> |
<a href="../jquery/index.htm" target="_top">jQuery </a> |
<a href="../ajax/index.htm" target="_top">AJAX </a> |
<a href="../ant/index.htm" target="_top">ANT</a> |
<a href="../jsp/index.htm" target="_top">JSP </a> |
<a href="../servlets/index.htm" target="_top">Servlets </a> |
<a href="../log4j/index.htm" target="_top">log4j </a> |
<a href="../ibatis/index.htm" target="_top">iBATIS </a> |
<a href="../hibernate/index.htm" target="_top">Hibernate </a> |
<a href="../jdbc/index.htm" target="_top">JDBC </a> |
<a href="../struts_2/index.htm" target="_top">Struts </a> |
<a href="../html5/index.htm" target="_top">HTML5 </a> |
<a href="../sql/index.htm" target="_top">SQL </a> |
<a href="../mysql/index.htm" target="_top">MySQL </a> |
<a href="../cplusplus/index.htm" target="_top">C++ </a> |
<a href="../unix/index.htm" target="_top">UNIX </a>
</div>
<div id="copyright">
<p>Copyright &copy; 2013 by tutorialspoint. All Rights Reserved.</p>
</div>
</div>
</div>
</body>

<!-- Mirrored from www.tutorialspoint.com/ruby/ruby_tk_guide.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 19:46:41 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>