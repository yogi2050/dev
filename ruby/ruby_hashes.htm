<!doctype html> 
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--><html lang="en"><!--<![endif]-->

<!-- Mirrored from www.tutorialspoint.com/ruby/ruby_hashes.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 19:45:27 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="utf-8">
<title>Ruby Hashes</title>
<link rel="shortcut icon" href="../favicon.png" type="image/x-icon" />
<meta name="Keywords" content="Ruby, Tutorials, Learning, Beginners, Basics, Scripting Language, Syntax, Classes, , Variables, Comments, Loops, File, I/O, Functions, Objects, TK, Ranges, iterators, arrays, strings, methods, blocks, Exception, Multi-Threading, Hashes, Modules, LDAP, Web Services, Web Programming." />
<meta name="description" content="Ruby Hashes - Learning Ruby in simple and easy steps - A beginner's tutorial containing complete knowledge of Ruby Syntax Syntax, Classes, , Variables, Comments, Loops, File, I/O, Functions, Objects, TK, Ranges, iterators, arrays, strings, methods, blocks, Exception, Multi-Threading, Hashes, Modules, LDAP, Web Services, Web Programming." />
<base  />
<link rel="stylesheet" type="text/css" href="../scripts/style.css" />
<link rel="stylesheet" type="text/css" href="../scripts/prettify.css" />
<script type="text/javascript" src="../scripts/prettify.js"></script>
<style media="screen" type="text/css">
/* Ruby Scheme */
#topmenu a:link {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#topmenu a:visited {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#topmenu a:hover {text-decoration:none;color:#C83932 !important;background-color:transparent;font-weight:bold;}
#header{ 
background:#C83932 !important;
}
#topmenu
{
background-color:#5E0500 !important;
}
#leftcol ul.menu li.heading 
{
background:#C83932 !important;
border:1px solid #964800 !important;
}
#leftcol, #middlecol, #rightcol {min-height:1500px; padding:0px;}
</style>
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
</script>
</head>
<body onload="prettyPrint()">
<div id="header">
<div class="wrapper">
<h1 class="logo"><a href="../index.htm">Tutorials Point - Simply Easy Learning</a></h1>
<div id="search">
<form method="get" id="searchform" name="searchform" action="http://www.google.com/search" target="_blank">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com"/>
<input type="text" name="as_q" id="s" value="Search this site..." onfocus="if (this.value == 'Search this site...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search this site...';}"/>
<input value="FORID:11" name="cof" type="hidden"/>
<input type="hidden" name="ie" value="ISO-8859-1" />
<input class="submit btn" type="image" src="../images/icon-search.png" alt="Go"/>
</form>
</div>
</div>
</div>
<div id="topmenu">
<div class="wrapper">
<div id="left">
<a href="../index.htm" target="_top">HOME </a>
<a href="../java/index.htm" target="_top">JAVA </a>
<a href="../php/index.htm" target="_top">PHP </a>
<a href="../python/index.htm" target="_top">Python </a>
<a href="index.htm" target="_top">Ruby </a>
<a href="../perl/index.htm" target="_top">Perl </a>
<a href="../html/index.htm" target="_top">HTML </a>
<a href="../css/index.htm" target="_top">CSS </a>
<a href="../javascript/index.htm" target="_top">Javascript </a>
<a href="../mysql/index.htm" target="_top">MySQL </a>
<a href="../cplusplus/index.htm" target="_top">C++ </a>
<a href="../unix/index.htm" target="_top">UNIX </a>
<a href="../more.htm" target="_top">MORE...</a>
</div>
<div id="right">
<a href="../references.htm" target="_top">REFERENCES</a> |
<a href="../forums/index.html" target="_top">FORUM</a> |
<a href="../about/index.htm" target="_top">ABOUT</a> |
<a href="../about/contact_us.htm" target="_top">CONTACT</a>
</div>
</div>
</div>
<div class="wrapper">
<div id="leftcol">
<div class="mini-logo">
<img src="../images/ruby-mini-logo.png" alt="Ruby Tutorial" />
</div>
<ul class="menu">
<li class="heading">Ruby Basics</li>
<li><a class="left" target="_top" href="index.htm">Ruby Home</a></li>
<li><a class="left" target="_top" href="ruby_overview.htm">Ruby Overview</a></li>
<li><a class="left" target="_top" href="ruby_environment.htm">Ruby Environment</a></li>
<li><a class="left" target="_top" href="ruby_syntax.htm">Ruby Syntax</a></li>
<li><a class="left" target="_top" href="ruby_classes.htm">Ruby Classes</a></li>
<li><a class="left" target="_top" href="ruby_variables.htm">Ruby Variables</a></li>
<li><a class="left" target="_top" href="ruby_operators.htm">Ruby Operators</a></li>
<li><a class="left" target="_top" href="ruby_comments.htm">Ruby Comments</a></li>
<li><a class="left" target="_top" href="ruby_if_else.htm">Ruby IF...ELSE</a></li>
<li><a class="left" target="_top" href="ruby_loops.htm">Ruby Loops</a></li>
<li><a class="left" target="_top" href="ruby_methods.htm">Ruby Methods</a></li>
<li><a class="left" target="_top" href="ruby_blocks.htm">Ruby Blocks</a></li>
<li><a class="left" target="_top" href="ruby_modules.htm">Ruby Modules</a></li>
<li><a class="left" target="_top" href="ruby_strings.htm">Ruby Strings</a></li>
<li><a class="left" target="_top" href="ruby_arrays.htm">Ruby Arrays</a></li>
<li><a class="left" target="_top" href="ruby_hashes.htm"><b>Ruby Hashes</b></a></li>
<li><a class="left" target="_top" href="ruby_date_time.htm">Ruby Date &amp; Time</a></li>
<li><a class="left" target="_top" href="ruby_ranges.htm">Ruby Ranges</a></li>
<li><a class="left" target="_top" href="ruby_iterators.htm">Ruby Iterators</a></li>
<li><a class="left" target="_top" href="ruby_input_output.htm">Ruby File I/O</a></li>
<li><a class="left" target="_top" href="ruby_exceptions.htm">Ruby Exceptions</a></li>
</ul>
<ul class="menu">
<li class="heading">Ruby Advanced</li>
<li><a class="left" target="_top" href="ruby_object_oriented.htm">Ruby Object Oriented</a></li>
<li><a class="left" target="_top" href="ruby_regular_expressions.htm">Ruby Regular Expressions</a></li>
<li><a class="left" target="_top" href="ruby_database_access.htm">Ruby Database Access</a></li>
<li><a class="left" target="_top" href="ruby_web_applications.htm">Ruby Web Applications</a></li>
<li><a class="left" target="_top" href="ruby_sending_email.htm">Ruby Sending Email</a></li>
<li><a class="left" target="_top" href="ruby_socket_programming.htm">Ruby Socket Programming</a></li>
<li><a class="left" target="_top" href="ruby_xml_xslt.htm">Ruby/XML, XSLT</a></li>
<li><a class="left" target="_top" href="ruby_web_services.htm">Ruby Web Services</a></li>
<li><a class="left" target="_top" href="ruby_tk_guide.htm">Ruby/Tk Guide</a></li>
<li><a class="left" target="_top" href="ruby_ldap.htm">Ruby/LDAP Tutorial</a></li>
<li><a class="left" target="_top" href="ruby_multithreading.htm">Ruby Multithreading</a></li>
</ul>
<ul class="menu">
<li class="heading">Ruby Useful Resources</li>
<li><a class="left" target="_top" href="ruby_quick_guide.htm">Ruby Quick Guide</a></li>
<li><a class="left" target="_top" href="ruby_builtin_functions.htm">Ruby Built-in Functions</a></li>
<li><a class="left" target="_top" href="ruby_predefined_variables.htm">Ruby Predefined Variables</a></li>
<li><a class="left" target="_top" href="ruby_predefined_constants.htm">Ruby Predefined Constants</a></li>
<li><a class="left" target="_top" href="ruby_associated_tools.htm">Ruby Associated Tools</a></li>
<li><a class="left" target="_top" href="ruby_resources.htm">Ruby Useful Resources</a></li>
<li><a class="left" target="_top" href="../ruby-on-rails/index.htm">Ruby on Rails Tutorial</a></li>
</ul>
<ul class="menu">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="../developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="../computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="../computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div><!-- leftcol -->
<div id="middlecol">
<!-- PRINTING STARTS HERE -->
<div class="content">
<h1>Ruby Hashes</h1>
<div class="topgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
<hr />
<div class="pre-btn">
<a href="ruby_arrays.htm">Previous Page</a>
</div>
<div class="nxt-btn">
<a href="ruby_date_time.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
<p>A Hash is a collection of key-value pairs like this: "employee" =&gt; "salary". It is similar to an Array, except that indexing is done via arbitrary keys of any object type, not an integer index.</p>
<p>The order in which you traverse a hash by either key or value may seem arbitrary, and will generally not be in the insertion order. If you attempt to access a hash with a key that does not exist, the method will return <i>nil</i></p>
<h2>Creating Hashes:</h2>
<p>As with arrays, there is a variety of ways to create hashes. You can create an empty hash with the <i>new</i> class method:</p>
<pre class="prettyprint">
months = Hash.new
</pre>
<p>You can also use <i>new</i> to create a hash with a default value, which is otherwise just <i>nil</i>:</p>
<pre class="prettyprint">
months = Hash.new( "month" )

or

months = Hash.new "month"
</pre>
<p>When you access any key in a hash that has a default value, if the key or value doesn't exist, accessing the hash will return
the default value:</p>
<pre class="prettyprint">
#!/usr/bin/ruby

months = Hash.new( "month" )

puts "#{months[0]}"
puts "#{months[72]}"
</pre>
<p>This will produce following result:</p>
<pre class="prettyprint">
month
month
</pre>
<pre class="prettyprint">
#!/usr/bin/ruby

H = Hash["a" =&gt; 100, "b" =&gt; 200]

puts "#{H['a']}"
puts "#{H['b']}"
</pre>
<p>This will produce following result:</p>
<pre class="prettyprint">
100
200
</pre>
<p>You can use any Ruby object as a key or value, even an array, so following example is a valid one:</p>
<pre class="prettyprint">
[1,"jan"] =&gt; "January"
</pre>
<h2>Hash Built-in Methods:</h2>
<p>We need to have an instance of Hash object to call a Hash method. As we have seen, following is the way to create an instance of Hash object:</p>
<pre class="prettyprint">
Hash[[key =&gt;|, value]* ] or

Hash.new [or] Hash.new(obj) [or]

Hash.new { |hash, key| block }
</pre>
<p>This will returns a new hash populated with the given objects. Now using created object we can call any available instance methods. For example:</p>
<pre class="prettyprint">
#!/usr/bin/ruby

$, = ", "
months = Hash.new( "month" )

months = {"1" =&gt; "January", "2" =&gt; "February"}

keys = months.keys

puts "#{keys}"
</pre>
<p>This will produce following result:</p>
<pre class="prettyprint">
2, 1
</pre>
<p>Following are the public hash methods ( Assuming <i>hash</i> is an array object ):</p>
<table class="src">
<tr><th style="width:5%">SN</th><th>Methods with Description</th></tr>
<tr><td>1</td><td><b>hash == other_hash</b><br />Tests whether two hashes are equal, based on whether they have the same number of key-value pairs, and whether the key-value pairs match the corresponding pair in each hash.</td></tr>
<tr><td>2</td><td><b>hash.[key]</b><br />Using a key, references a value from hash. If the key is not found, returns a default value.</td></tr>
<tr><td>3</td><td><b>hash.[key]=value</b><br />Associates the value given by <i>value</i> with the key given by <i>key</i>.</td></tr>
<tr><td>4</td><td><b>hash.clear</b><br />Removes all key-value pairs from hash.</td></tr>
<tr><td>5</td><td><b>hash.default(key = nil)</b><br />Returns the default value for <i>hash</i>, nil if not set by default=. ([] returns a default value if the key does not exist in <i>hash</i>.)</td></tr>
<tr><td>6</td><td><b>hash.default = obj</b><br />Sets a default value for <i>hash</i>.</td></tr>
<tr><td>7</td><td><b>hash.default_proc</b><br />Returns a block if <i>hash</i> was created by a block.</td></tr>
<tr><td>8</td><td><b>hash.delete(key) [or]<br />
array.delete(key) { |key| block }</b><br />Deletes a key-value pair from <i>hash</i> by <i>key</i>. If block is used, returns the result of a block if pair is not found. Compare <i>delete_if</i>.</td></tr>
<tr><td>9</td><td><b>hash.delete_if { |key,value| block }</b><br />Deletes a key-value pair from <i>hash</i> for every pair the
block evaluates to <i>true</i>.</td></tr>
<tr><td>10</td><td><b>hash.each { |key,value| block }</b><br />Iterates over <i>hash</i>, calling the block once for each key,
passing the key-value as a two-element array.</td></tr>
<tr><td>11</td><td><b>hash.each_key { |key| block }</b><br />Iterates over <i>hash</i>, calling the block once for each key,
passing <i>key</i> as a parameter.</td></tr>
<tr><td>12</td><td><b>hash.each_key { |key_value_array| block }</b><br />Iterates over <i>hash</i>, calling the block once for each <i>key</i>, passing the <i>key</i> and <i>value</i> as parameters.</td></tr>
<tr><td>13</td><td><b>hash.each_key { |value| block }</b><br />Iterates over <i>hash</i>, calling the block once for each <i>key</i>,
passing <i>value</i> as a parameter.</td></tr>
<tr><td>14</td><td><b>hash.empty?</b><br />Tests whether hash is empty (contains no key-value pairs), returning <i>true</i> or <i>false</i>.</td></tr>
<tr><td>15</td><td><b>hash.fetch(key [, default] ) [or]<br />
hash.fetch(key) { | key | block }</b><br />Returns a value from <i>hash</i> for the given <i>key</i>. If the <i>key</i> can't be found, and there are no other arguments, it raises an <i>IndexError</i> exception; if <i>default</i> is given, it is returned; if the optional block is specified, its result is returned.</td></tr>
<tr><td>16</td><td><b>hash.has_key?(key) [or] hash.include?(key) [or]<br />
hash.key?(key) [or] hash.member?(key)</b><br />Tests whether a given <i>key</i> is present in hash, returning <i>true</i> or <i>false</i>.</td></tr>
<tr><td>17</td><td><b>hash.has_value?(value)</b><br />Tests whether hash contains the given <i>value</i>.</td></tr>
<tr><td>18</td><td><b>hash.index(value)</b><br />Returns the <i>key</i> for the given <i>value</i> in hash, <i>nil</i> if no
matching value is found.</td></tr>
<tr><td>19</td><td><b>hash.indexes(keys)</b><br />Returns a new array consisting of values for the given key(s). Will insert the default value for keys that are not found. This method is deprecated. Use select.</td></tr>
<tr><td>20</td><td><b>hash.indices(keys)</b><br />Returns a new array consisting of values for the given key(s). Will insert the default value for keys that are not found. This method is deprecated. Use select.</td></tr>
<tr><td>21</td><td><b>hash.inspect</b><br />Returns a pretty print string version of hash.</td></tr>
<tr><td>22</td><td><b>hash.invert</b><br />Creates a new <i>hash</i>, inverting <i>keys</i> and <i>values</i> from <i>hash</i>; that is, in the new hash, the keys from <i>hash</i> become values, and values become keys.</td></tr>
<tr><td>23</td><td><b>hash.keys</b><br />Creates a new array with keys from <i>hash</i>.</td></tr>
<tr><td>24</td><td><b>hash.length</b><br />Returns the size or length of <i>hash</i> as an integer.</td></tr>
<tr><td>25</td><td><b>hash.merge(other_hash) [or]<br />
hash.merge(other_hash) { |key, oldval, newval| block }</b><br />Returns a new hash containing the contents of <i>hash</i> and
<i>other_hash</i>, overwriting pairs in hash with duplicate keys with those from <i>other_hash</i>.</td></tr>
<tr><td>26</td><td><b>hash.merge!(other_hash) [or]<br />
hash.merge!(other_hash) { |key, oldval, newval| block }</b><br />Same as merge, but changes are done in place.</td></tr>
<tr><td>27</td><td><b>hash.rehash</b><br />Rebuilds <i>hash</i> based on the current values for each <i>key</i>. If values have changed since they were inserted, this method reindexes <i>hash</i>.</td></tr>
<tr><td>28</td><td><b>hash.reject { |key, value| block }</b><br />Creates a new <i>hash</i> for every pair the <i>block</i> evaluates to
<i>true</i></td></tr>
<tr><td>29</td><td><b>hash.reject! { |key, value| block }</b><br />Same as <i>reject</i>, but changes are made in place.</td></tr>
<tr><td>30</td><td><b>hash.replace(other_hash)</b><br />Replaces the contents of <i>hash</i> with the contents of <i>other_
hash</i>.</td></tr>
<tr><td>31</td><td><b>hash.select { |key, value| block }</b><br />Returns a new array consisting of key-value pairs from
<i>hash</i> for which the <i>block</i> returns <i>true</i>.</td></tr>
<tr><td>32</td><td><b>hash.shift</b><br />Removes a key-value pair from <i>hash</i>, returning it as a two-element array.</td></tr>
<tr><td>33</td><td><b>hash.size</b><br />Returns the <i>size</i> or length of <i>hash</i> as an integer.</td></tr>
<tr><td>34</td><td><b>hash.sort</b><br />Converts <i>hash</i> to a two-dimensional array containing
arrays of key-value pairs, then sorts it as an array.</td></tr>
<tr><td>35</td><td><b>hash.store(key, value)</b><br />Stores a key-value pair in <i>hash</i>.</td></tr>
<tr><td>36</td><td><b>hash.to_a</b><br />Creates a two-dimensional array from hash. Each key/value pair is converted to an array, and all these arrays are stored in a containing array.</td></tr>
<tr><td>37</td><td><b>hash.to_hash</b><br />Returns <i>hash</i> (self).</td></tr>
<tr><td>38</td><td><b>hash.to_s</b><br />Converts <i>hash</i> to an array, then converts that array to a string.</td></tr>
<tr><td>39</td><td><b>hash.update(other_hash) [or]<br />
hash.update(other_hash) {|key, oldval, newval| block}</b><br />Returns a new hash containing the contents of <i>hash</i> and
<i>other_hash</i>, overwriting pairs in <i>hash</i> with duplicate keys with those from <i>other_hash</i>.</td></tr>
<tr><td>40</td><td><b>hash.value?(value)</b><br />Tests whether <i>hash</i> contains the given <i>value</i>.</td></tr>
<tr><td>41</td><td><b>hash.values</b><br />Returns a new array containing all the values of <i>hash</i>.</td></tr>
<tr><td>42</td><td><b>hash.values_at(obj, ...)</b><br />Returns a new array containing the values from <i>hash</i> that
are associated with the given key or keys.</td></tr>
</table>
<hr />
<div class="pre-btn">
<a href="ruby_arrays.htm">Previous Page</a>
</div>
<div class="print-btn">
<a href="../cgi-bin/printpage.html" target="_blank">Print Version</a>
</div>
<div class="pdf-btn">
<a href="pdf/ruby_hashes.pdf" alt="Ruby Hashes" target="_blank">PDF Version</a>
</div>
<div class="nxt-btn">
<a href="ruby_date_time.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
</div>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</div>
</div><!-- middlecol -->
<div id="rightcol">
<!-- AddThis Button BEGIN -->
<div class="addthis">
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook"></a>
<a class="addthis_button_twitter"></a>
<script type="text/javascript">
<!--
 document.write('<a class="addthis_button_google_plusone" g:plusone:count="false"></a>');
//-->
</script>
<a class="addthis_button_linkedin"></a>
<a class="addthis_button_email"></a>
<a class="addthis_button_compact"></a>
</div>
<script type="text/javascript" src="../../s7.addthis.com/js/250/addthis_widget.js#pubid=ra-4f661ec623a400f0"></script>
</div>
<!-- AddThis Button END -->
<div class="localad">
<a rel="nofollow" href="http://www.modernindianbabynames.com/" target="_blank" title="Modern Baby Names">Modern Baby Names</a>
</div>
<div class="localad">
<a rel="nofollow" href="http://www.photofuntoos.com/" target="_blank" title="Online Photo Editing">Online Photo Editing</a>
</div>
<div class="rightgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
</div><!-- rightcol -->
<div style="clear:both;"></div>
</div><!-- wrapper -->
<div id="footer">
<div class="wrapper">
<div id="bottommenu">
<a href="../asp.net/index.htm" target="_top">ASP.NET </a> |
<a href="../jquery/index.htm" target="_top">jQuery </a> |
<a href="../ajax/index.htm" target="_top">AJAX </a> |
<a href="../ant/index.htm" target="_top">ANT</a> |
<a href="../jsp/index.htm" target="_top">JSP </a> |
<a href="../servlets/index.htm" target="_top">Servlets </a> |
<a href="../log4j/index.htm" target="_top">log4j </a> |
<a href="../ibatis/index.htm" target="_top">iBATIS </a> |
<a href="../hibernate/index.htm" target="_top">Hibernate </a> |
<a href="../jdbc/index.htm" target="_top">JDBC </a> |
<a href="../struts_2/index.htm" target="_top">Struts </a> |
<a href="../html5/index.htm" target="_top">HTML5 </a> |
<a href="../sql/index.htm" target="_top">SQL </a> |
<a href="../mysql/index.htm" target="_top">MySQL </a> |
<a href="../cplusplus/index.htm" target="_top">C++ </a> |
<a href="../unix/index.htm" target="_top">UNIX </a>
</div>
<div id="copyright">
<p>Copyright &copy; 2013 by tutorialspoint. All Rights Reserved.</p>
</div>
</div>
</div>
</body>

<!-- Mirrored from www.tutorialspoint.com/ruby/ruby_hashes.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 19:45:35 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>