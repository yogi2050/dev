<!doctype html> 
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--><html lang="en"><!--<![endif]-->

<!-- Mirrored from www.tutorialspoint.com/ruby/ruby_builtin_functions.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 19:46:53 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="utf-8">
<title>Ruby Built-in Functions</title>
<link rel="shortcut icon" href="../favicon.png" type="image/x-icon" />
<meta name="Keywords" content="Ruby, Tutorials, Learning, Beginners, Basics, Scripting Language, Syntax, Classes, , Variables, Comments, Loops, File, I/O, Functions, Objects, TK, Ranges, iterators, arrays, strings, methods, blocks, Exception, Multi-Threading, Hashes, Modules, LDAP, Web Services, Web Programming." />
<meta name="description" content="Ruby Built-in Functions - Learning Ruby in simple and easy steps - A beginner's tutorial containing complete knowledge of Ruby Syntax Syntax, Classes, , Variables, Comments, Loops, File, I/O, Functions, Objects, TK, Ranges, iterators, arrays, strings, methods, blocks, Exception, Multi-Threading, Hashes, Modules, LDAP, Web Services, Web Programming." />
<base  />
<link rel="stylesheet" type="text/css" href="../scripts/style.css" />
<link rel="stylesheet" type="text/css" href="../scripts/prettify.css" />
<script type="text/javascript" src="../scripts/prettify.js"></script>
<style media="screen" type="text/css">
/* Ruby Scheme */
#topmenu a:link {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#topmenu a:visited {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#topmenu a:hover {text-decoration:none;color:#C83932 !important;background-color:transparent;font-weight:bold;}
#header{ 
background:#C83932 !important;
}
#topmenu
{
background-color:#5E0500 !important;
}
#leftcol ul.menu li.heading 
{
background:#C83932 !important;
border:1px solid #964800 !important;
}
#leftcol, #middlecol, #rightcol {min-height:1500px; padding:0px;}
</style>
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
</script>
</head>
<body onload="prettyPrint()">
<div id="header">
<div class="wrapper">
<h1 class="logo"><a href="../index.htm">Tutorials Point - Simply Easy Learning</a></h1>
<div id="search">
<form method="get" id="searchform" name="searchform" action="http://www.google.com/search" target="_blank">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com"/>
<input type="text" name="as_q" id="s" value="Search this site..." onfocus="if (this.value == 'Search this site...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search this site...';}"/>
<input value="FORID:11" name="cof" type="hidden"/>
<input type="hidden" name="ie" value="ISO-8859-1" />
<input class="submit btn" type="image" src="../images/icon-search.png" alt="Go"/>
</form>
</div>
</div>
</div>
<div id="topmenu">
<div class="wrapper">
<div id="left">
<a href="../index.htm" target="_top">HOME </a>
<a href="../java/index.htm" target="_top">JAVA </a>
<a href="../php/index.htm" target="_top">PHP </a>
<a href="../python/index.htm" target="_top">Python </a>
<a href="index.htm" target="_top">Ruby </a>
<a href="../perl/index.htm" target="_top">Perl </a>
<a href="../html/index.htm" target="_top">HTML </a>
<a href="../css/index.htm" target="_top">CSS </a>
<a href="../javascript/index.htm" target="_top">Javascript </a>
<a href="../mysql/index.htm" target="_top">MySQL </a>
<a href="../cplusplus/index.htm" target="_top">C++ </a>
<a href="../unix/index.htm" target="_top">UNIX </a>
<a href="../more.htm" target="_top">MORE...</a>
</div>
<div id="right">
<a href="../references.htm" target="_top">REFERENCES</a> |
<a href="../forums/index.html" target="_top">FORUM</a> |
<a href="../about/index.htm" target="_top">ABOUT</a> |
<a href="../about/contact_us.htm" target="_top">CONTACT</a>
</div>
</div>
</div>
<div class="wrapper">
<div id="leftcol">
<div class="mini-logo">
<img src="../images/ruby-mini-logo.png" alt="Ruby Tutorial" />
</div>
<ul class="menu">
<li class="heading">Ruby Basics</li>
<li><a class="left" target="_top" href="index.htm">Ruby Home</a></li>
<li><a class="left" target="_top" href="ruby_overview.htm">Ruby Overview</a></li>
<li><a class="left" target="_top" href="ruby_environment.htm">Ruby Environment</a></li>
<li><a class="left" target="_top" href="ruby_syntax.htm">Ruby Syntax</a></li>
<li><a class="left" target="_top" href="ruby_classes.htm">Ruby Classes</a></li>
<li><a class="left" target="_top" href="ruby_variables.htm">Ruby Variables</a></li>
<li><a class="left" target="_top" href="ruby_operators.htm">Ruby Operators</a></li>
<li><a class="left" target="_top" href="ruby_comments.htm">Ruby Comments</a></li>
<li><a class="left" target="_top" href="ruby_if_else.htm">Ruby IF...ELSE</a></li>
<li><a class="left" target="_top" href="ruby_loops.htm">Ruby Loops</a></li>
<li><a class="left" target="_top" href="ruby_methods.htm">Ruby Methods</a></li>
<li><a class="left" target="_top" href="ruby_blocks.htm">Ruby Blocks</a></li>
<li><a class="left" target="_top" href="ruby_modules.htm">Ruby Modules</a></li>
<li><a class="left" target="_top" href="ruby_strings.htm">Ruby Strings</a></li>
<li><a class="left" target="_top" href="ruby_arrays.htm">Ruby Arrays</a></li>
<li><a class="left" target="_top" href="ruby_hashes.htm">Ruby Hashes</a></li>
<li><a class="left" target="_top" href="ruby_date_time.htm">Ruby Date &amp; Time</a></li>
<li><a class="left" target="_top" href="ruby_ranges.htm">Ruby Ranges</a></li>
<li><a class="left" target="_top" href="ruby_iterators.htm">Ruby Iterators</a></li>
<li><a class="left" target="_top" href="ruby_input_output.htm">Ruby File I/O</a></li>
<li><a class="left" target="_top" href="ruby_exceptions.htm">Ruby Exceptions</a></li>
</ul>
<ul class="menu">
<li class="heading">Ruby Advanced</li>
<li><a class="left" target="_top" href="ruby_object_oriented.htm">Ruby Object Oriented</a></li>
<li><a class="left" target="_top" href="ruby_regular_expressions.htm">Ruby Regular Expressions</a></li>
<li><a class="left" target="_top" href="ruby_database_access.htm">Ruby Database Access</a></li>
<li><a class="left" target="_top" href="ruby_web_applications.htm">Ruby Web Applications</a></li>
<li><a class="left" target="_top" href="ruby_sending_email.htm">Ruby Sending Email</a></li>
<li><a class="left" target="_top" href="ruby_socket_programming.htm">Ruby Socket Programming</a></li>
<li><a class="left" target="_top" href="ruby_xml_xslt.htm">Ruby/XML, XSLT</a></li>
<li><a class="left" target="_top" href="ruby_web_services.htm">Ruby Web Services</a></li>
<li><a class="left" target="_top" href="ruby_tk_guide.htm">Ruby/Tk Guide</a></li>
<li><a class="left" target="_top" href="ruby_ldap.htm">Ruby/LDAP Tutorial</a></li>
<li><a class="left" target="_top" href="ruby_multithreading.htm">Ruby Multithreading</a></li>
</ul>
<ul class="menu">
<li class="heading">Ruby Useful Resources</li>
<li><a class="left" target="_top" href="ruby_quick_guide.htm">Ruby Quick Guide</a></li>
<li><a class="left" target="_top" href="ruby_builtin_functions.htm"><b>Ruby Built-in Functions</b></a></li>
<li><a class="left" target="_top" href="ruby_predefined_variables.htm">Ruby Predefined Variables</a></li>
<li><a class="left" target="_top" href="ruby_predefined_constants.htm">Ruby Predefined Constants</a></li>
<li><a class="left" target="_top" href="ruby_associated_tools.htm">Ruby Associated Tools</a></li>
<li><a class="left" target="_top" href="ruby_resources.htm">Ruby Useful Resources</a></li>
<li><a class="left" target="_top" href="../ruby-on-rails/index.htm">Ruby on Rails Tutorial</a></li>
</ul>
<ul class="menu">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="../developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="../computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="../computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div><!-- leftcol -->
<div id="middlecol">
<!-- PRINTING STARTS HERE -->
<div class="content">
<h1>Ruby Built-in Functions</h1>
<div class="topgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
<hr />
<div class="pre-btn">
<a href="ruby_quick_guide.htm">Previous Page</a>
</div>
<div class="nxt-btn">
<a href="ruby_predefined_variables.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
<p>Since the <i>Kernel</i> module is included by <i>Object</i> class, its methods are available everywhere in the Ruby
program. They can be called without a receiver (functional form). Therefore, they are often called functions.</p>
<p>A complete list of Built-in Functions is given here for your reference:</p>
<table class="src">
<tr><th style="width:5%">SN</th><th>Methods with Description</th></tr>
<tr><td>1</td><td><b>abort</b><br />Terminates program. If an exception is raised (i.e., $! isn't nil), its error message is displayed.</td></tr>
<tr><td>2</td><td><b>Array( obj)</b><br />Returns obj after converting it to an array using to_ary or to_a.</td></tr>
<tr><td>3</td><td><b>at_exit {...}</b><br />Registers a block for execution when the program exits. Similar to END statement, but END statement registers the block only once.</td></tr>
<tr><td>4</td><td><b>autoload( classname, file)</b><br />Registers a class classname to be loaded from file the first time it's used. classname may be a string or a symbol.</td></tr>
<tr><td>5</td><td><b>binding</b><br />Returns the current variable and method bindings. The <i>Binding</i> object that is returned may be passed to the <i>eval</i> method as its second argument.</td></tr>
<tr><td>6</td><td><b>block_given?</b><br />Returns true if the method was called with a <i>block</i>.</td></tr>
<tr><td>7</td><td><b>callcc {| c|...}</b><br />Passes a <i>Continuation</i> object c to the block and executes the block. <i>callcc</i> can be used for global exit or loop construct.</td></tr>
<tr><td>8</td><td><b>caller([ n])</b><br />Returns the current execution stack in an array of the strings in the form <i>file:line</i>. If n is specified, returns stack entries from nth level on down.</td></tr>
<tr><td>9</td><td><b>catch( tag) {...}</b><br />Catches a nonlocal exit by a throw called during the execution of its block.</td></tr>
<tr><td>10</td><td><b>chomp([ rs=$/])</b><br />Returns the value of variable $_ with the ending newline removed, assigning the result back to $_. The value of the newline string can be specified with rs.</td></tr>
<tr><td>11</td><td><b>chomp!([ rs=$/])</b><br />Removes newline from $_, modifying the string in place.</td></tr>
<tr><td>12</td><td><b>chop</b><br />Returns the value of $_ with its last character (one byte) removed, assigning the result back to $_.</td></tr>
<tr><td>13</td><td><b>chop!</b><br />Removes the last character from $_, modifying the string in place.</td></tr>
<tr><td>14</td><td><b>eval( str[, scope[, file, line]])</b><br />Executes <i>str</i> as Ruby code. The binding in which to perform the evaluation may be specified with <i>scope</i>. The filename and line number of the code to be compiled may be specified using <i>file</i> and line.</td></tr>
<tr><td>15</td><td><b>exec( cmd[, arg...])</b><br />Replaces the current process by running the command <i>cmd</i>. If multiple arguments are specified, the command is executed with no shell expansion.</td></tr>
<tr><td>16</td><td><b>exit([ result=0])</b><br />Exits program, with <i>result</i> as the status code returned.</td></tr>
<tr><td>17</td><td><b>exit!([ result=0])</b><br />Kills the program bypassing exit handling such as <i>ensure</i>, etc.</td></tr>
<tr><td>18</td><td><b>fail(...)</b><br />See raise(...)</td></tr>
<tr><td>19</td><td><b>Float( obj)</b><br />Returns obj after converting it to a float. Numeric objects are converted directly; nil is converted to 0.0; strings are converted considering 0x, 0b radix prefix. The rest are converted using obj.to_f.</td></tr>
<tr><td>20</td><td><b>fork<br />fork {...}</b><br />Creates a child process. <i>nil</i> is returned in the child process and the child process' ID (integer) is returned in the parent process. If a block is specified, it's run in the child process.</td></tr>
<tr><td>21</td><td><b>format( fmt[, arg...])</b><br />See sprintf.</td></tr>
<tr><td>22</td><td><b>gets([ rs=$/])</b><br />Reads the filename specified in the command line or one line from standard input. The record separator string can be specified explicitly with rs.</td></tr>
<tr><td>23</td><td><b>global_variables</b><br />Returns an array of global variable names.</td></tr>
<tr><td>24</td><td><b>gsub( x, y)<br />
gsub( x) {...}</b><br />Replaces all strings matching x in $_ with y. If a block is specified, matched strings are replaced
with the result of the block. The modified result is assigned to $_.</td></tr>
<tr><td>25</td><td><b>gsub!( x, y)<br />
gsub!( x) {...}</b><br />Performs the same substitution as gsub, except the string is changed in place.</td></tr>
<tr><td>26</td><td><b>Integer( obj)</b><br />Returns obj after converting it to an integer. Numeric objects are converted directly; nil is converted to 0; strings are converted considering 0x, 0b radix prefix. The rest are converted using obj.to_i.</td></tr>
<tr><td>27</td><td><b>lambda {| x|...}<br />
proc {| x|...}<br />
lambda<br />
proc</b><br />Converts a block into a <i>Proc</i> object. If no block is specified, the block associated with the calling
method is converted.</td></tr>
<tr><td>28</td><td><b>load( file[, private=false])</b><br />Loads a Ruby program from <i>file</i>. Unlike <i>require</i>, it doesn't load extension libraries. If <i>private</i> is <i>true</i>, the program is loaded into an anonymous module, thus protecting the namespace of the calling program.</td></tr>
<tr><td>29</td><td><b>local_variables</b><br />Returns an array of local variable names.</td></tr>
<tr><td>30</td><td><b>loop {...}</b><br />Repeats a block of code.</td></tr>
<tr><td>31</td><td><b>open( path[, mode="r"])<br />
open( path[, mode="r"]) {| f|...}</b><br />Opens a <i>file</i>. If a block is specified, the block is executed with the opened stream passed as an argument. The file is closed automatically when the block exits. If <i>path</i> begins with a pipe |, the following string is run as a command, and the stream associated with that process is returned.</td></tr>
<tr><td>32</td><td><b>p( obj)</b><br />Displays obj using its inspect method (often used for debugging).</td></tr>
<tr><td>33</td><td><b>print([ arg...])</b><br />Prints arg to <i>$defout</i>. If no arguments are specified, the value of $_ is printed.</td></tr>
<tr><td>34</td><td><b>printf( fmt[, arg...])</b><br />Formats arg according to <i>fmt</i> using <i>sprintf</i> and prints the result to <i>$defout</i>. For formatting specifications, see sprintf for detail.</td></tr>
<tr><td>35</td><td><b>proc {| x|...}<br />
proc</b><br />See lamda.</td></tr>
<tr><td>36</td><td><b>putc( c)</b><br />Prints one character to the default output (<i>$defout</i>).</td></tr>
<tr><td>37</td><td><b>puts([ str])</b><br />Prints string to the default output (<i>$defout</i>). If the string doesn't end with a newline, a newline is appended to the string.</td></tr>
<tr><td>38</td><td><b>raise(...)<br />
fail(...)</b><br />Raises an exception. Assumes <i>RuntimeError</i> if no exception class is specified. Calling <i>raise</i>
without arguments in a <i>rescue</i> clause re-raises the exception. Doing so outside a rescue clause raises a message-less <i>RuntimeError</i>. <b>fail</b> is an obsolete name for raise.</td></tr>
<tr><td>39</td><td><b>rand([ max=0])</b><br />Generates a pseudo-random number greater than or equal to 0 and less than max. If max is either not specified or is set to 0, a random number is returned as a floating-point number greater than or equal
to 0 and less than 1. <i>srand</i> may be used to initialize pseudo-random stream.</td></tr>
<tr><td>40</td><td><b>readline([ rs=$/])</b><br />Equivalent to gets except it raises an EOFError exception on reading EOF.</td></tr>
<tr><td>41</td><td><b>readlines([ rs=$/])</b><br />Returns an array of strings holding either the filenames specified as command-line arguments or the contents of standard input.</td></tr>
<tr><td>42</td><td><b>require( lib)</b><br />Loads the library (including extension libraries) <i>lib</i> when it's first called. require will not load the same library more than once. If no extension is specified in <i>lib</i>, require tries to add .rb,.so, etc., to it.</td></tr>
<tr><td>43</td><td><b>scan( re)<br />
scan( re) {|x|...}</b><br />Equivalent to $_.scan.</td></tr>
<tr><td>44</td><td><b>select( reads[, writes=nil[, excepts=nil[, timeout=nil]]])</b><br />Checks for changes in the status of three types of IO objects input, output, and exceptions which are passed as arrays of IO objects. <i>nil</i> is passed for arguments that don't need checking. A three-element array containing arrays of the IO objects for which there were changes in status is returned. <i>nil</i> is returned on timeout.</td></tr>
<tr><td>45</td><td><b>set_trace_func( proc)</b><br />Sets a handler for tracing. <i>proc</i> may be a string or <i>proc</i> object. <i>set_trace_func</i> is used by the debugger and profiler.</td></tr>
<tr><td>46</td><td><b>sleep([ sec])</b><br />Suspends program execution for sec seconds. If sec isn't specified, the program is suspended forever.</td></tr>
<tr><td>47</td><td><b>split([ sep[, max]])</b><br />Equivalent to $_.split.</td></tr>
<tr><td>48</td><td><b>sprintf( fmt[, arg...])<br />
format( fmt[, arg...])</b><br />Returns a string in which arg is formatted according to fmt. Formatting specifications are
essentially the same as those for sprintf in the C programming language. Conversion specifiers (% followed by conversion field specifier) in <i>fmt</i> are replaced by formatted string of corresponding argument. A list of conversion filed is given below in next section.</td></tr>
<tr><td>49</td><td><b>srand([ seed])</b><br />Initializes an array of random numbers. If <i>seed</i> isn't specified, initialization is performed using the time and other system information for the seed.</td></tr>
<tr><td>50</td><td><b>String( obj)</b><br />Returns obj after converting it to a string using obj.to_s.</td></tr>
<tr><td>51</td><td><b>syscall( sys[, arg...])</b><br />Calls an operating system call function specified by number <i>sys</i>. The numbers and meaning of <i>sys</i> is system-dependant.</td></tr>
<tr><td>52</td><td><b>system( cmd[, arg...])</b><br />Executes <i>cmd</i> as a call to the command line. If multiple arguments are specified, the command is run directly with no shell expansion. Returns <i>true</i> if the return status is 0 (success).</td></tr>
<tr><td>53</td><td><b>sub( x, y)<br />
sub( x) {...}</b><br />Replaces the first string matching x in $_ with y. If a block is specified, matched strings are replaced
with the result of the block. The modified result is assigned to $_.</td></tr>
<tr><td>54</td><td><b>sub!( x, y)<br />
sub!( x) {...}</b><br />Performs the same replacement as sub, except the string is changed in place.</td></tr>
<tr><td>55</td><td><b>test( test, f1[, f2])</b><br />Performs various file tests specified by the character <i>test</i>. In order to improve readability, you should use File class methods (for example File::readable?) rather than this function. A list of arguments is given below in next section.</td></tr>
<tr><td>56</td><td><b>throw( tag[, value=nil])</b><br />Jumps to the catch function waiting with the symbol or string <i>tag</i>. value is the return value to be used by <i>catch</i>.</td></tr>
<tr><td>57</td><td><b>trace_var( var, cmd)<br />
trace_var( var) {...}</b><br />Sets tracing for a global variable. The variable name is specified as a symbol. <i>cmd</i> may be a string or Proc object.</td></tr>
<tr><td>58</td><td><b>trap( sig, cmd)<br />
trap( sig) {...}</b><br />Sets a signal handler. sig may be a string (like SIGUSR1) or an integer. SIG may be omitted from
signal name. Signal handler for EXIT signal or signal number 0 is invoked just before process termination.</td></tr>
<tr><td>59</td><td><b>untrace_var( var[, cmd])</b><br />Removes tracing for a global variable. If <i>cmd</i> is specified, only that command is removed.</td></tr>
</table>
<h2>Functions for Numbers: </h2>
<p>Here is list of Built-in Functions related to number. They should be used as follows:</p>
<pre class="prettyprint">
#!/usr/bin/ruby

num = 12.40
a.floor    ==> 12
num + 10   ==> 22.40
num.integer? ==> true  as num is an integer.
</pre>
<p>Assuming, <b>n</b> is a number:</p>
<table class="src">
<tr><th style="width:5%">SN</th><th>Methods with Description</th></tr>
<tr><td>1</td><td><b>n + num<br />
n - num<br />
n * num<br />
n / num</b><br />Performs arithmetic operations: addition, subtraction, multiplication, and division.</td></tr>
<tr><td>1</td><td><b>n % num</b><br />Returns the modulus of n.</td></tr>
<tr><td>2</td><td><b>n ** num</b><br />Exponentiation.</td></tr>
<tr><td>3</td><td><b>n.abs</b><br />Returns the absolute value of n.</td></tr>
<tr><td>4</td><td><b>n.ceil</b><br />Returns the smallest integer greater than or equal to n.</td></tr>
<tr><td>5</td><td><b>n.coerce( num)</b><br />Returns an array containing num and n both possibly converted to a type that allows them to be operated on mutually. Used in automatic type conversion in numeric operators.</td></tr>
<tr><td>6</td><td><b>n.divmod( num)</b><br />Returns an array containing the quotient and modulus from dividing n by num.</td></tr>
<tr><td>7</td><td><b>n.floor</b><br />Returns the largest integer less than or equal to n.</td></tr>
<tr><td>8</td><td><b>n.integer?</b><br />Returns true if n is an integer.</td></tr>
<tr><td>9</td><td><b>n.modulo( num)</b><br />Returns the modulus obtained by dividing n by num and rounding the quotient with <i>floor</i></td></tr>
<tr><td>10</td><td><b>n.nonzero?</b><br />Returns n if it isn't zero, otherwise nil.</td></tr>
<tr><td>11</td><td><b>n.remainder( num)</b><br />Returns the remainder obtained by dividing <b>n</b> by <b>num</b> and removing decimals from the quotient. The <b>result</b> and <b>n</b> always have same sign.</td></tr>
<tr><td>12</td><td><b>n.round</b><br />Returns n rounded to the nearest integer.</td></tr>
<tr><td>13</td><td><b>n.truncate</b><br />Returns n as an integer with decimals removed.</td></tr>
<tr><td>14</td><td><b>n.zero?</b><br />Returns zero if n is 0.</td></tr>
<tr><td>15</td><td><b>n &amp; num<br />
n | num<br />
n ^ num</b><br />Bitwise operations: AND, OR, XOR, and inversion.</td></tr>
<tr><td>16</td><td><b>n &lt;&lt; num<br />
n &gt;&gt; num</b><br />Bitwise left shift and right shift.</td></tr>
<tr><td>17</td><td><b>n[num]</b><br />Returns the value of the <b>num</b>th bit from the least significant bit, which is n[0].</td></tr>
<tr><td>18</td><td><b>n.chr</b><br />Returns a string containing the character for the character code <b>n</b></td></tr>
<tr><td>19</td><td><b>n.next<br />
n.succ</b><br />Returns the next integer following n. Equivalent to n + 1.</td></tr>
<tr><td>20</td><td><b>n.size</b><br />Returns the number of bytes in the machine representation of <b>n</b></td></tr>
<tr><td>21</td><td><b>n.step( upto, step) {|n| ...}</b><br />Iterates the block from <b>n</b> to <b>upto</b>, incrementing by <b>step</b> each time.</td></tr>
<tr><td>22</td><td><b>n.times {|n| ...}</b><br />Iterates the block <b>n</b> times.</td></tr>
<tr><td>23</td><td><b>n.to_f</b><br />Converts <b>n</b> into a floating point number. Float conversion may lose precision information.</td></tr>
<tr><td>24</td><td><b>n.to_int</b><br />Returns <b>n</b> after converting into interger number.</td></tr>
</table>
<h2>Functions for Float</h2>
<p>Here is a list of Ruby Built-in function specially for float numbers. Assuming we have a float number <b>f</b>:</p>
<table class="src">
<tr><th style="width:5%">SN</th><th>Methods with Description</th></tr>
<tr><td>1</td><td><b>Float::induced_from(num)</b><br />Returns the result of converting <i>num</i> to a floating-point number.</td></tr>
<tr><td>2</td><td><b>f.finite?</b><br />Returns true if f isn't infinite and f.nan is false.</td></tr>
<tr><td>3</td><td><b>f.infinite?</b><br />Returns 1 if f is positive infinity, -1 if negative infinity, or nil if anything else.</td></tr>
<tr><td>4</td><td><b>f.nan?</b><br />Returns true if f isn't a valid IEEE floating point number.</td></tr>
</table>
<h2>Functions for Math</h2>
<p>Here is a list of Ruby Built-in math functions:</p>
<table class="src">
<tr><th style="width:5%">SN</th><th>Methods with Description</th></tr>
<tr><td>1</td><td><b>atan2( x, y)</b><br />Calculates the arc tangent.</td></tr>
<tr><td>2</td><td><b>cos( x)</b><br />Calculates the cosine of x.</td></tr>
<tr><td>3</td><td><b>exp( x)</b><br />Calculates an exponential function (e raised to the power of x).</td></tr>
<tr><td>4</td><td><b>frexp( x)</b><br />Returns a two-element array containing the nominalized fraction and exponent of x.</td></tr>
<tr><td>5</td><td><b>ldexp( x, exp)</b><br />Returns the value of x times 2 to the power of exp.</td></tr>
<tr><td>6</td><td><b>log( x)</b><br />Calculates the natural logarithm of x.</td></tr>
<tr><td>7</td><td><b>log10( x)</b><br />Calculates the base 10 logarithm of x.</td></tr>
<tr><td>8</td><td><b>sin( x)</b><br />Calculates the sine of x.</td></tr>
<tr><td>9</td><td><b>sqrt( x)</b><br />Returns the square root of x. x must be positive.</td></tr>
<tr><td>10</td><td><b>tan( x)</b><br />Calculates the tangent of x.</td></tr>
</table>
<h2>Conversion Field Specifier:</h2>
<p>The function <i>sprintf( fmt[, arg...]) and format( fmt[, arg...])</i> returns a string in which arg is formatted according to fmt. Formatting specifications are essentially the same as those for sprintf in the C programming language. Conversion specifiers (% followed by conversion field specifier) in <i>fmt</i> are replaced by formatted string of corresponding argument.</p>
<p>The following conversion specifiers, are supported by Ruby's format:</p>
<table class="src">
<tr><th style="width:10%">Specifier</th><th>Description</th></tr>
<tr><td>b</td><td>Binary integer</td></tr>
<tr><td>c</td><td>Single character</td></tr>
<tr><td>d,i</td><td>Decimal integer</td></tr>
<tr><td>e</td><td>Exponential notation (e.g., 2.44e6)</td></tr>
<tr><td>E</td><td>Exponential notation (e.g., 2.44E6)</td></tr>
<tr><td>f</td><td>Floating-point number (e.g., 2.44)</td></tr>
<tr><td>g</td><td>use %e if exponent is less than -4, %f otherwise</td></tr>
<tr><td>G</td><td>use %E if exponent is less than -4, %f otherwise</td></tr>
<tr><td>o</td><td>Octal integer</td></tr>
<tr><td>s</td><td>String, or any object converted using to_s</td></tr>
<tr><td>u</td><td>Unsigned decimal integer</td></tr>
<tr><td>x</td><td>Hexadecimal integer (e.g., 39ff)</td></tr>
<tr><td>X</td><td>Hexadecimal integer (e.g., 39FF)</td></tr>
</table>
<p>Following is the usage example:</p>
<pre class="prettyprint">
#!/usr/bin/ruby

sprintf("%s\n", "abc")   # =&gt; "abc\n" (simplest form)
sprintf("d=%d", 42)      # =&gt; "d=42" (decimal output)
sprintf("%04x", 255)     # =&gt; "00ff" (width 4, zero padded)
sprintf("%8s", "hello")  # =&gt; " hell" (space padded)
sprintf("%.2s", "hello") # =&gt; "he" (trimmed by precision)
</pre>
<h2>Test Function Arguments:</h2>
<p>The function <i>test( test, f1[, f2])</i> performs one of the following file tests specified by the character <i>test</i>. In order to improve readability, you should use File class methods (for example File::readable?) rather than this function. Here are the file tests with one argument:</p>
<table class="src">
<tr><th style="width:10%">Argument</th><th>Description</th></tr>
<tr><td>?r</td><td>Is f1 readable by the effective uid of caller?</td></tr>
<tr><td>?w</td><td>Is f1 writable by the effective uid of caller?</td></tr>
<tr><td>?x</td><td>Is f1 executable by the effective uid of caller?</td></tr>
<tr><td>?o</td><td>Is f1 owned by the effective uid of caller?</td></tr>
<tr><td>?R</td><td>Is f1 readable by the real uid of caller?</td></tr>
<tr><td>?W</td><td>Is f1 writable by the real uid of caller?</td></tr>
<tr><td>?X</td><td>Is f1 executable by the real uid of caller?</td></tr>
<tr><td>?O</td><td>Is f1 owned by the real uid of caller?</td></tr>
<tr><td>?e</td><td>Does f1 exist?</td></tr>
<tr><td>?z</td><td>Does f1 have zero length?</td></tr>
<tr><td>?s</td><td>File size of f1(nil if 0)</td></tr>
<tr><td>?f</td><td>Is f1 a regular file?</td></tr>
<tr><td>?d</td><td>Is f1 a directory?</td></tr>
<tr><td>?l</td><td>Is f1 a symbolic link?</td></tr>
<tr><td>?p</td><td>Is f1 a named pipe (FIFO)?</td></tr>
<tr><td>?S</td><td>Is f1 a socket?</td></tr>
<tr><td>?b</td><td>Is f1 a block device?</td></tr>
<tr><td>?c</td><td>Is f1 a character device?</td></tr>
<tr><td>?u</td><td>Does f1 have the setuid bit set?</td></tr>
<tr><td>?g</td><td>Does f1 have the setgid bit set?</td></tr>
<tr><td>?k</td><td>Does f1 have the sticky bit set?</td></tr>
<tr><td>?M</td><td>Last modification time for f1.</td></tr>
<tr><td>?A</td><td>Last access time for f1.</td></tr>
<tr><td>?C</td><td>Last inode change time for f1.</td></tr>
</table>
<p>File tests with two arguments are as follows:</p>
<table class="src">
<tr><th style="width:10%">Argument</th><th>Description</th></tr>
<tr><td>?=</td><td>Are modification times of f1 and f2 equal?</td></tr>
<tr><td>?&gt;</td><td>Is the modification time of f1 more recent than f2 ?</td></tr>
<tr><td>?&lt;</td><td>Is the modification time of f1 older than f2 ?</td></tr>
<tr><td>?-</td><td>Is f1 a hard link to f2 ?</td></tr>
</table>
<p>Following is the usage example. Assuming test.rb exist with read, write and execute permissions:</p>
<pre class="prettyprint">
#!/usr/bin/ruby

test(?r, "test.rb" )   # =&gt; true
test(?w, "test.rb" )   # =&gt; true
test(?x, "test.rb" )   # =&gt; true
</pre>
<hr />
<div class="pre-btn">
<a href="ruby_quick_guide.htm">Previous Page</a>
</div>
<div class="print-btn">
<a href="../cgi-bin/printpage.html" target="_blank">Print Version</a>
</div>
<div class="pdf-btn">
<a href="pdf/ruby_builtin_functions.pdf" alt="Ruby Built-in Functions" target="_blank">PDF Version</a>
</div>
<div class="nxt-btn">
<a href="ruby_predefined_variables.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
</div>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</div>
</div><!-- middlecol -->
<div id="rightcol">
<!-- AddThis Button BEGIN -->
<div class="addthis">
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook"></a>
<a class="addthis_button_twitter"></a>
<script type="text/javascript">
<!--
 document.write('<a class="addthis_button_google_plusone" g:plusone:count="false"></a>');
//-->
</script>
<a class="addthis_button_linkedin"></a>
<a class="addthis_button_email"></a>
<a class="addthis_button_compact"></a>
</div>
<script type="text/javascript" src="../../s7.addthis.com/js/250/addthis_widget.js#pubid=ra-4f661ec623a400f0"></script>
</div>
<!-- AddThis Button END -->
<div class="localad">
<a rel="nofollow" href="http://www.modernindianbabynames.com/" target="_blank" title="Modern Baby Names">Modern Baby Names</a>
</div>
<div class="localad">
<a rel="nofollow" href="http://www.photofuntoos.com/" target="_blank" title="Online Photo Editing">Online Photo Editing</a>
</div>
<div class="rightgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
</div><!-- rightcol -->
<div style="clear:both;"></div>
</div><!-- wrapper -->
<div id="footer">
<div class="wrapper">
<div id="bottommenu">
<a href="../asp.net/index.htm" target="_top">ASP.NET </a> |
<a href="../jquery/index.htm" target="_top">jQuery </a> |
<a href="../ajax/index.htm" target="_top">AJAX </a> |
<a href="../ant/index.htm" target="_top">ANT</a> |
<a href="../jsp/index.htm" target="_top">JSP </a> |
<a href="../servlets/index.htm" target="_top">Servlets </a> |
<a href="../log4j/index.htm" target="_top">log4j </a> |
<a href="../ibatis/index.htm" target="_top">iBATIS </a> |
<a href="../hibernate/index.htm" target="_top">Hibernate </a> |
<a href="../jdbc/index.htm" target="_top">JDBC </a> |
<a href="../struts_2/index.htm" target="_top">Struts </a> |
<a href="../html5/index.htm" target="_top">HTML5 </a> |
<a href="../sql/index.htm" target="_top">SQL </a> |
<a href="../mysql/index.htm" target="_top">MySQL </a> |
<a href="../cplusplus/index.htm" target="_top">C++ </a> |
<a href="../unix/index.htm" target="_top">UNIX </a>
</div>
<div id="copyright">
<p>Copyright &copy; 2013 by tutorialspoint. All Rights Reserved.</p>
</div>
</div>
</div>
</body>

<!-- Mirrored from www.tutorialspoint.com/ruby/ruby_builtin_functions.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 19:46:53 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>