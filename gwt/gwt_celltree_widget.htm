<!doctype html> 
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--><html lang="en"><!--<![endif]-->

<!-- Mirrored from www.tutorialspoint.com/gwt/gwt_celltree_widget.htm by HTTrack Website Copier/3.x [XR&CO'2010], Mon, 15 Apr 2013 05:08:47 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="utf-8">
<title>GWT CellTree Widget</title>
<link rel="shortcut icon" href="../favicon.png" type="image/x-icon" />
<meta name="description" content="GWT CellTree Widget - Learn Google Web Toolkit (GWT) programming in simple and easy steps starting with GWT Environment Setup, Web Application Creation, Deploy and Debug Application, Style with CSS, Component Model, Basic, Form and Complex Widgets,  Layout Panels, Event Handling,  Custom Widgets, RPC Communication, JUnit Integration, Internationalization, History Class, Bookmark Support and Logging Framework." />
<meta name="keywords" content="GWT, Environment, Setup, Web, Application, Deploy, Debug, Application, Style, CSS, Component, Model, Basic, Form, Complex, Widgets, Layout, Panels, Event, Handling, Custom, RPC, Communication, JUnit Integration, Internationalization, History, Class, Bookmark, Support, Logging, Framework." />
<base  />
<link rel="stylesheet" type="text/css" href="../scripts/style.css" />
<link rel="stylesheet" type="text/css" href="../scripts/prettify.css" />
<script type="text/javascript" src="../scripts/prettify.js"></script>
<style media="screen" type="text/css">
/* GWT Scheme */
#topmenu a:link {text-decoration:none;color:#000 !important;background-color:transparent;font-weight:bold;}
#topmenu a:visited {text-decoration:none;color:#000 !important;background-color:transparent;font-weight:bold;}
#topmenu a:hover {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#header{ 
   background:#30ab75 !important;
}
#topmenu
{
   background-color:#dbaa02 !important;
}
#leftcol ul.menu li.heading 
{
   background:#30ab75 !important;
   border:1px solid #dbaa02 !important;
}
#leftcol, #middlecol, #rightcol {min-height:1250px; padding:0px;}
</style>
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
   _uacct = "UA-232293-6";
   urchinTracker();
</script>
</head>
<body onload="prettyPrint()">
<div id="header">
<div class="wrapper">
<h1 class="logo"><a href="../index-2.html">Tutorials Point Simply Easy Learning</a></h1>
<div id="search">
<form method="get" id="searchform" name="searchform" action="http://www.google.com/search" target="_blank">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com"/>
<input type="text" name="as_q" id="s" value="Search this site..." onfocus="if (this.value == 'Search this site...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search this site...';}"/>
<input value="FORID:11" name="cof" type="hidden"/>
<input type="hidden" name="ie" value="ISO-8859-1" />
<input class="submit btn" type="image" src="../images/icon-search.png" alt="Go"/>
</form>
</div>
</div>
</div>
<div id="topmenu">
<div class="wrapper">
<div id="left">
<a href="../index-2.html" target="_top">HOME </a>
<a href="../java/index.html" target="_top">JAVA </a>
<a href="../php/index.html" target="_top">PHP </a>
<a href="../python/index.html" target="_top">Python </a>
<a href="../ruby/index.html" target="_top">Ruby </a>
<a href="../perl/index.html" target="_top">Perl </a>
<a href="../html/index.html" target="_top">HTML </a>
<a href="../css/index.html" target="_top">CSS </a>
<a href="../javascript/index.html" target="_top">Javascript </a>
<a href="../mysql/index.html" target="_top">MySQL </a>
<a href="../cplusplus/index.html" target="_top">C++ </a>
<a href="../unix/index.html" target="_top">UNIX </a>
<a href="../more.html" target="_top">MORE...</a>
</div>
<div id="right">
<a href="../references.html" target="_top">REFERENCES</a> |
<a href="../forums/index.html" target="_top">FORUM</a> |
<a href="../about/index.html" target="_top">ABOUT</a> |
<a href="../about/contact_us.html" target="_top">CONTACT</a>
</div>
</div>
</div>
<div class="wrapper">
<div id="leftcol">
<div class="mini-logo">
<img src="../images/gwt-mini.png" alt="GWT tutorial" />
</div>
<ul class="menu">
<li class="heading">GWT Tutorial</li>
<li><a target="_top" href="index.html">GWT - Home</a></li>
<li><a target="_top" href="gwt_overview.html">GWT - Overview</a></li>
<li><a target="_top" href="gwt_environment_setup.html">GWT - Environment</a></li>
<li><a target="_top" href="gwt_applications.html">GWT - Applications</a></li>
<li><a target="_top" href="gwt_create_application.html">GWT - Create Application</a></li>
<li><a target="_top" href="gwt_deploy_application.html">GWT - Deploy Application</a></li>
<li><a target="_top" href="gwt_style_with_css.html">GWT - Style with CSS</a></li>
<li><a target="_top" href="gwt_basic_widgets.html">GWT - Basic Widgets</a></li>
<li><a target="_top" href="gwt_form_widgets.html">GWT - Form Widgets</a></li>
<li><a target="_top" href="gwt_complex_widgets.html"><b>GWT - Complex widgets</b></a></li>
<li><a target="_top" href="gwt_layout_panels.html">GWT - Layout Panels</a></li>
<li><a target="_top" href="gwt_event_handling.html">GWT - Event Handling</a></li>
<li><a target="_top" href="gwt_custom_widget.html">GWT - Custom Widgets</a></li>
<li><a target="_top" href="gwt_uibinder.html">GWT -  UIBinder</a></li>
<li><a target="_top" href="gwt_rpc_communication.html">GWT - RPC Communication</a></li>
<li><a target="_top" href="gwt_junit_integration.html">GWT - JUnit Integration</a></li>
<li><a target="_top" href="gwt_debug_application.html">GWT - Debug Application</a></li>
<li><a target="_top" href="gwt_internationalization.html">GWT - Internationalization</a></li>
<li><a target="_top" href="gwt_history_class.html">GWT -  History Class</a></li>
<li><a target="_top" href="gwt_bookmark_support.html">GWT - Bookmark Support</a></li>
<li><a target="_top" href="gwt_logging_framework.html">GWT -  Logging Framework</a></li>
</ul>
<ul class="menu">
<li class="heading">GWT  Useful Resources</li>
<li><a target="_top" href="gwt_quick_guide.html">GWT - Quick Guide</a></li>
<li><a target="_top" href="gwt_useful_resources.html">GWT - Useful Resources</a></li>
</ul>
<ul class="menu">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="../developers_best_practices/index.html">Developer's Best Practices</a></li>
<li><a target="_top" href="../computer_glossary.html">Computer Glossary</a></li>
<li><a target="_top" href="../computer_whoiswho.html">Who is Who</a></li>
</ul>
</div><!-- leftcol -->
<div id="middlecol">
<!-- PRINTING STARTS HERE -->
<div class="content">
<h1>GWT - CellTree Widget</h1>
<div class="topgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
<hr />
<div class="pre-btn">
<a href="gwt_complex_widgets.html">Previous Page</a>
</div>
<div class="nxt-btn">
<a href="gwt_complex_widgets.html">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
<h2>Introduction</h2>
<p>The <b>CellTree</b> widget represents a view of a tree. </p>
<h2>Class declaration</h2>
<p>Following is the declaration for <b>com.google.gwt.user.cellview.client.CellTree</b> class:</p>
<pre class="prettyprint">
public class CellTree
   extends AbstractCellTree
      implements HasAnimation, Focusable
</pre>
<h2>Class constructors</h2>
<table class="src">
<tr><th style="width:5%">S.N.</th><th>Constructor &amp; Description</th></tr>
<tr><td>1</td><td><b>CellTree(TreeViewModel viewModel, T rootValue)   </b><br> Construct a new CellTree.</td></tr>
<tr><td>2</td><td><b>CellTree(TreeViewModel viewModel, T rootValue, CellTree.Resources resources)  </b><br>Construct a new CellTree.</td></tr>
</table>
<h2>Class methods</h2>
<table class="src">
<tr><th style="width:5%;">S.N.</th><th>Function name &amp; Description</th></tr>
<tr><td>1</td><td><b>protected char getAccessKey()</b><br />Get the access key.</td></tr>
<tr><td>2</td><td><b>CellTree.NodeAnimation getAnimation() </b><br />Get the animation used to open and close nodes in this tree if animations are enabled.</td></tr>
<tr><td>3</td><td><b>int getDefaultNodeSize() </b><br />Get the default maximum number of children to display under each tree node.</td></tr>
<tr><td>4</td><td><b>TreeNode getRootTreeNode() </b><br />Get the root TreeNode.</td></tr>
<tr><td>5</td><td><b>int getTabIndex() </b><br />Gets the widget's position in the tab index.</td></tr>
<tr><td>6</td><td><b>boolean isAnimationEnabled()</b><br />Returns true if animations are enabled, false if not.</td></tr>
<tr><td>7</td><td><b>protected void onBlur() </b><br />Called when the keyboard selected node loses focus.</td></tr>
<tr><td>8</td><td><b>void onBrowserEvent(Event event) </b><br />Fired whenever a browser event is received.</td></tr>
<tr><td>9</td><td><b>protected void onFocus()</b><br />Called when the keyboard selected node gains focus.</td></tr>
<tr><td>10</td><td><b>void setAccessKey(char key) </b><br />Sets the widget's 'access key'.</td></tr>
<tr><td>11</td><td><b>void setAnimation(CellTree.NodeAnimation animation) </b><br />Set the animation used to open and close nodes in this tree.</td></tr>
<tr><td>12</td><td><b>void setAnimationEnabled(boolean enable) </b><br />Enable or disable animations.</td></tr>
<tr><td>13</td><td><b>void setDefaultNodeSize(int defaultNodeSize) </b><br />Set the default number of children to display beneath each child node.</td></tr>
<tr><td>14</td><td><b>void setFocus(boolean focused) </b><br />Explicitly focus/unfocus this widget.</td></tr>
<tr><td>15</td><td><b>void setTabIndex(int index) </b><br />Sets the widget's position in the tab index.</td></tr>
</table>
<h2>Methods inherited</h2>
<p>This class inherits methods from the following classes:</p>
<ul class="list">
<li><p>com.google.gwt.user.client.ui.UIObject</p></li>
<li><p>com.google.gwt.user.client.ui.Widget</p></li>
<li><p>com.google.gwt.user.client.ui.Composite</p></li>
<li><p>com.google.gwt.user.cellview.client.AbstractCellTree</p></li>
<li><p>java.lang.Object</p></li>
</ul>
<h2>CellTree Widget Example</h2>
<p>This example will take you through simple steps to show usage of a CellTree Widget in GWT. Follow the following steps to update the GWT application we created in <i>GWT -  Create Application</i> chapter:</p>
<table class="src">
<tr><th class="fivepct">Step</th><th>Description</th></tr>
<tr><td>1</td><td>Create a project with a name <i>HelloWorld</i> under a package <i>com.tutorialspoint</i> as explained in the <i>GWT - Create Application</i> chapter.</td></tr>
<tr><td>2</td><td>Modify <i>HelloWorld.gwt.xml</i>, <i>HelloWorld.css</i>, <i>HelloWorld.html</i> and <i>HelloWorld.java</i> as explained below. Keep rest of the files unchanged.</td></tr>
<tr><td>3</td><td>Compile and run the application to verify the result of the implemented logic.</td></tr>
</table>
<p>Following is the content of the modified module descriptor <b>src/com.tutorialspoint/HelloWorld.gwt.xml</b>.</p>
<pre class="prettyprint">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;module rename-to='helloworld'&gt;
  &lt;!-- Inherit the core Web Toolkit stuff.                        --&gt;
  &lt;inherits name='com.google.gwt.user.User'/&gt;

  &lt;!-- Inherit the default GWT style sheet.                       --&gt;
  &lt;inherits name='com.google.gwt.user.theme.clean.Clean'/&gt;

  &lt;!-- Specify the app entry point class.                         --&gt;
  &lt;entry-point class='com.tutorialspoint.client.HelloWorld'/&gt;

  &lt;!-- Specify the paths for translatable code                    --&gt;
  &lt;source path='client'/&gt;
  &lt;source path='shared'/&gt;

&lt;/module&gt;
</pre>
<p>Following is the content of the modified Style Sheet file <b>war/HelloWorld.css</b>.</p>
<pre class="prettyprint">
body{
   text-align: center;
   font-family: verdana, sans-serif;
}
h1{
   font-size: 2em;
   font-weight: bold;
   color: #777777;
   margin: 40px 0px 70px;
   text-align: center;
}
</pre>
<p>Following is the content of the modified HTML host file <b>war/HelloWorld.html</b>.</p>
<pre class="prettyprint">
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Hello World&lt;/title&gt;
   &lt;link rel="stylesheet" href="HelloWorld.css"/&gt;
   &lt;script language="javascript" src="helloworld/helloworld.nocache.js"&gt;
   &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;h1&gt;CellTree Widget Demonstration&lt;/h1&gt;
&lt;div id="gwtContainer"&gt;&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</pre>
<p>Let us have following content of Java file <b>src/com.tutorialspoint/HelloWorld.java</b> which will demonstrate use of CellTree widget.</p>
<pre class="prettyprint">
package com.tutorialspoint.client;

import java.util.ArrayList;
import java.util.List;

import com.google.gwt.cell.client.AbstractCell;
import com.google.gwt.cell.client.Cell;
import com.google.gwt.cell.client.TextCell;
import com.google.gwt.core.client.EntryPoint;
import com.google.gwt.core.client.GWT;
import com.google.gwt.safehtml.shared.SafeHtmlBuilder;
import com.google.gwt.user.cellview.client.CellTree;
import com.google.gwt.user.cellview.client.
HasKeyboardSelectionPolicy.KeyboardSelectionPolicy;
import com.google.gwt.user.cellview.client.TreeNode;
import com.google.gwt.user.client.ui.RootPanel;
import com.google.gwt.user.client.ui.VerticalPanel;
import com.google.gwt.view.client.ListDataProvider;
import com.google.gwt.view.client.SingleSelectionModel;
import com.google.gwt.view.client.TreeViewModel;

public class HelloWorld implements EntryPoint {

  /**
  * A list of songs.
  */
  private static class Playlist {
     private final String name;
     private final List&lt;String&gt; songs = new ArrayList&lt;String&gt;();

     public Playlist(String name) {
       this.name = name;
     }

      /**
      * Add a song to the playlist.
      * 
      * @param name the name of the song
      */
      public void addSong(String name) {
         songs.add(name);
      }

      public String getName() {
         return name;
      }

      /**
      * Return the list of songs in the playlist.
      */
      public List&lt;String&gt; getSongs() {
         return songs;
      }
   }

   /**
   * A composer of classical music.
   */
   private static class Composer {
      private final String name;
      private final List&lt;Playlist&gt; playlists = new ArrayList&lt;Playlist&gt;();

      public Composer(String name) {
         this.name = name;
      }

      /**
      * Add a playlist to the composer.
      * 
      * @param playlist the playlist to add
      */
      public Playlist addPlaylist(Playlist playlist) {   
         playlists.add(playlist);
         return playlist;
      }

      public String getName() {
         return name;
      }

      /**
      * Return the rockin' playlist for this composer.
      */
      public List&lt;Playlist&gt; getPlaylists() {
         return playlists;
      }
   }

   /**
   * The model that defines the nodes in the tree.
   */
   private static class CustomTreeModel implements TreeViewModel {

   private final List&lt;Composer&gt; composers;

   /**
   * This selection model is shared across all leaf nodes. 
   * A selection model can also be shared across all nodes 
   * in the tree, or each set of child nodes can have 
   * its own instance. This gives you flexibility to 
   * determine how nodes are selected.
   */
   private final SingleSelectionModel&lt;String&gt; selectionModel 
   = new SingleSelectionModel&lt;String&gt;();

      public CustomTreeModel() {
         // Create a database of information.
         composers = new ArrayList&lt;Composer&gt;();

         // Add compositions by Beethoven.
         {
            Composer beethoven = new Composer("Beethoven");
            composers.add(beethoven);
   
            Playlist concertos = beethoven.addPlaylist(
            new Playlist("Concertos"));
            concertos.addSong("No. 1 - C");
            concertos.addSong("No. 2 - B-Flat Major");
            concertos.addSong("No. 3 - C Minor");
            concertos.addSong("No. 4 - G Major");
            concertos.addSong("No. 5 - E-Flat Major");

            Playlist quartets = beethoven.addPlaylist(
            new Playlist("Quartets"));
            quartets.addSong("Six String Quartets");
            quartets.addSong("Three String Quartets");
            quartets.addSong("Grosse Fugue for String Quartets");

            Playlist sonatas = beethoven.addPlaylist(
            new Playlist("Sonatas"));
            sonatas.addSong("Sonata in A Minor");
            sonatas.addSong("Sonata in F Major");

            Playlist symphonies = beethoven.addPlaylist(
            new Playlist("Symphonies"));
            symphonies.addSong("No. 2 - D Major");
            symphonies.addSong("No. 2 - D Major");
            symphonies.addSong("No. 3 - E-Flat Major");
            symphonies.addSong("No. 4 - B-Flat Major");
            symphonies.addSong("No. 5 - C Minor");
            symphonies.addSong("No. 6 - F Major");
            symphonies.addSong("No. 7 - A Major");
            symphonies.addSong("No. 8 - F Major");
            symphonies.addSong("No. 9 - D Minor");
         }

         // Add compositions by Brahms.
         {
            Composer brahms = new Composer("Brahms");
            composers.add(brahms);
            Playlist concertos = brahms.addPlaylist(
            new Playlist("Concertos"));
            concertos.addSong("Violin Concerto");
            concertos.addSong("Double Concerto - A Minor");
            concertos.addSong("Piano Concerto No. 1 - D Minor");
            concertos.addSong("Piano Concerto No. 2 - B-Flat Major");

            Playlist quartets = brahms.addPlaylist(
            new Playlist("Quartets"));
            quartets.addSong("Piano Quartet No. 1 - G Minor");
            quartets.addSong("Piano Quartet No. 2 - A Major");
            quartets.addSong("Piano Quartet No. 3 - C Minor");
            quartets.addSong("String Quartet No. 3 - B-Flat Minor");

            Playlist sonatas = brahms.addPlaylist(
            new Playlist("Sonatas"));
            sonatas.addSong("Two Sonatas for Clarinet - F Minor");
            sonatas.addSong("Two Sonatas for Clarinet - E-Flat Major");

            Playlist symphonies = brahms.addPlaylist(
            new Playlist("Symphonies"));
            symphonies.addSong("No. 1 - C Minor");
            symphonies.addSong("No. 2 - D Minor");
            symphonies.addSong("No. 3 - F Major");
            symphonies.addSong("No. 4 - E Minor");
         }

         // Add compositions by Mozart.
         {
            Composer mozart = new Composer("Mozart");
            composers.add(mozart);
            Playlist concertos = mozart.addPlaylist(
            new Playlist("Concertos"));
            concertos.addSong("Piano Concerto No. 12");
            concertos.addSong("Piano Concerto No. 17");
            concertos.addSong("Clarinet Concerto");
            concertos.addSong("Violin Concerto No. 5");
            concertos.addSong("Violin Concerto No. 4");
         }
      }

      /**
      * Get the {@link NodeInfo} that provides the children of the 
      * specified value.
      */
      public &lt;T&gt; NodeInfo&lt;?&gt; getNodeInfo(T value) {
         if (value == null) {
            // LEVEL 0.
            // We passed null as the root value. Return the composers.

            // Create a data provider that contains the list of composers.
            ListDataProvider&lt;Composer&gt; dataProvider 
            = new ListDataProvider&lt;HelloWorld.Composer&gt;(
            composers);

            // Create a cell to display a composer.
            Cell&lt;HelloWorld.Composer&gt; cell 
            = new AbstractCell&lt;HelloWorld.Composer&gt;() {
               @Override
               public void render(Composer value, Object key,
               SafeHtmlBuilder sb) {
                  if (value != null) {
                	 sb.appendHtmlConstant("&nbsp;&nbsp;&nbsp;&nbsp;"); 
                     sb.appendEscaped(value.getName());
                  }				
               }
            };

            // Return a node info that pairs the data provider and the cell.
            return new DefaultNodeInfo&lt;Composer&gt;(dataProvider, cell);
         } else if (value instanceof Composer) {
            // LEVEL 1.
            // We want the children of the composer. Return the playlists.
            ListDataProvider&lt;HelloWorld.Playlist&gt; dataProvider
            = new ListDataProvider&lt;HelloWorld.Playlist&gt;(
            ((Composer) value).getPlaylists());
            Cell&lt;HelloWorld.Playlist&gt; cell = 
            new AbstractCell&lt;HelloWorld.Playlist&gt;() {
               @Override
               public void render(Playlist value, Object key,
               SafeHtmlBuilder sb) {
                  if (value != null) {        
                	 sb.appendHtmlConstant("&nbsp;&nbsp;&nbsp;&nbsp;"); 
                     sb.appendEscaped(value.getName());
                  }
               }
            };
            return new DefaultNodeInfo&lt;Playlist&gt;(dataProvider, cell);
        } else if (value instanceof Playlist) {
            // LEVEL 2 - LEAF.
            // We want the children of the playlist. Return the songs.
            ListDataProvider&lt;String&gt; dataProvider 
            = new ListDataProvider&lt;String&gt;(
            ((Playlist) value).getSongs());

            // Use the shared selection model.
            return new DefaultNodeInfo&lt;String&gt;(dataProvider, new TextCell(),
            selectionModel, null);
         }

         return null;
      }

      /**
      * Check if the specified value represents a leaf node. 
      * Leaf nodes cannot be opened.
      */
      public boolean isLeaf(Object value) {
      // The leaf nodes are the songs, which are Strings.
      if (value instanceof String) {
         return true;
      }
      return false;
      }
   }

   public void onModuleLoad() {
      // Create a model for the tree.
      TreeViewModel model = new CustomTreeModel();
      //Get CellTree style using its BasicResources	   
      //CellTree.Resources res = GWT.create(CellTree.BasicResources.class);
      /*
      * Create the tree using the model. We use &lt;code&gt;null&lt;/code&gt; 
      * as the default value of the root node. The default value will 
      * be passed to CustomTreeModel#getNodeInfo();
      */
      CellTree tree = new CellTree(model, null);
   
      tree.setKeyboardSelectionPolicy(KeyboardSelectionPolicy.ENABLED);

      // Open the first playlist by default.
      TreeNode rootNode = tree.getRootTreeNode();
      TreeNode firstPlaylist = rootNode.setChildOpen(0, true);
      firstPlaylist.setChildOpen(0, true);

      VerticalPanel panel = new VerticalPanel();
	  panel.setBorderWidth(1);	    
	  panel.setWidth("300");
	  panel.add(tree);
	    

	 // Add the widgets to the root panel.
	 RootPanel.get().add(panel);
   }
}

</pre>
<p>Once you are ready with all the changes done, let us compile and run the application in development mode as we did in <a target="_top" href="gwt_create_application.html">GWT - Create Application</a> chapter. If everything is fine with your application, this will produce following result:</p>
<img src="images/gwt_widget_celltree.html" alt="GWT CellTree Widget"/>
<hr />
<div class="pre-btn">
<a href="gwt_complex_widgets.html">Previous Page</a>
</div>
<div class="print-btn">
<a href="../cgi-bin/printpage.html" target="_blank">Print Version</a>
</div>
<div class="pdf-btn">
<a href="pdf/gwt_celltree_widget.html" alt="GWT CellTree Widget" target="_blank">PDF Version</a>
</div>
<div class="nxt-btn">
<a href="gwt_complex_widgets.html">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
</div>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</div>
</div><!-- middlecol -->
<div id="rightcol">
<!-- AddThis Button BEGIN -->
<div class="addthis">
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook"></a>
<a class="addthis_button_twitter"></a>
<script type="text/javascript">
<!--
 document.write('<a class="addthis_button_google_plusone" g:plusone:count="false"></a>');
//-->
</script>
<a class="addthis_button_linkedin"></a>
<a class="addthis_button_email"></a>
<a class="addthis_button_compact"></a>
</div>
<script type="text/javascript" src="../../s7.addthis.com/js/250/addthis_widget.js#pubid=ra-4f661ec623a400f0"></script>
</div>
<!-- AddThis Button END -->
<div class="localad">
<a rel="nofollow" href="http://www.modernindianbabynames.com/" target="_blank" title="Modern Baby Names">Modern Baby Names</a>
</div>
<div class="localad">
<a rel="nofollow" href="http://www.photofuntoos.com/" target="_blank" title="Online Photo Editing">Online Photo Editing</a>
</div>
<div class="rightgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
</div><!-- rightcol -->
<div style="clear:both;"></div>
</div><!-- wrapper -->
<div id="footer">
<div class="wrapper">
<div id="bottommenu">
<a href="../asp.net/index.html" target="_top">ASP.NET </a> |
<a href="../jquery/index.html" target="_top">jQuery </a> |
<a href="../ajax/index.html" target="_top">AJAX </a> |
<a href="../ant/index.html" target="_top">ANT</a> |
<a href="../jsp/index.html" target="_top">JSP </a> |
<a href="../servlets/index.html" target="_top">Servlets </a> |
<a href="../log4j/index.html" target="_top">log4j </a> |
<a href="../ibatis/index.html" target="_top">iBATIS </a> |
<a href="../hibernate/index.html" target="_top">Hibernate </a> |
<a href="../jdbc/index.html" target="_top">JDBC </a> |
<a href="../struts_2/index.html" target="_top">Struts </a> |
<a href="../html5/index.html" target="_top">HTML5 </a> |
<a href="../sql/index.html" target="_top">SQL </a> |
<a href="../mysql/index.html" target="_top">MySQL </a> |
<a href="../cplusplus/index.html" target="_top">C++ </a> |
<a href="../unix/index.html" target="_top">UNIX </a>
</div>
<div id="copyright">
<p>Copyright &copy; 2013 by tutorialspoint. All Rights Reserved.</p>
</div>
</div>
</div>
</body>

<!-- Mirrored from www.tutorialspoint.com/gwt/gwt_celltree_widget.htm by HTTrack Website Copier/3.x [XR&CO'2010], Mon, 15 Apr 2013 05:08:47 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>
