<!doctype html> 
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--><html lang="en"><!--<![endif]-->

<!-- Mirrored from www.tutorialspoint.com/cplusplus/cpp_basic_syntax.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 19:59:40 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="utf-8">
<title>C++ Basic Syntax</title>
<link rel="shortcut icon" href="../favicon.png" type="image/x-icon" />
<meta name="Keywords" content="C++, Tutorials, Learning, Beginners, Basics, Object Oriented Language, Methods, Overriding, Inheritance, Polymorphism, Interfaces, STL, Iterators, Algorithms, Exception Handling, Overloading,Templates, Namespaces, Signal Handling" />
<meta name="description" content="C++ Basic Syntax - Learning C++ in simple and easy steps : A beginner's tutorial containing complete knowledge of C++ Syntax Object Oriented Language, Methods, Overriding, Inheritance, Polymorphism, Interfaces, STL, Iterators, Algorithms, Exception Handling, Overloading,Templates, Namespaces and Signal Handling" />
<base  />
<link rel="stylesheet" type="text/css" href="../scripts/style.css" />
<link rel="stylesheet" type="text/css" href="../scripts/prettify.css" />
<script type="text/javascript" src="../scripts/prettify.js"></script>
<style media="screen" type="text/css">
/* C++ Scheme */
#topmenu a:link {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#topmenu a:visited {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#topmenu a:hover {text-decoration:none;color:#d6a432 !important;background-color:transparent;font-weight:bold;}
#header{ 
background:#d6a432 !important;
}
#topmenu
{
background-color:#3b2b1e !important;
}
#leftcol ul.menu li.heading 
{
background:#d6a432 !important;
border:1px solid #3b2b1e !important;
}
#leftcol, #middlecol, #rightcol {min-height:1600px; padding:0px;}
</style>
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
</script>
</head>
<body onload="prettyPrint()">
<div id="header">
<div class="wrapper">
<h1 class="logo"><a href="../index.htm">Tutorials Point - Simply Easy Learning</a></h1>
<div id="search">
<form method="get" id="searchform" name="searchform" action="http://www.google.com/search" target="_blank">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com"/>
<input type="text" name="as_q" id="s" value="Search this site..." onfocus="if (this.value == 'Search this site...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search this site...';}"/>
<input value="FORID:11" name="cof" type="hidden"/>
<input type="hidden" name="ie" value="ISO-8859-1" />
<input class="submit btn" type="image" src="../images/icon-search.png" alt="Go"/>
</form>
</div>
</div>
</div>
<div id="topmenu">
<div class="wrapper">
<div id="left">
<a href="../index.htm" target="_top">HOME </a>
<a href="../java/index.htm" target="_top">JAVA </a>
<a href="../php/index.htm" target="_top">PHP </a>
<a href="../python/index.htm" target="_top">Python </a>
<a href="../ruby/index.htm" target="_top">Ruby </a>
<a href="../perl/index.htm" target="_top">Perl </a>
<a href="../html/index.htm" target="_top">HTML </a>
<a href="../css/index.htm" target="_top">CSS </a>
<a href="../javascript/index.htm" target="_top">Javascript </a>
<a href="../mysql/index.htm" target="_top">MySQL </a>
<a href="index.htm" target="_top">C++ </a>
<a href="../unix/index.htm" target="_top">UNIX </a>
<a href="../more.htm" target="_top">MORE...</a>
</div>
<div id="right">
<a href="../references.htm" target="_top">REFERENCES</a> |
<a href="../forums/index.html" target="_top">FORUM</a> |
<a href="../about/index.htm" target="_top">ABOUT</a> |
<a href="../about/contact_us.htm" target="_top">CONTACT</a>
</div>
</div>
</div>
<div class="wrapper">
<div id="leftcol">
<div class="mini-logo">
<img src="../images/cpp-mini-logo.png" alt="C++ Tutorial" />
</div>
<ul class="menu">
<li class="heading">C++ Basics</li>
<li><a target="_top" href="index.htm">C++ Home</a></li>
<li><a target="_top" href="cpp_overview.htm">C++ Overview</a></li>
<li><a target="_top" href="cpp_environment_setup.htm">C++ Environment Setup</a></li>
<li><a target="_top" href="cpp_basic_syntax.htm"><b>C++ Basic Syntax</b></a></li>
<li><a target="_top" href="cpp_comments.htm">C++ Comments</a></li>
<li><a target="_top" href="cpp_data_types.htm">C++ Data Types</a></li>
<li><a target="_top" href="cpp_variable_types.htm">C++  Variable Types</a></li>
<li><a target="_top" href="cpp_variable_scope.htm">C++  Variable Scope</a></li>
<li><a target="_top" href="cpp_constants_literals.htm">C++ Constants/Literals</a></li>
<li><a target="_top" href="cpp_modifier_types.htm">C++ Modifier Types</a></li>
<li><a target="_top" href="cpp_storage_classes.htm">C++ Storage Classes</a></li>
<li><a target="_top" href="cpp_operators.htm">C++ Operators</a></li>
<li><a target="_top" href="cpp_loop_types.htm">C++ Loop Types</a></li>
<li><a target="_top" href="cpp_decision_making.htm">C++ Decision Making </a></li>
<li><a target="_top" href="cpp_functions.htm">C++ Functions</a></li>
<li><a target="_top" href="cpp_numbers.htm">C++ Numbers</a></li>
<li><a target="_top" href="cpp_arrays.htm">C++ Arrays</a></li>
<li><a target="_top" href="cpp_strings.htm">C++ Strings</a></li>
<li><a target="_top" href="cpp_pointers.htm">C++ Pointers</a></li>
<li><a target="_top" href="cpp_references.htm">C++ References</a></li>
<li><a target="_top" href="cpp_date_time.htm">C++ Date &amp; Time</a></li>
<li><a target="_top" href="cpp_basic_input_output.htm">C++ Basic Input/Output</a></li>
<li><a target="_top" href="cpp_data_structures.htm">C++ Data Structures</a></li>
</ul>
<ul class="menu">
<li class="heading">C++ Object Oriented</li>
<li><a class="left" target="_top" href="cpp_classes_objects.htm">C++ Classes &amp; Objects</a></li>
<li><a class="left" target="_top" href="cpp_inheritance.htm">C++ Inheritance</a></li>
<li><a class="left" target="_top" href="cpp_overloading.htm">C++ Overloading</a></li>
<li><a class="left" target="_top" href="cpp_polymorphism.htm">C++ Polymorphism</a></li>
<li><a class="left" target="_top" href="cpp_data_abstraction.htm">C++ Abstraction</a></li>
<li><a class="left" target="_top" href="cpp_data_encapsulation.htm">C++ Encapsulation</a></li>
<li><a class="left" target="_top" href="cpp_interfaces.htm">C++ Interfaces</a></li>
</ul>
<ul class="menu">
<li class="heading">C++ Advanced</li>
<li><a class="left" target="_top" href="cpp_files_streams.htm">C++ Files and Streams</a></li>
<li><a class="left" target="_top" href="cpp_exceptions_handling.htm">C++ Exception Handling</a></li>
<li><a class="left" target="_top" href="cpp_dynamic_memory.htm">C++ Dynamic Memory</a></li>
<li><a class="left" target="_top" href="cpp_namespaces.htm">C++ Namespaces</a></li>
<li><a class="left" target="_top" href="cpp_templates.htm">C++ Templates</a></li>
<li><a class="left" target="_top" href="cpp_preprocessor.htm">C++ Preprocessor</a></li>
<li><a class="left" target="_top" href="cpp_signal_handling.htm">C++ Signal Handling</a></li>
<li><a class="left" target="_top" href="cpp_multithreading.htm">C++ Multithreading</a></li>
<li><a class="left" target="_top" href="cpp_web_programming.htm">C++ Web Programming</a></li>
</ul>
<ul class="menu">
<li class="heading">C++ Useful Resources</li>
<li><a class="left" target="_top" href="cpp_quick_guide.htm">C++ Quick Guide</a></li>
<li><a class="left" target="_top" href="cpp_stl_tutorial.htm">C++ STL Tutorial</a></li>
<li><a class="left" target="_top" href="cpp_standard_library.htm">C++ Standard Library</a></li>
<li><a class="left" target="_top" href="cpp_useful_resources.htm">C++ Useful Resources</a></li>
</ul>
<ul class="menu">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="../developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="../computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="../computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div><!-- leftcol -->
<div id="middlecol">
<!-- PRINTING STARTS HERE -->
<div class="content">
<h1>C++ Basic Syntax</h1>
<div class="topgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
<hr />
<div class="pre-btn">
<a href="cpp_environment_setup.htm">Previous Page</a>
</div>
<div class="nxt-btn">
<a href="cpp_comments.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
<p>When we consider a C++ program it can be defined as a collection of objects that communicate via invoking each others methods. Let us now briefly look into what do class, object, methods and instant variables mean.</p>
<ul class="list">
<li><p><b>Object -</b> Objects have states and behaviors. Example: A dog has states-color, name, breed as well as behaviors -wagging, barking, eating. An object is an instance of a class. </p></li>
<li><p><b>Class -</b> A class can be defined as a template/ blue print that describe the behaviors/states that object of its type support.</p></li>
<li><p><b>Methods -</b> A method is basically a behavior. A class can contain many methods. It is in methods where the logics are written, data is manipulated and all the actions are executed.</p></li>
<li><p><b>Instant Variables -</b> Each object has its unique set of instant variables. An object's state is created by the values assigned to these instant variables.</p></li>
</ul>
<h2>C++ Program Structure:</h2>
<p>Let us look at a simple code that would print the words <i>Hello World</i>.</p>
<pre class="prettyprint">
#include &lt;iostream&gt;
using namespace std;

// main() is where program execution begins.

int main()
{
   cout &lt;&lt; "Hello World"; // prints Hello World
   return 0;
}
</pre>
<p>Let us look various parts of the above program:</p>
<ul class="list">
<li><p>The C++ language defines several headers, which contain information that is either necessary or useful to your program. For this program, the header <b>&lt;iostream&gt;</b> is needed.</p></li>
<li><p>The line <b>using namespace std;</b> tells the compiler to use the std namespace. Namespaces are a relatively recent addition to C++.</p></li>
<li><p>The next line <b>// main() is where program execution begins.</b> is a single-line comment available in C++. Single-line comments begin with // and stop at the end of the line.</p></li>
<li><p>The line <b>int main()</b> is the main function where program execution begins.</p></li>
<li><p>The next line <b>cout &lt;&lt; "This is my first C++ program.";</b> causes the message "This is my first C++ program" to be displayed on the screen.</p></li>
<li><p>The next line <b>return 0;</b> terminates main( )function and causes it to return the value 0 to the calling process.</p></li>
</ul>
<h2>Compile &amp; Execute C++ Program:</h2>
<p>Lets look at how to save the file, compile and run the program. Please follow the steps given below:</p>
<ul class="list">
<li><p>Open a text editor and add the code as above.</p></li>
<li><p>Save the file as :  hello.cpp</p></li>
<li><p>Open a command prompt and go to the directory where you saved the file.</p></li>
<li><p>Type 'g++ hello.cpp ' and press enter to compile your code. If there are no errors in your code the command prompt will take you to the next line and would generate a.out executable file.</p></li>
<li><p>Now type ' a.out' to run your program.</p></li>	
<li><p>You will be able to see ' Hello World ' printed on the window.</p></li>
</ul>
<pre class="prettyprint">
$ g++ hello.cpp
$ ./a.out
Hello World
</pre>
<p>Make sure that g++ is in your path and that you are running it in the directory containing file hello.cpp.</p>
<p>You can compile C/C++ programs using makefile. For more detail you can check <a href="../makefile/index.htm" target="_blank">Makefile Tutorial</a>.</p>
<h2>Semicolons &amp; Blocks in C++:</h2>
<p>In C++, the semicolon is a statement terminator. That is, each individual statement must be ended with a semicolon. It indicates the end of one logical entity.</p>
<p>For example, following are three different statements:</p>
<pre class="prettyprint">
x = y;
y = y+1;
add(x, y);
</pre>
<p>A block is a set of logically connected statements that are surrounded by opening and closing braces. For example:</p>
<pre class="prettyprint">
{
   cout &lt;&lt; "Hello World"; // prints Hello World
   return 0;
}
</pre>
<p>C++ does not recognize the end of the line as a terminator. For this reason, it does not matter where on a line you put a statement. For example:</p>
<pre class="prettyprint">
x = y;
y = y+1;
add(x, y);
</pre>
<p>is the same as</p>
<pre class="prettyprint">
x = y; y = y+1; add(x, y);
</pre>
<h2>C++ Identifiers:</h2>
<p>A C++ identifier is a name used to identify a variable, function, class, module, or any other user-defined item. An identifier starts with a letter A to Z or a to z or an underscore (_) followed by zero or more letters, underscores, and digits (0 to 9).</p>
<p>C++ does not allow punctuation characters such as @, $, and % within identifiers. C++ is a case sensitive programming language.  Thus <b>Manpower</b> and <b>manpower</b> are two different identifiers in C++.</p>
<p>Here are some examples of acceptable identifiers:</p>
<pre class="prettyprint">
mohd       zara    abc   move_name  a_123
myname50   _temp   j     a23b9      retVal
</pre>
<h2>C++ Keywords:</h2>
<p>The following list shows the reserved words in C++. These reserved words may not be used as constant or variable or any other identifier names.</p>
<table class="src">
<tr><td>asm</td><td>else</td><td>new</td><td>this</td></tr>
<tr><td>auto</td><td>enum</td><td>operator</td><td>throw</td></tr>
<tr><td>bool</td><td>explicit</td><td>private</td><td>true</td></tr>
<tr><td>break</td><td>export</td><td>protected</td><td>try</td></tr>
<tr><td>case</td><td>extern</td><td>public</td><td>typedef</td></tr>
<tr><td>catch</td><td>false</td><td>register</td><td>typeid</td></tr>
<tr><td>char</td><td>float</td><td>reinterpret_cast</td><td>typename</td></tr>
<tr><td>class</td><td>for</td><td>return</td><td>union</td></tr>
<tr><td>const</td><td>friend</td><td>short</td><td>unsigned</td></tr>
<tr><td>const_cast</td><td>goto</td><td>signed</td><td>using</td></tr>
<tr><td>continue</td><td>if</td><td>sizeof</td><td>virtual</td></tr>
<tr><td>default</td><td>inline</td><td>static</td><td>void</td></tr>
<tr><td>delete</td><td>int</td><td>static_cast</td><td>volatile</td></tr>
<tr><td>do</td><td>long</td><td>struct</td><td>wchar_t</td></tr>
<tr><td>double</td><td>mutable</td><td>switch</td><td>while</td></tr>
<tr><td>dynamic_cast</td><td>namespace</td><td>template</td><td>&nbsp;</td></tr>
</table>
<h2>Trigraphs:</h2>
<p>A few characters have an alternative representation, called a trigraph sequence. A trigraph is a three-character sequence that represents a single character and the sequence always starts with two question marks.</p>
<p>Trigraphs are expanded anywhere they appear, including within string literals and character literals, in comments, and in preprocessor directives.</p>
<p>Following are most frequently used trigraph sequences:</p>
<table class="src">
<tr><th>Trigraph</th><th>Replacement</th></tr>
<tr><td>??=</td><td>#</td></tr>
<tr><td>??/</td><td>\</td></tr>
<tr><td>??'</td><td>^</td></tr>
<tr><td>??(</td><td>[</td></tr>
<tr><td>??)</td><td>]</td></tr>
<tr><td>??!</td><td>|</td></tr>
<tr><td>??&lt;</td><td>{</td></tr>
<tr><td>??&gt;</td><td>}</td></tr>
<tr><td>??-</td><td>~</td></tr>
</table>
<p>All the compilers do not support trigraphs and they are not advised to be used because of their confusing nature.</p>
<h2>Whitespace in C++:</h2>
<p>A line containing only whitespace, possibly with a comment, is known as a blank line, and C++ compiler totally ignores it.</p>
<p>Whitespace is the term used in C++ to describe blanks, tabs, newline characters and comments. Whitespace separates one part of a statement from another and enables the compiler to identify where one element in a statement, such as int, ends and the next element begins. Therefore, in the statement,</p>
<pre class="prettyprint">
int age;
</pre>
<p>There must be at least one whitespace character (usually a space) between int and age for the compiler to be able to distinguish them. On the other hand, in the statement</p>
<pre class="prettyprint">
fruit = apples + oranges;   // Get the total fruit
</pre>
<p>No whitespace characters are necessary between fruit and =, or between = and apples, although you are free to include some if you wish for readability purpose.</p>
<br />
<hr />
<div class="pre-btn">
<a href="cpp_environment_setup.htm">Previous Page</a>
</div>
<div class="print-btn">
<a href="../cgi-bin/printpage.html" target="_blank">Print Version</a>
</div>
<div class="pdf-btn">
<a href="pdf/cpp_basic_syntax.pdf" alt="C++ Basic Syntax" target="_blank">PDF Version</a>
</div>
<div class="nxt-btn">
<a href="cpp_comments.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
</div>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</div>
</div><!-- middlecol -->
<div id="rightcol">
<!-- AddThis Button BEGIN -->
<div class="addthis">
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook"></a>
<a class="addthis_button_twitter"></a>
<script type="text/javascript">
<!--
 document.write('<a class="addthis_button_google_plusone" g:plusone:count="false"></a>');
//-->
</script>
<a class="addthis_button_linkedin"></a>
<a class="addthis_button_email"></a>
<a class="addthis_button_compact"></a>
</div>
<script type="text/javascript" src="../../s7.addthis.com/js/250/addthis_widget.js#pubid=ra-4f661ec623a400f0"></script>
</div>
<!-- AddThis Button END -->
<div class="localad">
<a rel="nofollow" href="http://www.modernindianbabynames.com/" target="_blank" title="Modern Baby Names">Modern Baby Names</a>
</div>
<div class="localad">
<a rel="nofollow" href="http://www.photofuntoos.com/" target="_blank" title="Online Photo Editing">Online Photo Editing</a>
</div>
<div class="rightgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
</div><!-- rightcol -->
<div style="clear:both;"></div>
</div><!-- wrapper -->
<div id="footer">
<div class="wrapper">
<div id="bottommenu">
<a href="../asp.net/index.htm" target="_top">ASP.NET </a> |
<a href="../jquery/index.htm" target="_top">jQuery </a> |
<a href="../ajax/index.htm" target="_top">AJAX </a> |
<a href="../ant/index.htm" target="_top">ANT</a> |
<a href="../jsp/index.htm" target="_top">JSP </a> |
<a href="../servlets/index.htm" target="_top">Servlets </a> |
<a href="../log4j/index.htm" target="_top">log4j </a> |
<a href="../ibatis/index.htm" target="_top">iBATIS </a> |
<a href="../hibernate/index.htm" target="_top">Hibernate </a> |
<a href="../jdbc/index.htm" target="_top">JDBC </a> |
<a href="../struts_2/index.htm" target="_top">Struts </a> |
<a href="../html5/index.htm" target="_top">HTML5 </a> |
<a href="../sql/index.htm" target="_top">SQL </a> |
<a href="../mysql/index.htm" target="_top">MySQL </a> |
<a href="index.htm" target="_top">C++ </a> |
<a href="../unix/index.htm" target="_top">UNIX </a>
</div>
<div id="copyright">
<p>Copyright &copy; 2013 by tutorialspoint. All Rights Reserved.</p>
</div>
</div>
</div>
</body>

<!-- Mirrored from www.tutorialspoint.com/cplusplus/cpp_basic_syntax.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 19:59:47 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>