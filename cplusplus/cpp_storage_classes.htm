<!doctype html> 
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--><html lang="en"><!--<![endif]-->

<!-- Mirrored from www.tutorialspoint.com/cplusplus/cpp_storage_classes.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 20:00:15 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="utf-8">
<title>Storage Classes in C++</title>
<link rel="shortcut icon" href="../favicon.png" type="image/x-icon" />
<meta name="Keywords" content="C++, Tutorials, Learning, Beginners, Basics, Object Oriented Language, Methods, Overriding, Inheritance, Polymorphism, Interfaces, STL, Iterators, Algorithms, Exception Handling, Overloading,Templates, Namespaces, Signal Handling" />
<meta name="description" content="Storage Classes in C++ - Learning C++ in simple and easy steps : A beginner's tutorial containing complete knowledge of C++ Syntax Object Oriented Language, Methods, Overriding, Inheritance, Polymorphism, Interfaces, STL, Iterators, Algorithms, Exception Handling, Overloading,Templates, Namespaces and Signal Handling" />
<base  />
<link rel="stylesheet" type="text/css" href="../scripts/style.css" />
<link rel="stylesheet" type="text/css" href="../scripts/prettify.css" />
<script type="text/javascript" src="../scripts/prettify.js"></script>
<style media="screen" type="text/css">
/* C++ Scheme */
#topmenu a:link {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#topmenu a:visited {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#topmenu a:hover {text-decoration:none;color:#d6a432 !important;background-color:transparent;font-weight:bold;}
#header{ 
background:#d6a432 !important;
}
#topmenu
{
background-color:#3b2b1e !important;
}
#leftcol ul.menu li.heading 
{
background:#d6a432 !important;
border:1px solid #3b2b1e !important;
}
#leftcol, #middlecol, #rightcol {min-height:1600px; padding:0px;}
</style>
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
</script>
</head>
<body onload="prettyPrint()">
<div id="header">
<div class="wrapper">
<h1 class="logo"><a href="../index.htm">Tutorials Point - Simply Easy Learning</a></h1>
<div id="search">
<form method="get" id="searchform" name="searchform" action="http://www.google.com/search" target="_blank">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com"/>
<input type="text" name="as_q" id="s" value="Search this site..." onfocus="if (this.value == 'Search this site...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search this site...';}"/>
<input value="FORID:11" name="cof" type="hidden"/>
<input type="hidden" name="ie" value="ISO-8859-1" />
<input class="submit btn" type="image" src="../images/icon-search.png" alt="Go"/>
</form>
</div>
</div>
</div>
<div id="topmenu">
<div class="wrapper">
<div id="left">
<a href="../index.htm" target="_top">HOME </a>
<a href="../java/index.htm" target="_top">JAVA </a>
<a href="../php/index.htm" target="_top">PHP </a>
<a href="../python/index.htm" target="_top">Python </a>
<a href="../ruby/index.htm" target="_top">Ruby </a>
<a href="../perl/index.htm" target="_top">Perl </a>
<a href="../html/index.htm" target="_top">HTML </a>
<a href="../css/index.htm" target="_top">CSS </a>
<a href="../javascript/index.htm" target="_top">Javascript </a>
<a href="../mysql/index.htm" target="_top">MySQL </a>
<a href="index.htm" target="_top">C++ </a>
<a href="../unix/index.htm" target="_top">UNIX </a>
<a href="../more.htm" target="_top">MORE...</a>
</div>
<div id="right">
<a href="../references.htm" target="_top">REFERENCES</a> |
<a href="../forums/index.html" target="_top">FORUM</a> |
<a href="../about/index.htm" target="_top">ABOUT</a> |
<a href="../about/contact_us.htm" target="_top">CONTACT</a>
</div>
</div>
</div>
<div class="wrapper">
<div id="leftcol">
<div class="mini-logo">
<img src="../images/cpp-mini-logo.png" alt="C++ Tutorial" />
</div>
<ul class="menu">
<li class="heading">C++ Basics</li>
<li><a target="_top" href="index.htm">C++ Home</a></li>
<li><a target="_top" href="cpp_overview.htm">C++ Overview</a></li>
<li><a target="_top" href="cpp_environment_setup.htm">C++ Environment Setup</a></li>
<li><a target="_top" href="cpp_basic_syntax.htm">C++ Basic Syntax</a></li>
<li><a target="_top" href="cpp_comments.htm">C++ Comments</a></li>
<li><a target="_top" href="cpp_data_types.htm">C++ Data Types</a></li>
<li><a target="_top" href="cpp_variable_types.htm">C++  Variable Types</a></li>
<li><a target="_top" href="cpp_variable_scope.htm">C++  Variable Scope</a></li>
<li><a target="_top" href="cpp_constants_literals.htm">C++ Constants/Literals</a></li>
<li><a target="_top" href="cpp_modifier_types.htm">C++ Modifier Types</a></li>
<li><a target="_top" href="cpp_storage_classes.htm"><b>C++ Storage Classes</b></a></li>
<li><a target="_top" href="cpp_operators.htm">C++ Operators</a></li>
<li><a target="_top" href="cpp_loop_types.htm">C++ Loop Types</a></li>
<li><a target="_top" href="cpp_decision_making.htm">C++ Decision Making </a></li>
<li><a target="_top" href="cpp_functions.htm">C++ Functions</a></li>
<li><a target="_top" href="cpp_numbers.htm">C++ Numbers</a></li>
<li><a target="_top" href="cpp_arrays.htm">C++ Arrays</a></li>
<li><a target="_top" href="cpp_strings.htm">C++ Strings</a></li>
<li><a target="_top" href="cpp_pointers.htm">C++ Pointers</a></li>
<li><a target="_top" href="cpp_references.htm">C++ References</a></li>
<li><a target="_top" href="cpp_date_time.htm">C++ Date &amp; Time</a></li>
<li><a target="_top" href="cpp_basic_input_output.htm">C++ Basic Input/Output</a></li>
<li><a target="_top" href="cpp_data_structures.htm">C++ Data Structures</a></li>
</ul>
<ul class="menu">
<li class="heading">C++ Object Oriented</li>
<li><a class="left" target="_top" href="cpp_classes_objects.htm">C++ Classes &amp; Objects</a></li>
<li><a class="left" target="_top" href="cpp_inheritance.htm">C++ Inheritance</a></li>
<li><a class="left" target="_top" href="cpp_overloading.htm">C++ Overloading</a></li>
<li><a class="left" target="_top" href="cpp_polymorphism.htm">C++ Polymorphism</a></li>
<li><a class="left" target="_top" href="cpp_data_abstraction.htm">C++ Abstraction</a></li>
<li><a class="left" target="_top" href="cpp_data_encapsulation.htm">C++ Encapsulation</a></li>
<li><a class="left" target="_top" href="cpp_interfaces.htm">C++ Interfaces</a></li>
</ul>
<ul class="menu">
<li class="heading">C++ Advanced</li>
<li><a class="left" target="_top" href="cpp_files_streams.htm">C++ Files and Streams</a></li>
<li><a class="left" target="_top" href="cpp_exceptions_handling.htm">C++ Exception Handling</a></li>
<li><a class="left" target="_top" href="cpp_dynamic_memory.htm">C++ Dynamic Memory</a></li>
<li><a class="left" target="_top" href="cpp_namespaces.htm">C++ Namespaces</a></li>
<li><a class="left" target="_top" href="cpp_templates.htm">C++ Templates</a></li>
<li><a class="left" target="_top" href="cpp_preprocessor.htm">C++ Preprocessor</a></li>
<li><a class="left" target="_top" href="cpp_signal_handling.htm">C++ Signal Handling</a></li>
<li><a class="left" target="_top" href="cpp_multithreading.htm">C++ Multithreading</a></li>
<li><a class="left" target="_top" href="cpp_web_programming.htm">C++ Web Programming</a></li>
</ul>
<ul class="menu">
<li class="heading">C++ Useful Resources</li>
<li><a class="left" target="_top" href="cpp_quick_guide.htm">C++ Quick Guide</a></li>
<li><a class="left" target="_top" href="cpp_stl_tutorial.htm">C++ STL Tutorial</a></li>
<li><a class="left" target="_top" href="cpp_standard_library.htm">C++ Standard Library</a></li>
<li><a class="left" target="_top" href="cpp_useful_resources.htm">C++ Useful Resources</a></li>
</ul>
<ul class="menu">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="../developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="../computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="../computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div><!-- leftcol -->
<div id="middlecol">
<!-- PRINTING STARTS HERE -->
<div class="content">
<h1>Storage Classes in C++</h1>
<div class="topgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
<hr />
<div class="pre-btn">
<a href="cpp_modifier_types.htm">Previous Page</a>
</div>
<div class="nxt-btn">
<a href="cpp_operators.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
<p>A storage class defines the scope (visibility) and life time of variables and/or functions within a C++ Program. These specifiers precede the type that they modify. There are following storage classes which can be used in a C++ Program</p>
<ul class="list">
<li><p>auto</p></li>
<li><p>register</p></li>
<li><p>static</p></li>
<li><p>extern</p></li>
<li><p>mutable</p></li>
</ul>
<h2>The auto Storage Class</h2>
<p>The <b>auto</b> storage class is the default storage class for all local variables.</p>
<pre class="prettyprint">
{
   int mount;
   auto int month;
}
</pre>
<p>The example above defines two variables with the same storage class, auto can only be used within functions, i.e. local variables. </p>
<h2>The register Storage Class</h2>
<p>The <b>register</b> storage class is used to define local variables that should be stored in a register instead of RAM. This means that the variable has a maximum size equal to the register size (usually one word) and can't have the unary '&amp;' operator applied to it (as it does not have a memory location).</p>
<pre class="prettyprint">
{
   register int  miles;
}
</pre>
<p>The register should only be used for variables that require quick access such as counters. It should also be noted that defining 'register' goes not mean that the variable will be stored in a register. It means that it MIGHT be stored in a register depending on hardware and implementation restrictions.</p>
<h2>The static Storage Class</h2>
<p>The <b>static</b> storage class instructs the compiler to keep a local variable in existence during the lifetime of the program instead of creating and destroying it each time it comes into and goes out of scope.  Therefore, making local variables static allows them to maintain their values between function calls.</p>
<p>The static modifier may also be applied to global variables. When this is done, it causes that variable's scope to be restricted to the file in which it is declared.</p>
<p>In C++, when static is used on a class data member, it causes only one copy of that member to be shared by all objects of its class.</p>
<pre class="prettyprint">
#include &lt;iostream&gt;
 
// Function declaration
void func(void);
 
static int count = 10; /* Global variable */
 
main()
{
    while(count--)
    {
       func();
    }
    return 0;
}
// Function definition
void func( void )
{
    static int i = 5; // local static variable
    i++;
    std::cout &lt;&lt; "i is " &lt;&lt; i ;
    std::cout &lt;&lt; " and count is " &lt;&lt; count &lt;&lt; std::endl;
}
</pre>
<p>When the above code is compiled and executed, it produces following result:</p>
<pre class="prettyprint">
i is 6 and count is 9
i is 7 and count is 8
i is 8 and count is 7
i is 9 and count is 6
i is 10 and count is 5
i is 11 and count is 4
i is 12 and count is 3
i is 13 and count is 2
i is 14 and count is 1
i is 15 and count is 0
</pre>
<h2>The extern Storage Class</h2>
<p>The <b>extern</b> storage class is used to give a reference  of a global variable that is visible to ALL the program files. When you use 'extern' the variable cannot be initialized  as all it does is point the variable name at a storage location that has been previously defined.</p>
<p>When you have multiple files and you define a global variable  or function which will be used in other files also, then <i>extern </i> will be used in another file to give reference of defined variable or function. Just for understanding <i>extern </i> is used to declare a global variable or function  in another files.</p>
<p>The extern modifier is most commonly used when there are two or more files sharing the same global variables or functions as explained below.</p>
<p>First File: main.cpp</p>
<pre class="prettyprint">
#include &lt;iostream&gt;
 
int count ;
extern void write_extern();
 
main()
{
   count = 5;
   write_extern();
}
</pre>
<p>Second File: write.cpp</p>
<pre class="prettyprint">
#include &lt;iostream&gt;
 
extern int count;
 
void write_extern(void)
{
   std::cout &lt;&lt; "Count is " &lt;&lt; count &lt;&lt; std::endl;
}
</pre>
<p>Here <i>extern</i> keyword is being used to declare count in another file. Now compile these two files as follows:</p>
<pre class="prettyprint">
$g++ main.cpp write.cpp -o write
</pre>
<p>This will produce <b>write</b> executable program, try to execute <b>write</b> and check the result as follows:</p>
<pre class="prettyprint">
$./write
5
</pre>
<h2>The mutable Storage Class</h2>
<p>The <b>mutable</b> specifier applies only to class objects, which are discussed later in this tutorial. It allows a member of an object to override constness. That is, a mutable member can be modified by a const member function.</p>
<br />
<hr />
<div class="pre-btn">
<a href="cpp_modifier_types.htm">Previous Page</a>
</div>
<div class="print-btn">
<a href="../cgi-bin/printpage.html" target="_blank">Print Version</a>
</div>
<div class="pdf-btn">
<a href="pdf/cpp_storage_classes.pdf" alt="Storage Classes in C++" target="_blank">PDF Version</a>
</div>
<div class="nxt-btn">
<a href="cpp_operators.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
</div>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</div>
</div><!-- middlecol -->
<div id="rightcol">
<!-- AddThis Button BEGIN -->
<div class="addthis">
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook"></a>
<a class="addthis_button_twitter"></a>
<script type="text/javascript">
<!--
 document.write('<a class="addthis_button_google_plusone" g:plusone:count="false"></a>');
//-->
</script>
<a class="addthis_button_linkedin"></a>
<a class="addthis_button_email"></a>
<a class="addthis_button_compact"></a>
</div>
<script type="text/javascript" src="../../s7.addthis.com/js/250/addthis_widget.js#pubid=ra-4f661ec623a400f0"></script>
</div>
<!-- AddThis Button END -->
<div class="localad">
<a rel="nofollow" href="http://www.modernindianbabynames.com/" target="_blank" title="Modern Baby Names">Modern Baby Names</a>
</div>
<div class="localad">
<a rel="nofollow" href="http://www.photofuntoos.com/" target="_blank" title="Online Photo Editing">Online Photo Editing</a>
</div>
<div class="rightgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
</div><!-- rightcol -->
<div style="clear:both;"></div>
</div><!-- wrapper -->
<div id="footer">
<div class="wrapper">
<div id="bottommenu">
<a href="../asp.net/index.htm" target="_top">ASP.NET </a> |
<a href="../jquery/index.htm" target="_top">jQuery </a> |
<a href="../ajax/index.htm" target="_top">AJAX </a> |
<a href="../ant/index.htm" target="_top">ANT</a> |
<a href="../jsp/index.htm" target="_top">JSP </a> |
<a href="../servlets/index.htm" target="_top">Servlets </a> |
<a href="../log4j/index.htm" target="_top">log4j </a> |
<a href="../ibatis/index.htm" target="_top">iBATIS </a> |
<a href="../hibernate/index.htm" target="_top">Hibernate </a> |
<a href="../jdbc/index.htm" target="_top">JDBC </a> |
<a href="../struts_2/index.htm" target="_top">Struts </a> |
<a href="../html5/index.htm" target="_top">HTML5 </a> |
<a href="../sql/index.htm" target="_top">SQL </a> |
<a href="../mysql/index.htm" target="_top">MySQL </a> |
<a href="index.htm" target="_top">C++ </a> |
<a href="../unix/index.htm" target="_top">UNIX </a>
</div>
<div id="copyright">
<p>Copyright &copy; 2013 by tutorialspoint. All Rights Reserved.</p>
</div>
</div>
</div>
</body>

<!-- Mirrored from www.tutorialspoint.com/cplusplus/cpp_storage_classes.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 20:00:16 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>
