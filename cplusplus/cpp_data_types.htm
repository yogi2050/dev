<!doctype html> 
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--><html lang="en"><!--<![endif]-->

<!-- Mirrored from www.tutorialspoint.com/cplusplus/cpp_data_types.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 19:59:52 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="utf-8">
<title>C++ Data Types</title>
<link rel="shortcut icon" href="../favicon.png" type="image/x-icon" />
<meta name="Keywords" content="C++, Tutorials, Learning, Beginners, Basics, Object Oriented Language, Methods, Overriding, Inheritance, Polymorphism, Interfaces, STL, Iterators, Algorithms, Exception Handling, Overloading,Templates, Namespaces, Signal Handling" />
<meta name="description" content="C++ Data Types - Learning C++ in simple and easy steps : A beginner's tutorial containing complete knowledge of C++ Syntax Object Oriented Language, Methods, Overriding, Inheritance, Polymorphism, Interfaces, STL, Iterators, Algorithms, Exception Handling, Overloading,Templates, Namespaces and Signal Handling" />
<base  />
<link rel="stylesheet" type="text/css" href="../scripts/style.css" />
<link rel="stylesheet" type="text/css" href="../scripts/prettify.css" />
<script type="text/javascript" src="../scripts/prettify.js"></script>
<style media="screen" type="text/css">
/* C++ Scheme */
#topmenu a:link {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#topmenu a:visited {text-decoration:none;color:#fff !important;background-color:transparent;font-weight:bold;}
#topmenu a:hover {text-decoration:none;color:#d6a432 !important;background-color:transparent;font-weight:bold;}
#header{ 
background:#d6a432 !important;
}
#topmenu
{
background-color:#3b2b1e !important;
}
#leftcol ul.menu li.heading 
{
background:#d6a432 !important;
border:1px solid #3b2b1e !important;
}
#leftcol, #middlecol, #rightcol {min-height:1600px; padding:0px;}
</style>
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
</script>
</head>
<body onload="prettyPrint()">
<div id="header">
<div class="wrapper">
<h1 class="logo"><a href="../index.htm">Tutorials Point - Simply Easy Learning</a></h1>
<div id="search">
<form method="get" id="searchform" name="searchform" action="http://www.google.com/search" target="_blank">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com"/>
<input type="text" name="as_q" id="s" value="Search this site..." onfocus="if (this.value == 'Search this site...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search this site...';}"/>
<input value="FORID:11" name="cof" type="hidden"/>
<input type="hidden" name="ie" value="ISO-8859-1" />
<input class="submit btn" type="image" src="../images/icon-search.png" alt="Go"/>
</form>
</div>
</div>
</div>
<div id="topmenu">
<div class="wrapper">
<div id="left">
<a href="../index.htm" target="_top">HOME </a>
<a href="../java/index.htm" target="_top">JAVA </a>
<a href="../php/index.htm" target="_top">PHP </a>
<a href="../python/index.htm" target="_top">Python </a>
<a href="../ruby/index.htm" target="_top">Ruby </a>
<a href="../perl/index.htm" target="_top">Perl </a>
<a href="../html/index.htm" target="_top">HTML </a>
<a href="../css/index.htm" target="_top">CSS </a>
<a href="../javascript/index.htm" target="_top">Javascript </a>
<a href="../mysql/index.htm" target="_top">MySQL </a>
<a href="index.htm" target="_top">C++ </a>
<a href="../unix/index.htm" target="_top">UNIX </a>
<a href="../more.htm" target="_top">MORE...</a>
</div>
<div id="right">
<a href="../references.htm" target="_top">REFERENCES</a> |
<a href="../forums/index.html" target="_top">FORUM</a> |
<a href="../about/index.htm" target="_top">ABOUT</a> |
<a href="../about/contact_us.htm" target="_top">CONTACT</a>
</div>
</div>
</div>
<div class="wrapper">
<div id="leftcol">
<div class="mini-logo">
<img src="../images/cpp-mini-logo.png" alt="C++ Tutorial" />
</div>
<ul class="menu">
<li class="heading">C++ Basics</li>
<li><a target="_top" href="index.htm">C++ Home</a></li>
<li><a target="_top" href="cpp_overview.htm">C++ Overview</a></li>
<li><a target="_top" href="cpp_environment_setup.htm">C++ Environment Setup</a></li>
<li><a target="_top" href="cpp_basic_syntax.htm">C++ Basic Syntax</a></li>
<li><a target="_top" href="cpp_comments.htm">C++ Comments</a></li>
<li><a target="_top" href="cpp_data_types.htm"><b>C++ Data Types</b></a></li>
<li><a target="_top" href="cpp_variable_types.htm">C++  Variable Types</a></li>
<li><a target="_top" href="cpp_variable_scope.htm">C++  Variable Scope</a></li>
<li><a target="_top" href="cpp_constants_literals.htm">C++ Constants/Literals</a></li>
<li><a target="_top" href="cpp_modifier_types.htm">C++ Modifier Types</a></li>
<li><a target="_top" href="cpp_storage_classes.htm">C++ Storage Classes</a></li>
<li><a target="_top" href="cpp_operators.htm">C++ Operators</a></li>
<li><a target="_top" href="cpp_loop_types.htm">C++ Loop Types</a></li>
<li><a target="_top" href="cpp_decision_making.htm">C++ Decision Making </a></li>
<li><a target="_top" href="cpp_functions.htm">C++ Functions</a></li>
<li><a target="_top" href="cpp_numbers.htm">C++ Numbers</a></li>
<li><a target="_top" href="cpp_arrays.htm">C++ Arrays</a></li>
<li><a target="_top" href="cpp_strings.htm">C++ Strings</a></li>
<li><a target="_top" href="cpp_pointers.htm">C++ Pointers</a></li>
<li><a target="_top" href="cpp_references.htm">C++ References</a></li>
<li><a target="_top" href="cpp_date_time.htm">C++ Date &amp; Time</a></li>
<li><a target="_top" href="cpp_basic_input_output.htm">C++ Basic Input/Output</a></li>
<li><a target="_top" href="cpp_data_structures.htm">C++ Data Structures</a></li>
</ul>
<ul class="menu">
<li class="heading">C++ Object Oriented</li>
<li><a class="left" target="_top" href="cpp_classes_objects.htm">C++ Classes &amp; Objects</a></li>
<li><a class="left" target="_top" href="cpp_inheritance.htm">C++ Inheritance</a></li>
<li><a class="left" target="_top" href="cpp_overloading.htm">C++ Overloading</a></li>
<li><a class="left" target="_top" href="cpp_polymorphism.htm">C++ Polymorphism</a></li>
<li><a class="left" target="_top" href="cpp_data_abstraction.htm">C++ Abstraction</a></li>
<li><a class="left" target="_top" href="cpp_data_encapsulation.htm">C++ Encapsulation</a></li>
<li><a class="left" target="_top" href="cpp_interfaces.htm">C++ Interfaces</a></li>
</ul>
<ul class="menu">
<li class="heading">C++ Advanced</li>
<li><a class="left" target="_top" href="cpp_files_streams.htm">C++ Files and Streams</a></li>
<li><a class="left" target="_top" href="cpp_exceptions_handling.htm">C++ Exception Handling</a></li>
<li><a class="left" target="_top" href="cpp_dynamic_memory.htm">C++ Dynamic Memory</a></li>
<li><a class="left" target="_top" href="cpp_namespaces.htm">C++ Namespaces</a></li>
<li><a class="left" target="_top" href="cpp_templates.htm">C++ Templates</a></li>
<li><a class="left" target="_top" href="cpp_preprocessor.htm">C++ Preprocessor</a></li>
<li><a class="left" target="_top" href="cpp_signal_handling.htm">C++ Signal Handling</a></li>
<li><a class="left" target="_top" href="cpp_multithreading.htm">C++ Multithreading</a></li>
<li><a class="left" target="_top" href="cpp_web_programming.htm">C++ Web Programming</a></li>
</ul>
<ul class="menu">
<li class="heading">C++ Useful Resources</li>
<li><a class="left" target="_top" href="cpp_quick_guide.htm">C++ Quick Guide</a></li>
<li><a class="left" target="_top" href="cpp_stl_tutorial.htm">C++ STL Tutorial</a></li>
<li><a class="left" target="_top" href="cpp_standard_library.htm">C++ Standard Library</a></li>
<li><a class="left" target="_top" href="cpp_useful_resources.htm">C++ Useful Resources</a></li>
</ul>
<ul class="menu">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="../developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="../computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="../computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div><!-- leftcol -->
<div id="middlecol">
<!-- PRINTING STARTS HERE -->
<div class="content">
<h1>C++ Data Types</h1>
<div class="topgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
<hr />
<div class="pre-btn">
<a href="cpp_comments.htm">Previous Page</a>
</div>
<div class="nxt-btn">
<a href="cpp_variable_types.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
<p>While doing programming in any programming language, you need to use various variables to store various information. Variables are nothing but reserved memory locations to store values. This means that when you create a variable you reserve some space in memory.</p>
<p>You may like to store information of various data type like character, wide character, integer, floating point, double floating point, boolean etc. Based on the data type of a variable, the operating system allocates memory and decides what can be stored in the reserved memory.</p>
<h2>Primitive Built-in Types:</h2>
<p>C++ offer the programmer a rich assortment of built-in as well as user defined data types. Following table list down seven basic C++ data types:</p>
<table class="src">
<tr><th width="50%">Type</th><th>Keyword</th></tr>
<tr><td>Boolean</td><td>bool</td></tr>
<tr><td>Character</td><td>char</td></tr>
<tr><td>Integer</td><td>int</td></tr>
<tr><td>Floating point</td><td>float</td></tr>
<tr><td>Double floating point</td><td>double</td></tr>
<tr><td>Valueless</td><td> void</td></tr>
<tr><td>Wide character</td><td>wchar_t</td></tr>
</table>
<p>Several of the basic types can be modified using one or more of these type modifiers:</p>
<ul class="list">
<li><p>signed</p></li>
<li><p>unsigned</p></li>
<li><p>short</p></li>
<li><p>long</p></li>
</ul>
<p>The following table shows the variable type, how much memory it takes to store the value memory, and what is maximum and minimum vaue which can be stored in such type of variables.</p>
<table class="src" border="1" cellpadding="5">
<tr><th>Type</th><th>Typical Bit Width</th><th>Typical Range</th></tr>
<tr><td>char</td><td>1byte</td><td>-127 to 127 or 0 to 255</td></tr>
<tr><td>unsigned char</td><td>1byte</td><td>0 to 255</td></tr>
<tr><td>signed char</td><td>1byte</td><td>-127 to 127</td></tr>
<tr><td>int</td><td>4bytes</td><td>-2147483648 to 2147483647</td></tr>
<tr><td>unsigned int</td><td>4bytes</td><td>0 to 4294967295</td></tr>
<tr><td>signed int</td><td>4bytes</td><td>-2147483648 to 2147483647</td></tr>
<tr><td>short int</td><td>2bytes</td><td>-32768 to 32767</td></tr>
<tr><td>unsigned short int</td><td>Range</td><td>0 to 65,535</td></tr>
<tr><td>signed short int</td><td>Range</td><td>-32768 to 32767</td></tr>
<tr><td>long int</td><td>4bytes</td><td>-2,147,483,647 to 2,147,483,647</td></tr>
<tr><td>signed long int</td><td>4bytes</td><td>same as long int</td></tr>
<tr><td>unsigned long int</td><td>4bytes</td><td>0 to 4,294,967,295</td></tr>
<tr><td>float</td><td>4bytes</td><td>+/- 3.4e +/- 38 (~7 digits)</td></tr>
<tr><td>double</td><td>8bytes</td><td>+/- 1.7e +/- 308 (~15 digits)</td></tr>
<tr><td>long double</td><td>8bytes</td><td>+/- 1.7e +/- 308 (~15 digits)</td></tr>
<tr><td>wchar_t</td><td>2 or 4 bytes</td><td>1 wide character</td></tr>
</table>
<p>The sizes of variables might be different from those shown in the above table, depending on the compiler and the computer you are using.</p>
<p>Following is the example which will produce correct size of various data type on your cmputer.</p>
<pre class="prettyprint">
#include &lt;iostream&gt;
using namespace std;

int main()
{
   cout &lt;&lt; "Size of char : " &lt;&lt; sizeof(char) &lt;&lt; endl;
   cout &lt;&lt; "Size of int : " &lt;&lt; sizeof(int) &lt;&lt; endl;
   cout &lt;&lt; "Size of short int : " &lt;&lt; sizeof(short int) &lt;&lt; endl;
   cout &lt;&lt; "Size of long int : " &lt;&lt; sizeof(long int) &lt;&lt; endl;
   cout &lt;&lt; "Size of float : " &lt;&lt; sizeof(float) &lt;&lt; endl;
   cout &lt;&lt; "Size of double : " &lt;&lt; sizeof(double) &lt;&lt; endl;
   cout &lt;&lt; "Size of wchar_t : " &lt;&lt; sizeof(wchar_t) &lt;&lt; endl;
   return 0;
}
</pre>
<p>This example uses  <b>endl</b> which inserts a new-line character after every line and &lt;&lt; operator is being used to pass multiple values out to the screen. We are also using <b>sizeof()</b> function to get size of various data types.</p>
<p>When the above code is compiled and executed, it produces following result which can vary from machine to machine:</p>
<pre class="prettyprint">
Size of char : 1
Size of int : 4
Size of short int : 2
Size of long int : 4
Size of float : 4
Size of double : 8
Size of wchar_t : 4
</pre>
<h2>typedef Declarations:</h2>
<p>You can create a new name for an existing type using <b>typedef</b>. Following is the simple syntax to define a new type using typedef:</p>
<pre class="prettyprint">
typedef type newname; 
</pre>
<p>For example, the following tells the compiler that feet is another name for int:</p>
<pre class="prettyprint">
typedef int feet;
</pre>
<p>Now, the following declaration is perfectly legal and creates an integer variable called distance:</p>
<pre class="prettyprint">
feet distance;
</pre>
<h2>Enumerated Types:</h2>
<p>An enumerated type declares an optional type name  and a set of zero or more identifiers that can be used as values of the type. Each enumerator is a constant whose type is the enumeration.</p>
<p>To create an enumeration requires the use of the keyword <b>enum</b>. The general form of an enumeration type is:</p>
<pre class="prettyprint">
enum enum-name { list of names } var-list; 
</pre>
<p>Here, The enum-name is the enumeration's type name. The list of names is comma separated.</p>
<p>For example, the following code defines an enumeration of colors called colors and the variable c of type color. Finally, c is assigned the value "blue".</p>
<pre class="prettyprint">
enum color { red, green, blue } c;
c = blue;
</pre>
<p>By default, the value of the first name is 0, the second name has the value 1, the third has the value 2, and so on. But you can give a name a specific value by adding an initializer. For example, in the following enumeration, <b>green</b> will have the value 5.</p>
<pre class="prettyprint">
enum color { red, green=5, blue };
</pre>
<p>Here <b>blue</b> will have a value of 6 because each name will be one greater than the one that precedes it.</p>
<br />
<hr />
<div class="pre-btn">
<a href="cpp_comments.htm">Previous Page</a>
</div>
<div class="print-btn">
<a href="../cgi-bin/printpage.html" target="_blank">Print Version</a>
</div>
<div class="pdf-btn">
<a href="pdf/cpp_data_types.pdf" alt="C++ Data Types" target="_blank">PDF Version</a>
</div>
<div class="nxt-btn">
<a href="cpp_variable_types.htm">Next Page</a>
</div>
<div class="clearer"></div>
<hr />
</div>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</div>
</div><!-- middlecol -->
<div id="rightcol">
<!-- AddThis Button BEGIN -->
<div class="addthis">
<div class="addthis_toolbox addthis_default_style">
<a class="addthis_button_facebook"></a>
<a class="addthis_button_twitter"></a>
<script type="text/javascript">
<!--
 document.write('<a class="addthis_button_google_plusone" g:plusone:count="false"></a>');
//-->
</script>
<a class="addthis_button_linkedin"></a>
<a class="addthis_button_email"></a>
<a class="addthis_button_compact"></a>
</div>
<script type="text/javascript" src="../../s7.addthis.com/js/250/addthis_widget.js#pubid=ra-4f661ec623a400f0"></script>
</div>
<!-- AddThis Button END -->
<div class="localad">
<a rel="nofollow" href="http://www.modernindianbabynames.com/" target="_blank" title="Modern Baby Names">Modern Baby Names</a>
</div>
<div class="localad">
<a rel="nofollow" href="http://www.photofuntoos.com/" target="_blank" title="Online Photo Editing">Online Photo Editing</a>
</div>
<div class="rightgooglead">
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
src="../../pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
</div><!-- rightcol -->
<div style="clear:both;"></div>
</div><!-- wrapper -->
<div id="footer">
<div class="wrapper">
<div id="bottommenu">
<a href="../asp.net/index.htm" target="_top">ASP.NET </a> |
<a href="../jquery/index.htm" target="_top">jQuery </a> |
<a href="../ajax/index.htm" target="_top">AJAX </a> |
<a href="../ant/index.htm" target="_top">ANT</a> |
<a href="../jsp/index.htm" target="_top">JSP </a> |
<a href="../servlets/index.htm" target="_top">Servlets </a> |
<a href="../log4j/index.htm" target="_top">log4j </a> |
<a href="../ibatis/index.htm" target="_top">iBATIS </a> |
<a href="../hibernate/index.htm" target="_top">Hibernate </a> |
<a href="../jdbc/index.htm" target="_top">JDBC </a> |
<a href="../struts_2/index.htm" target="_top">Struts </a> |
<a href="../html5/index.htm" target="_top">HTML5 </a> |
<a href="../sql/index.htm" target="_top">SQL </a> |
<a href="../mysql/index.htm" target="_top">MySQL </a> |
<a href="index.htm" target="_top">C++ </a> |
<a href="../unix/index.htm" target="_top">UNIX </a>
</div>
<div id="copyright">
<p>Copyright &copy; 2013 by tutorialspoint. All Rights Reserved.</p>
</div>
</div>
</div>
</body>

<!-- Mirrored from www.tutorialspoint.com/cplusplus/cpp_data_types.htm by HTTrack Website Copier/3.x [XR&CO'2010], Sat, 13 Apr 2013 19:59:58 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>