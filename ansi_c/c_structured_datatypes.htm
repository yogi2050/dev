<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>

<!-- Mirrored from www.tutorialspoint.com/ansi_c/c_structured_datatypes.htm by HTTrack Website Copier/3.x [XR&CO'2010], Mon, 15 Apr 2013 05:05:42 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<title>C - Structured Datatypes</title>
<link rel="shortcut icon" href="../favicon.png" type="image/x-icon" />
<meta name="Keywords" content="ANSI, C, Programming, Tutorial, References, ISO, GNU, K and R, C99, Program, Learning, Computer, Language, Easy,Steps, Most, Popular, System, Coaching,Assembly." />
<meta name="Description" content="C Structured Datatypes - Free tutorial and references for ANSI C Programming. You will learn ISO GNU K and R C99 C Programming computer language in easy steps. C is the most popular system programming and widely used computer language in the computer world." />
<meta http-equiv="pragma" content="no-cache" />
<meta http-equiv="cache-control" content="no-cache" />
<base  />
<link rel="stylesheet" type="text/css" href="../tp.css" />
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
</script>
</head>
<body>
<center>
<a name="top"></a>
<table border="0" class="main" cellpadding="2" cellspacing="0">
<tr>
<td class="content" valign="top" align="left">
<a href="../index-2.html"><img src="../images/tp-logo.gif" border="0"  alt="Tutorials Point" /></a>
<br />
<br />
<div  class="search">
<!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0">
<tr><td nowrap="nowrap" valign="top" align="center" height="32">
<a href="http://www.google.com/">
<img src="../../www.google.com/logos/Logo_25wht.gif" border="0" alt="Google" align="middle"></img></a>
</td>
</tr>
<tr>
<td nowrap="nowrap">
<input type="hidden" name="domains" value="www.tutorialspoint.com"></input>
<input type="text" name="q" size="18" maxlength="255" value=""></input>
<input type="submit" name="sa" style="width:20px;font-weight:bold" value="..."></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="radio" name="sitesearch" value="" checked="checked"></input>
<font size="-1" color="#000000">Web</font>
</td>
<td>
<input type="radio" name="sitesearch" value="www.tutorialspoint.com"></input>
<font size="-1" color="#000000">This Site</font>
</td>
</tr>
</table>
<input type="hidden" name="client" value="pub-7133395778201029"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="cof" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"></input>
<input type="hidden" name="hl" value="en"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google -->
</div>
<br />
&nbsp;&nbsp;<b>Learning C</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="index.htm">C - Programming HOME</a></li>
<li><a class="left" target="_top" href="c_introduction.htm" >C - Basic Introduction</a></li>
<li><a class="left" target="_top" href="c_program_structure.htm" >C - Program Structure</a></li>
<li><a class="left" target="_top" href="c_reserved_keywords.htm" >C - Reserved Keywords</a></li>
<li><a class="left" target="_top" href="c_basic_datatypes.htm" >C - Basic Datatypes</a></li>
<li><a class="left" target="_top" href="c_variable_types.htm" >C - Variable Types</a></li>
<li><a class="left" target="_top" href="c_storage_classes.htm" >C - Storage Classes</a></li>
<li><a class="left" target="_top" href="c_using_constants.htm" >C - Using Constants</a></li>
<li><a class="left" target="_top" href="c_operator_types.htm" >C - Operator Types</a></li>
<li><a class="left" target="_top" href="c_control_statements.htm" >C - Control Statements</a></li>
<li><a class="left" target="_top" href="c_input_output.htm" >C - Input and Output</a></li>
<li><a class="left" target="_top" href="c_pointing_data.htm" >C - Pointing to Data</a></li>
<li><a class="left" target="_top" href="c_using_functions.htm" >C - Using Functions</a></li>
<li><a class="left" target="_top" href="c_play_with_strings.htm" >C - Play with Strings</a></li>
<li><a class="left" target="_top" href="c_structured_datatypes.htm" ><b>C - Structure Datatype</b></a></li>
<li><a class="left" target="_top" href="c_working_with_files.htm" >C - Working with Files</a></li>
<li><a class="left" target="_top" href="c_bits_manipulation.htm" >C - Bits Manipulation</a></li>
<li><a class="left" target="_top" href="c_preprocessors.htm" >C - Pre-Processors</a></li>
<li><a class="left" target="_top" href="c_useful_concepts.htm" >C - Useful Concepts</a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>C Function References</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="c_function_references.html" >C - Built-in Functions</a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>C Useful Resources</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="c_useful_resources.htm" >C - Useful Resources</a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>Selected Reading</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="../computer_glossary.html">Computer Glossary</a></li>
<li><a class="left" target="_top" href="../computer_whoiswho.html">Who is Who</a></li>
</ul>
</div>
<br /><br />
<small>&copy; 2013 TutorialsPoint.COM </small>
</td>
<td valign="top">
<br /><br />
<table cellpadding="0" cellspacing="0">
<tr valign="middle">
<td  style="width:20px;"></td>
<td  class="top">
&nbsp;&nbsp;<a class="top" href="../index-2.html">Home</a>&nbsp;&nbsp;
</td>
<td  style="width:20px;"></td>
<td  class="top">
&nbsp;&nbsp;<a class="top" href="../references.html">References</a>&nbsp;&nbsp;
</td>
<td  style="width:20px;"></td>
<td  class="top">
&nbsp;&nbsp;<a class="top" href="../about/index.html">About TP</a>&nbsp;&nbsp;
</td>
<td  style="width:10px;"></td>
<td  class="top">
&nbsp;&nbsp;<a class="top" href="../about/about_advertising.html">Advertising</a>&nbsp;&nbsp;
</td>
</tr>
</table>
<table class="middle"  cellpadding="5" cellspacing="0">
<tr>
<td align="left">
<!-- PRINTING STARTS HERE -->
<a href="../cprogramming/index.html"  title="C Programming Language Tutorial"><img src="../images/obsolete.html" alt="Latest C Tutorial"/></a>
<h1>C - Structured Datatypes</h1>
<a href="c_play_with_strings.htm"><img alt="previous" border="0" src="../images/previous.gif" /></a>
<a href="c_working_with_files.htm"><img alt="next" border="0" src="../images/next.gif" /></a>
<!-- AddThis Bookmark Button BEGIN -->
<a href="http://www.addthis.com/bookmark.php" rel="nofollow" onclick="addthis_url   = location.href; addthis_title = document.title; return addthis_click(this);" target="_blank"><img src="../images/add-this.gif" border="0" alt="AddThis Social Bookmark Button" /></a> <script type="text/javascript">var addthis_pub = 'tutorialspoint';</script><script type="text/javascript" src="http://s9.addthis.com/js/widget.php?v=10"></script>
<!-- AddThis Bookmark Button END -->
<br />
<br />
<hr/><div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
  src="../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<hr />
<table width="100%" border="0" cellpadding="0" cellspacing="0">
<tr>
<td valign="top">
<ul>
<li><p>A structure in C is a collection of items of different types. You can think of a structure as a "record" is in Pascal or a class in Java without methods.</p></li>
<li><p>Structures, or structs, are very useful in creating data structures larger and more complex than the ones we have discussed so far.</p></li>
<li><p>Simply you can group various built-in data types into a structure.</p></li>
<li><p>Object conepts was derived from Structure concept. You can achieve few object oriented goals using C structure but it is very complex.</p></li>
</ul>
<p>Following is the example how to define a structure.</p>
<table class="src" cellpadding="5"><tr><td><pre>
struct student {
    char firstName[20];
    char lastName[20];
    char SSN[9];
    float gpa;
  };
</pre></td></tr></table>
<p>Now you have a new datatype called student and you can use this datatype define your variables of <i>student</i> type:</p>
<table class="src" cellpadding="5"><tr><td><pre>
struct student student_a, student_b;

or an array of students as

struct student students[50];
</pre></td></tr></table>
<p>Another way to declare the same thing is:</p>
<table class="src" cellpadding="5"><tr><td><pre>
struct {
    char firstName[20];
    char lastName[20];
    char SSN[10];
    float gpa;
  } student_a, student_b;
</pre></td></tr></table>
<p>All the variables inside an structure will be accessed using these values as <i>student_a.firstName</i> will give value of <i>firstName</i> variable. Similarly we can aqccess other variables.</p>
<h1>Structure Example:</h1>
<p>Try out following example to understand the concept:</p>
<table class="src" cellpadding="5"><tr><td><pre>
#include &lt;stdio.h&gt;
struct student {
    char firstName[20];
    char lastName[20];
    char SSN[10];
    float gpa;
};

main()
{
  struct student student_a;

  strcpy(student_a.firstName, "Deo");
  strcpy(student_a.lastName, "Dum");
  strcpy(student_a.SSN, "2333234" );
  student_a.gpa = 2009.20;

 printf( "First Name: %s\n", student_a.firstName );
 printf( "Last Name: %s\n", student_a.lastName );
 printf( "SNN : %s\n", student_a.SSN );
 printf( "GPA : %f\n", student_a.gpa );
}
</pre></td></tr></table>
<p>This will produce following results:</p>
<table class="src" cellpadding="5"><tr><td><pre>
First Name: Deo
Last Name: Dum
SSN : 2333234
GPA : 2009.20
</pre></td></tr></table>
<h1>Pointers to Structs:</h1>
<p>Sometimes it is useful to assign pointers to structures (this will be evident in the next section with self-referential structures). Declaring pointers to structures is basically the same as declaring a normal pointer:</p>
<table class="src" cellpadding="5"><tr><td><pre>
struct student *student_a;
</pre></td></tr></table>
<p>To dereference, you can use the infix operator: -&gt;.</p>
<table class="src" cellpadding="5"><tr><td><pre>
printf("%s\n", student_a-&gt;SSN);
</pre></td></tr></table>
<h1>typedef Keyword</h1>
<p>There is an easier way to define structs or you could "alias" types you create. For example:</p>
<table class="src" cellpadding="5"><tr><td><pre>
typedef struct{
    char firstName[20];
    char lastName[20];
    char SSN[10];
    float gpa;
  }student;
</pre></td></tr></table>
<p>Now you can use <i>student</i> directly to define variables of <i>student</i> type  without using struct keyword. Following is the example:</p>
<table class="src" cellpadding="5"><tr><td><pre>
student student_a;
</pre></td></tr></table>
<p>You can use typedef for non-structs:</p>
<table class="src" cellpadding="5"><tr><td><pre>
typedef long int *pint32;

pint32 x, y, z;
</pre></td></tr></table>
<p>x, y and z are all pointers to long ints</p>
<h1>Unions Datatype</h1>
<p>Unions are declared in the same fashion as structs, but have a fundamental difference. Only one item within the union can be used at any time, because the memory allocated for each item inside the union is in a shared memory location.</p>
<p>Here is how we define a Union</p>
<table class="src" cellpadding="5"><tr><td><pre>
union Shape {
      int circle;
      int triangle;
      int ovel;
};
</pre></td></tr></table>
<p>We use union in such case where only one condition will be applied and only one variable will be used.</p>
<hr />
<h1>Conclusion:</h1>
<ul>
<li>You can create arrays of structs.</li>
<li>Structs can be copied or assigned.</li>
<li>The &amp; operator may be used with structs to show addresses.</li>
<li>Structs can be passed into functions. Structs can also be returned from functions.</li>
<li>Structs <b>cannot</b> be compared!</li>
<li>Structures can store non-homogenous data types into a single collection, much like an array does for common data (except it isn't accessed in the same manner).</li>
<li>Pointers to structs have a special infix operator: <b>-&gt;</b> for dereferencing the pointer.</li>
<li>typedef can help you clear your code up and can help save some keystrokes.</li>
</ul>
</td>
</tr>
</table>
<br />
<hr />
<a href="c_play_with_strings.htm"><img alt="previous" border="0" src="../images/previous.gif" /></a>
<a href="c_working_with_files.htm"><img alt="next" border="0" src="../images/next.gif" /></a>
<a href='../cgi-bin/printversion3bf3.html?tutorial=ansi_c&amp;file=c_structured_datatypes.htm' target="_blank">
<img src="../images/print.gif" alt="Printer Friendly" border="0" /></a>
<br />
<hr />
<!-- PRINTING ENDS HERE -->
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text_image";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</td></tr>
</table>
</td>
<td class="right" align="center" valign="top">
<br /><br />
<table width="100%" cellpadding="0" cellspacing="0">
<tr valign="middle">
<td  class="top" style="border:0px;">
&nbsp;&nbsp;
</td>
</tr>
</table>
<table class="right"  cellpadding="0" cellspacing="0">
<tr>
<td align="center" class="right">
<p>
<u>Advertisements</u>
</p>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
  src="../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<br /><br /></td></tr></table>
</td></tr></table>
</center>
</body>

<!-- Mirrored from www.tutorialspoint.com/ansi_c/c_structured_datatypes.htm by HTTrack Website Copier/3.x [XR&CO'2010], Mon, 15 Apr 2013 05:05:42 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>
