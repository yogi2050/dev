<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>

<!-- Mirrored from www.tutorialspoint.com/ansi_c/c_storage_classes.htm by HTTrack Website Copier/3.x [XR&CO'2010], Mon, 15 Apr 2013 05:05:42 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<title>C - Storage Classes</title>
<link rel="shortcut icon" href="../favicon.png" type="image/x-icon" />
<meta name="Keywords" content="ANSI, C, Programming, Tutorial, References, ISO, GNU, K and R, C99, Program, Learning, Computer, Language, Easy,Steps, Most, Popular, System, Coaching,Assembly." />
<meta name="Description" content="C Storage Classes - Free tutorial and references for ANSI C Programming. You will learn ISO GNU K and R C99 C Programming computer language in easy steps. C is the most popular system programming and widely used computer language in the computer world." />
<meta http-equiv="pragma" content="no-cache" />
<meta http-equiv="cache-control" content="no-cache" />
<base  />
<link rel="stylesheet" type="text/css" href="../tp.css" />
<script src="../../www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
</script>
</head>
<body>
<center>
<a name="top"></a>
<table border="0" class="main" cellpadding="2" cellspacing="0">
<tr>
<td class="content" valign="top" align="left">
<a href="../index-2.html"><img src="../images/tp-logo.gif" border="0"  alt="Tutorials Point" /></a>
<br />
<br />
<div  class="search">
<!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0">
<tr><td nowrap="nowrap" valign="top" align="center" height="32">
<a href="http://www.google.com/">
<img src="../../www.google.com/logos/Logo_25wht.gif" border="0" alt="Google" align="middle"></img></a>
</td>
</tr>
<tr>
<td nowrap="nowrap">
<input type="hidden" name="domains" value="www.tutorialspoint.com"></input>
<input type="text" name="q" size="18" maxlength="255" value=""></input>
<input type="submit" name="sa" style="width:20px;font-weight:bold" value="..."></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="radio" name="sitesearch" value="" checked="checked"></input>
<font size="-1" color="#000000">Web</font>
</td>
<td>
<input type="radio" name="sitesearch" value="www.tutorialspoint.com"></input>
<font size="-1" color="#000000">This Site</font>
</td>
</tr>
</table>
<input type="hidden" name="client" value="pub-7133395778201029"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="cof" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"></input>
<input type="hidden" name="hl" value="en"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google -->
</div>
<br />
&nbsp;&nbsp;<b>Learning C</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="index.htm">C - Programming HOME</a></li>
<li><a class="left" target="_top" href="c_introduction.htm" >C - Basic Introduction</a></li>
<li><a class="left" target="_top" href="c_program_structure.htm" >C - Program Structure</a></li>
<li><a class="left" target="_top" href="c_reserved_keywords.htm" >C - Reserved Keywords</a></li>
<li><a class="left" target="_top" href="c_basic_datatypes.htm" >C - Basic Datatypes</a></li>
<li><a class="left" target="_top" href="c_variable_types.htm" >C - Variable Types</a></li>
<li><a class="left" target="_top" href="c_storage_classes.htm" ><b>C - Storage Classes</b></a></li>
<li><a class="left" target="_top" href="c_using_constants.htm" >C - Using Constants</a></li>
<li><a class="left" target="_top" href="c_operator_types.htm" >C - Operator Types</a></li>
<li><a class="left" target="_top" href="c_control_statements.htm" >C - Control Statements</a></li>
<li><a class="left" target="_top" href="c_input_output.htm" >C - Input and Output</a></li>
<li><a class="left" target="_top" href="c_pointing_data.htm" >C - Pointing to Data</a></li>
<li><a class="left" target="_top" href="c_using_functions.htm" >C - Using Functions</a></li>
<li><a class="left" target="_top" href="c_play_with_strings.htm" >C - Play with Strings</a></li>
<li><a class="left" target="_top" href="c_structured_datatypes.htm" >C - Structured Datatypes</a></li>
<li><a class="left" target="_top" href="c_working_with_files.htm" >C - Working with Files</a></li>
<li><a class="left" target="_top" href="c_bits_manipulation.htm" >C - Bits Manipulation</a></li>
<li><a class="left" target="_top" href="c_preprocessors.htm" >C - Pre-Processors</a></li>
<li><a class="left" target="_top" href="c_useful_concepts.htm" >C - Useful Concepts</a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>C Function References</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="c_function_references.html" >C - Built-in Functions</a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>C Useful Resources</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="c_useful_resources.htm" >C - Useful Resources</a></li>
</ul>
</div>
<br />
&nbsp;&nbsp;<b>Selected Reading</b>
<div  class="left">
<ul class="menu">
<li><a class="left" target="_top" href="../computer_glossary.html">Computer Glossary</a></li>
<li><a class="left" target="_top" href="../computer_whoiswho.html">Who is Who</a></li>
</ul>
</div>
<br /><br />
<small>&copy; 2013 TutorialsPoint.COM </small>
</td>
<td valign="top">
<br /><br />
<table cellpadding="0" cellspacing="0">
<tr valign="middle">
<td  style="width:20px;"></td>
<td  class="top">
&nbsp;&nbsp;<a class="top" href="../index-2.html">Home</a>&nbsp;&nbsp;
</td>
<td  style="width:20px;"></td>
<td  class="top">
&nbsp;&nbsp;<a class="top" href="../references.html">References</a>&nbsp;&nbsp;
</td>
<td  style="width:20px;"></td>
<td  class="top">
&nbsp;&nbsp;<a class="top" href="../about/index.html">About TP</a>&nbsp;&nbsp;
</td>
<td  style="width:10px;"></td>
<td  class="top">
&nbsp;&nbsp;<a class="top" href="../about/about_advertising.html">Advertising</a>&nbsp;&nbsp;
</td>
</tr>
</table>
<table class="middle"  cellpadding="5" cellspacing="0">
<tr>
<td align="left">
<!-- PRINTING STARTS HERE -->
<a href="../cprogramming/index.html"  title="C Programming Language Tutorial"><img src="../images/obsolete.html" alt="Latest C Tutorial"/></a>
<h1>C - Storage Classes</h1>
<a href="c_variable_types.htm"><img alt="previous" border="0" src="../images/previous.gif" /></a>
<a href="c_using_constants.htm"><img alt="next" border="0" src="../images/next.gif" /></a>
<!-- AddThis Bookmark Button BEGIN -->
<a href="http://www.addthis.com/bookmark.php" rel="nofollow" onclick="addthis_url   = location.href; addthis_title = document.title; return addthis_click(this);" target="_blank"><img src="../images/add-this.gif" border="0" alt="AddThis Social Bookmark Button" /></a> <script type="text/javascript">var addthis_pub = 'tutorialspoint';</script><script type="text/javascript" src="http://s9.addthis.com/js/widget.php?v=10"></script>
<!-- AddThis Bookmark Button END -->
<br />
<br />
<hr/><div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
  src="../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<hr />
<table width="100%" border="0" cellpadding="0" cellspacing="0">
<tr>
<td valign="top">
<p>A storage class defines the scope (visibility) and life time of variables and/or functions within a C Program.</p>
<p>There are following storage classes which can be used in a C Program</p>
<ul>
<li><p>auto</p></li>
<li><p>register</p></li>
<li><p>static</p></li>
<li><p>extern</p></li>
</ul>
<h2>auto - Storage Class</h2>
<p><b>auto</b> is the default storage class for all local variables.</p>
<table class="src">
<tr><td>
<pre>
	{
            int Count;
            auto int Month;
	}
</pre>
</td></tr>
</table>
<p>The example above defines two variables with the same storage class.  auto can only be used within functions, i.e. local variables. </p>
<h2>register - Storage Class</h2>
<p><b>register</b> is used to define local variables that should be stored in a register instead of RAM. This means that the variable has a maximum size equal to the register size (usually one word) and cant have the unary '&amp;' operator applied to it (as it does not have a memory location).</p>
<table class="src">
<tr><td>
<pre>
	{
            register int  Miles;
	}
</pre>
</td></tr>
</table>
<p>Register should only be used for variables that require quick access - such as counters. It should also be noted that defining 'register' goes not mean that the variable will be stored in a register. It means that it MIGHT be stored in a register - depending on hardware and implimentation restrictions.</p>
<h2>static - Storage Class</h2>
<p><b>static</b> is the default storage class for global variables. The two variables below (count and road) both have a static storage class.</p>
<table class="src">
<tr><td>
<pre>
	static int Count;
        int Road;

        {
            printf("%d\n", Road);
        }
</pre>
</td></tr>
</table>
<p>static variables can be 'seen' within all functions in this source file. At link time, the static variables defined here will not be seen by the object modules that are brought in.</p>
<p>static can also be defined within a function. If this is done the variable is initalised at run time but is not reinitalized when the function is called. This inside a function static variable retains its value during vairous calls.</p>
<table class="src">
<tr><td>
<pre>
   void func(void);
   
   static count=10; /* Global variable - static is the default */
   
   main()
   {
     while (count--) 
     {
         func();
     }
   
   }
   
   void func( void )
   {
     static i = 5;
     i++;
     printf("i is %d and count is %d\n", i, count);
   }
   
   This will produce following result
   
   i is 6 and count is 9
   i is 7 and count is 8
   i is 8 and count is 7
   i is 9 and count is 6
   i is 10 and count is 5
   i is 11 and count is 4
   i is 12 and count is 3
   i is 13 and count is 2
   i is 14 and count is 1
   i is 15 and count is 0

</pre>
</td></tr>
</table>
<p><b>NOTE :</b> Here keyword <i>void</i> means function does not return anything and it does not take any parameter. You can memoriese void as nothing. static variables are initialized to 0 automatically.</p>

<p class="alignment"><b>Definition vs Declaration :</b> Before proceeding, let us understand the difference between <i>defintion</i> and <i>declaration</i> of a variable or function. Definition means where a variable or function is defined in realityand actual memory is allocated for variable or function. Declaration means just giving a reference of a variable and function. Through declaration we assure to the complier that this variable or function has been defined somewhere else  in the program and will be provided at the time of linking. In the above examples <i>char *func(void)</i> has been put at the top which is a declaration of this function where as this function has been defined below to <i>main()</i> function.</p>

<p>There is one more very important use for 'static'. Consider this bit of code.</p>
<table class="src">
<tr><td>
<pre>
   char *func(void);

   main()
   {
      char *Text1;
      Text1 = func();
   }

   char *func(void)
   {
      char Text2[10]="martin";
      return(Text2);
   }
</pre>
</td></tr>
</table>
<p>Now, 'func' returns a pointer to the memory location where 'text2' starts BUT text2 has a storage class of 'auto' and will disappear when we exit the function and could be overwritten but something else. The answer is to specify</p>
<table class="src">
<tr><td>
<pre>
    static char Text[10]="martin";
</pre>
</td></tr>
</table>
<p>The storage assigned to 'text2' will remain reserved for the duration if the program.</p>
<h2>extern - Storage Class</h2>
<p><b>extern</b> is used to give a reference  of a global variable that is visible to ALL the program files. When you use 'extern' the variable cannot be initalized as all it does is point the variable name at a storage location that has been previously defined.</p>
<p>When you have multiple files and you define a global variable  or function which will be used in other files also, then <i>extern </i> will be used in another file to give reference of defined variable or function. Just for understanding <i>extern </i> is used to decalre a global variable or function  in another files.</p>
<p>File 1: main.c</p>
<table class="src">
<tr>
<td>
<pre>
   int count=5;

   main()
   {
     write_extern();
   }
</pre>
</td></tr>
</table>
<p>File 2: write.c</p>
<table class="src">
<tr>
<td>
<pre>
   void write_extern(void);

   extern int count;

   void write_extern(void)
   {
     printf("count is %i\n", count);
   }
</pre>
</td></tr>
</table>
<p>Here <i>extern</i> keyword is being used to declare count in another file.</p>
<p>Now compile these two files as follows</p>
<table class="src">
<tr>
<td>
<pre>
   gcc main.c write.c -o write
</pre>
</td></tr>
</table>
<p>This fill produce <i>write</i> program which can be executed to produce result.</p>
<p>Count in 'main.c' will have a value of 5. If main.c changes the value of count - write.c will see the new value</p>
</td>
</tr>
</table>
<br />
<hr />
<a href="c_variable_types.htm"><img alt="previous" border="0" src="../images/previous.gif" /></a>
<a href="c_using_constants.htm"><img alt="next" border="0" src="../images/next.gif" /></a>
<a href='../cgi-bin/printversion07b0.html?tutorial=ansi_c&amp;file=c_storage_classes.htm' target="_blank">
<img src="../images/print.gif" alt="Printer Friendly" border="0" /></a>
<br />
<hr />
<!-- PRINTING ENDS HERE -->
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text_image";
google_ad_channel ="9030538898";
google_color_border="ffffff";
google_color_link="900b09";
google_color_url="000000";
google_color_text="000000";
//--></script>
<script type="text/javascript" src="../../pagead2.googlesyndication.com/pagead/show_ads.js"></script>
</td></tr>
</table>
</td>
<td class="right" align="center" valign="top">
<br /><br />
<table width="100%" cellpadding="0" cellspacing="0">
<tr valign="middle">
<td  class="top" style="border:0px;">
&nbsp;&nbsp;
</td>
</tr>
</table>
<table class="right"  cellpadding="0" cellspacing="0">
<tr>
<td align="center" class="right">
<p>
<u>Advertisements</u>
</p>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
  src="../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<br /><br /></td></tr></table>
</td></tr></table>
</center>
</body>

<!-- Mirrored from www.tutorialspoint.com/ansi_c/c_storage_classes.htm by HTTrack Website Copier/3.x [XR&CO'2010], Mon, 15 Apr 2013 05:05:42 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
</html>
