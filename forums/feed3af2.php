<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://www.tutorialspoint.com/forums/feed.php?f=26" />

<title>www.tutorialspoint.com</title>
<subtitle>Tutorials and Manuals</subtitle>
<link href="http://www.tutorialspoint.com/forums/index.php" />
<updated>2013-04-01T04:59:26+00:00</updated>

<author><name><![CDATA[www.tutorialspoint.com]]></name></author>
<id>http://www.tutorialspoint.com/forums/feed.php?f=26</id>
<entry>
<author><name><![CDATA[python1982]]></name></author>
<updated>2013-04-01T04:59:26+00:00</updated>
<published>2013-04-01T04:59:26+00:00</published>
<id>http://www.tutorialspoint.com/forums/viewtopic.php?t=2371&amp;p=2809#p2809</id>
<link href="http://www.tutorialspoint.com/forums/viewtopic.php?t=2371&amp;p=2809#p2809"/>
<title type="html"><![CDATA[Python Programming • regular expression]]></title>

<category term="Python Programming" scheme="http://www.tutorialspoint.com/forums/viewforum.php?f=26" label="Python Programming"/>
<content type="html" xml:base="http://www.tutorialspoint.com/forums/viewtopic.php?t=2371&amp;p=2809#p2809"><![CDATA[
I want to remove the letters repeated that exceed over two consecutive letters with regular expressions, for example, replace gooood by good. someone can help me? <img src="http://www.tutorialspoint.com/forums/images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" />  .<br />thank you in advance<p>Statistics: Posted by <a href="http://www.tutorialspoint.com/forums/memberlist.php?mode=viewprofile&amp;u=18697">python1982</a> — Mon Apr 01, 2013 4:59 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[TSPksky]]></name></author>
<updated>2013-03-28T02:32:04+00:00</updated>
<published>2013-03-28T02:32:04+00:00</published>
<id>http://www.tutorialspoint.com/forums/viewtopic.php?t=2368&amp;p=2806#p2806</id>
<link href="http://www.tutorialspoint.com/forums/viewtopic.php?t=2368&amp;p=2806#p2806"/>
<title type="html"><![CDATA[Python Programming • How do you apply the function in sort()?]]></title>

<category term="Python Programming" scheme="http://www.tutorialspoint.com/forums/viewforum.php?f=26" label="Python Programming"/>
<content type="html" xml:base="http://www.tutorialspoint.com/forums/viewtopic.php?t=2368&amp;p=2806#p2806"><![CDATA[
I need an exhaustive explanation of how to apply the function in sort().  I have seen references to &quot;key&quot; and &quot;lambda&quot;, but I am not able to find any documentation on how any of that works.<br /><br />Any and all tips or clues would be appreciated.<p>Statistics: Posted by <a href="http://www.tutorialspoint.com/forums/memberlist.php?mode=viewprofile&amp;u=18416">TSPksky</a> — Thu Mar 28, 2013 2:32 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thor0298]]></name></author>
<updated>2013-03-19T21:36:14+00:00</updated>
<published>2013-03-19T21:36:14+00:00</published>
<id>http://www.tutorialspoint.com/forums/viewtopic.php?t=2364&amp;p=2802#p2802</id>
<link href="http://www.tutorialspoint.com/forums/viewtopic.php?t=2364&amp;p=2802#p2802"/>
<title type="html"><![CDATA[Python Programming • tkinter label frame]]></title>

<category term="Python Programming" scheme="http://www.tutorialspoint.com/forums/viewforum.php?f=26" label="Python Programming"/>
<content type="html" xml:base="http://www.tutorialspoint.com/forums/viewtopic.php?t=2364&amp;p=2802#p2802"><![CDATA[
I looked at some examples and made a little gui program where you enter a number and it goes into a file and gets some data back.<br /><br />Right now it prints the data to labelvariable.  I want this gui to look more professional, so I was trying get get labelframe to work.  When I try to add it in, I click run on pyscriptor and it just hangs.<br />I can't quite seem to figure out what is wrong.<br />I attached my original working code<br /><br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>import Tkinter<br />from random import Random<br />file1 = open('survivor.txt')<br />final=&#91;&#93;<br />finalnum=&#91;&#93;<br />##int = 0<br />x = 0<br />for lineA in file1:<br />    final.append(lineA.rstrip() )<br />file1.close()<br /><br />while x &lt; len(final):<br />    finalnum.append(x)<br />    x = x+1<br /><br />class simpleapp_tk(Tkinter.Tk):<br />    def __init__(self,parent):<br />        Tkinter.Tk.__init__(self,parent)<br />        self.parent = parent<br />        self.initialize()<br /><br />    def initialize(self):<br /><br />        self.grid()<br /><br />        self.entryVariable = Tkinter.StringVar()<br />        self.entry = Tkinter.Entry(self,textvariable=self.entryVariable)<br />        self.entry.grid(column=0,row=0,sticky='EW')<br />        self.entry.bind(&quot;&lt;Return&gt;&quot;, self.OnPressEnter)<br />        self.entryVariable.set(u&quot;Enter Number.&quot;)<br /><br />        button = Tkinter.Button(self,text=u&quot;Randomize!&quot;,<br />                                command=self.OnButtonClick)<br />        button.grid(column=1,row=0)<br /><br />        self.labelVariable = Tkinter.StringVar()<br />        label = Tkinter.Label(self,textvariable=self.labelVariable,<br />                              anchor=&quot;w&quot;,fg=&quot;white&quot;,bg=&quot;blue&quot;)<br />        label.grid(column=0,row=1,columnspan=3,sticky='EW')<br />        self.labelVariable.set(u&quot;Survivors&quot;)<br /><br />        self.grid_columnconfigure(0,weight=1)<br />        self.resizable(True,False)<br />        self.update()<br />##        self.geometry(self.geometry())<br />        self.geometry('500x100-5+40')<br /><br />        self.entry.focus_set()<br />        self.entry.selection_range(0, Tkinter.END)<br /><br />    def OnButtonClick(self):<br />        file1 = open('survivor.txt')<br />        final=&#91;&#93;<br />        finalnum=&#91;&#93;<br />##        int = 0<br />        x = 0<br />        for lineA in file1:<br />            final.append(lineA.rstrip() )<br />        file1.close()<br /><br />        while x &lt; len(final):<br />            finalnum.append(x)<br />            x = x+1<br /><br />        num = 0<br />        finalnum = 0<br />        num =self.entryVariable.get()<br />        if (float(num) &lt; float((len(final)))):<br />##            self.labelVariable.set(len(final))<br />            finalnum = int(num)<br />            finalsurvivors = &#91;&#93;<br />            Random().shuffle(final)<br />            for count in range(0,finalnum):<br />                finalsurvivors.append(final&#91;count&#93;)<br />##            finalsurvivors = final&#91;finalnum&#93;<br />            self.labelVariable.set(finalsurvivors)<br /><br />        self.entry.focus_set()<br />        self.entry.selection_range(0, Tkinter.END)<br /><br />    def OnPressEnter(self,event):<br />        file1 = open('survivor.txt')<br />        final=&#91;&#93;<br />        finalnum=&#91;&#93;<br />##        int = 0<br />        x = 0<br />        for lineA in file1:<br />            final.append(lineA.rstrip() )<br />        file1.close()<br /><br />        while x &lt; len(final):<br />            finalnum.append(x)<br />            x = x+1<br /><br />        num = 0<br />        finalnum = 0<br />        num =self.entryVariable.get()<br />        if (float(num) &lt; float((len(final)))):<br />##            self.labelVariable.set(len(final))<br />            finalnum = int(num)<br />            finalsurvivors = &#91;&#93;<br />            Random().shuffle(final)<br />            for count in range(0,finalnum):<br />                finalsurvivors.append(final&#91;count&#93;)<br />##            finalsurvivors = final&#91;finalnum&#93;<br />            self.labelVariable.set(finalsurvivors)<br /><br />        self.entry.focus_set()<br />        self.entry.selection_range(0, Tkinter.END)<br /><br /><br />if __name__ == &quot;__main__&quot;:<br />    app = simpleapp_tk(None)<br />    app.title('Randomizer')<br />    app.mainloop()</code></dd></dl><p>Statistics: Posted by <a href="http://www.tutorialspoint.com/forums/memberlist.php?mode=viewprofile&amp;u=17878">thor0298</a> — Tue Mar 19, 2013 9:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Stanee72]]></name></author>
<updated>2013-03-18T18:20:56+00:00</updated>
<published>2013-03-18T18:20:56+00:00</published>
<id>http://www.tutorialspoint.com/forums/viewtopic.php?t=2362&amp;p=2797#p2797</id>
<link href="http://www.tutorialspoint.com/forums/viewtopic.php?t=2362&amp;p=2797#p2797"/>
<title type="html"><![CDATA[Python Programming • MySQL Python]]></title>

<category term="Python Programming" scheme="http://www.tutorialspoint.com/forums/viewforum.php?f=26" label="Python Programming"/>
<content type="html" xml:base="http://www.tutorialspoint.com/forums/viewtopic.php?t=2362&amp;p=2797#p2797"><![CDATA[
Can someone help me out, this code is not inserting in my database yet its not giving any error,<br /><br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>import MySQLdb<br /><br />connect=MySQLdb.Connect('localhost','root','','company')<br />cursor=connect.cursor()<br /><br />def insertValues():<br />                sql=&quot;INSERT INTO `company`.`employee` (`id`, `firstname`, `lastname`, `age`, `gender`, `income`) VALUES ('', 'Caroline', 'Njeri', '22', 'F', '7000')&quot;<br />                try:<br />                    cursor.execute(sql)<br />                    print &quot;The employee has been inserted successfully&quot;<br />                except MySQLdb.Error, e:<br />                                print &quot;There is an error &quot;, e<br />                                connect.rollback<br /><br />            <br />insertValues();<br />connect.close()</code></dd></dl><p>Statistics: Posted by <a href="http://www.tutorialspoint.com/forums/memberlist.php?mode=viewprofile&amp;u=16353">Stanee72</a> — Mon Mar 18, 2013 6:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tutorialspoint]]></name></author>
<updated>2012-11-23T22:48:03+00:00</updated>
<published>2012-11-23T22:48:03+00:00</published>
<id>http://www.tutorialspoint.com/forums/viewtopic.php?t=2124&amp;p=2411#p2411</id>
<link href="http://www.tutorialspoint.com/forums/viewtopic.php?t=2124&amp;p=2411#p2411"/>
<title type="html"><![CDATA[Python Programming • ]]></title>

<category term="Python Programming" scheme="http://www.tutorialspoint.com/forums/viewforum.php?f=26" label="Python Programming"/>
<content type="html" xml:base="http://www.tutorialspoint.com/forums/viewtopic.php?t=2124&amp;p=2411#p2411"><![CDATA[
Most of the google applications are using Python at backend.<p>Statistics: Posted by <a href="http://www.tutorialspoint.com/forums/memberlist.php?mode=viewprofile&amp;u=2">tutorialspoint</a> — Fri Nov 23, 2012 10:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[parvezshaikh]]></name></author>
<updated>2012-11-15T03:19:44+00:00</updated>
<published>2012-11-15T03:19:44+00:00</published>
<id>http://www.tutorialspoint.com/forums/viewtopic.php?t=2124&amp;p=2403#p2403</id>
<link href="http://www.tutorialspoint.com/forums/viewtopic.php?t=2124&amp;p=2403#p2403"/>
<title type="html"><![CDATA[Python Programming • regarding python]]></title>

<category term="Python Programming" scheme="http://www.tutorialspoint.com/forums/viewforum.php?f=26" label="Python Programming"/>
<content type="html" xml:base="http://www.tutorialspoint.com/forums/viewtopic.php?t=2124&amp;p=2403#p2403"><![CDATA[
Hello people,<br />                    I am parvez shaikh from Mumbai want to know that although I have some basic knowledge in python,Is thereany chance that I can get a job which can count my this basic knowledge.<br />If not than what should i do to develop my python skills?<p>Statistics: Posted by <a href="http://www.tutorialspoint.com/forums/memberlist.php?mode=viewprofile&amp;u=15977">parvezshaikh</a> — Thu Nov 15, 2012 3:19 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[bhuvanj]]></name></author>
<updated>2012-11-09T12:35:04+00:00</updated>
<published>2012-11-09T12:35:04+00:00</published>
<id>http://www.tutorialspoint.com/forums/viewtopic.php?t=2123&amp;p=2402#p2402</id>
<link href="http://www.tutorialspoint.com/forums/viewtopic.php?t=2123&amp;p=2402#p2402"/>
<title type="html"><![CDATA[Python Programming • ERROR when sending mail using python script]]></title>

<category term="Python Programming" scheme="http://www.tutorialspoint.com/forums/viewforum.php?f=26" label="Python Programming"/>
<content type="html" xml:base="http://www.tutorialspoint.com/forums/viewtopic.php?t=2123&amp;p=2402#p2402"><![CDATA[
hi everyone,<br />               i'm new bee to the open source languages and want to learn more things.using  python i tried sending mail concept it shows the following error.i can't find solution for it please help me as soon as possible<br /><br />ERRORS:<br /><br />Traceback (most recent call last):<br />  File &quot;C:\Program Files\Google\google_appengine\google\appengine\runtime\wsgi.py&quot;, line 195, in Handle<br />    handler = _config_handle.add_wsgi_middleware(self._LoadHandler())<br />  File &quot;C:\Program Files\Google\google_appengine\google\appengine\runtime\wsgi.py&quot;, line 239, in _LoadHandler<br />    handler = __import__(path[0])<br />  File &quot;C:\Program Files\Google\google_appengine\google\appengine\tools\dev_appserver_import_hook.py&quot;, line 719, in Decorate<br />    return func(self, *args, **kwargs)<br />  File &quot;C:\Program Files\Google\google_appengine\google\appengine\tools\dev_appserver_import_hook.py&quot;, line 1923, in load_module<br />    return self.FindAndLoadModule(submodule, fullname, search_path)<br />  File &quot;C:\Program Files\Google\google_appengine\google\appengine\tools\dev_appserver_import_hook.py&quot;, line 719, in Decorate<br />    return func(self, *args, **kwargs)<br />  File &quot;C:\Program Files\Google\google_appengine\google\appengine\tools\dev_appserver_import_hook.py&quot;, line 1787, in FindAndLoadModule<br />    description)<br />  File &quot;C:\Program Files\Google\google_appengine\google\appengine\tools\dev_appserver_import_hook.py&quot;, line 719, in Decorate<br />    return func(self, *args, **kwargs)<br />  File &quot;C:\Program Files\Google\google_appengine\google\appengine\tools\dev_appserver_import_hook.py&quot;, line 1730, in LoadModuleRestricted<br />    description)<br />  File &quot;C:\Python27\mai2\main.py&quot;, line 40, in &lt;module&gt;<br />    server = smtplib.SMTP(SERVER)<br />  File &quot;C:\Python27\lib\smtplib.py&quot;, line 242, in __init__<br />    (code, msg) = self.connect(host, port)<br />  File &quot;C:\Python27\lib\smtplib.py&quot;, line 302, in connect<br />    self.sock = self._get_socket(host, port, self.timeout)<br />  File &quot;C:\Python27\lib\smtplib.py&quot;, line 277, in _get_socket<br />    return socket.create_connection((port, host), timeout)<br />AttributeError: 'module' object has no attribute 'create_connection'[b][/b][b][/b][b][/b]<p>Statistics: Posted by <a href="http://www.tutorialspoint.com/forums/memberlist.php?mode=viewprofile&amp;u=15956">bhuvanj</a> — Fri Nov 09, 2012 12:35 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[asifsuun]]></name></author>
<updated>2012-10-16T18:03:56+00:00</updated>
<published>2012-10-16T18:03:56+00:00</published>
<id>http://www.tutorialspoint.com/forums/viewtopic.php?t=2105&amp;p=2390#p2390</id>
<link href="http://www.tutorialspoint.com/forums/viewtopic.php?t=2105&amp;p=2390#p2390"/>
<title type="html"><![CDATA[Python Programming • ]]></title>

<category term="Python Programming" scheme="http://www.tutorialspoint.com/forums/viewforum.php?f=26" label="Python Programming"/>
<content type="html" xml:base="http://www.tutorialspoint.com/forums/viewtopic.php?t=2105&amp;p=2390#p2390"><![CDATA[
I wanted to thank you for this great read!!<p>Statistics: Posted by <a href="http://www.tutorialspoint.com/forums/memberlist.php?mode=viewprofile&amp;u=15806">asifsuun</a> — Tue Oct 16, 2012 6:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[shibenchouhan]]></name></author>
<updated>2012-10-10T20:05:58+00:00</updated>
<published>2012-10-10T20:05:58+00:00</published>
<id>http://www.tutorialspoint.com/forums/viewtopic.php?t=2105&amp;p=2387#p2387</id>
<link href="http://www.tutorialspoint.com/forums/viewtopic.php?t=2105&amp;p=2387#p2387"/>
<title type="html"><![CDATA[Python Programming • ]]></title>

<category term="Python Programming" scheme="http://www.tutorialspoint.com/forums/viewforum.php?f=26" label="Python Programming"/>
<content type="html" xml:base="http://www.tutorialspoint.com/forums/viewtopic.php?t=2105&amp;p=2387#p2387"><![CDATA[
###Having trouble passing through words not in the dictionary. Can anyone help?<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>dictionary = \<br />&#91;&#91;'r', 'are'&#93;,<br />&#91;'txt', 'text'&#93;,<br />&#91;'k', 'okay'&#93;,<br />&#91;'2moro', 'tomorrow'&#93;,<br />&#91;'4', 'for'&#93;,<br />&#91;'b', 'be'&#93;,<br />&#91;'ne', 'any'&#93;,<br />&#91;'nite', 'night'&#93;,<br />&#91;'b4', 'before'&#93;&#93; #Plus lots more words in the compete dictionary<br /><br />import string<br />import re<br /><br />item = &quot;&quot;&quot;c u r 2 wk y hello evry1 sed pix r gd&quot;&quot;&quot; #the word hello doesn't make it through because it's not in the dictionary but I need it to come through.<br /><br />##Convert sms to english starts here...<br />def sms_to_english&#40;item&#41;:<br />      sms=&#91;&#93;<br />      item_split = item.split&#40;&#41;<br />      for word in item_split:<br />           for j in range&#40;len&#40;dictionary&#41;&#41;:<br />                if word == dictionary&#91;j&#93;&#91;0&#93;:<br />                      sms.append&#40;dictionary&#91;j&#93;&#91;1&#93;&#41;<br />           sms.append&#40;word&#41; #this will add the hello word which are not present in dictionary as the original word.<br /><br /><br />       return &quot; &quot;.join&#40;sms&#41;</code></dd></dl><p>Statistics: Posted by <a href="http://www.tutorialspoint.com/forums/memberlist.php?mode=viewprofile&amp;u=15765">shibenchouhan</a> — Wed Oct 10, 2012 8:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[arichards]]></name></author>
<updated>2012-08-29T20:31:55+00:00</updated>
<published>2012-08-29T20:31:55+00:00</published>
<id>http://www.tutorialspoint.com/forums/viewtopic.php?t=2105&amp;p=2361#p2361</id>
<link href="http://www.tutorialspoint.com/forums/viewtopic.php?t=2105&amp;p=2361#p2361"/>
<title type="html"><![CDATA[Python Programming • Trouble with sms to english converter]]></title>

<category term="Python Programming" scheme="http://www.tutorialspoint.com/forums/viewforum.php?f=26" label="Python Programming"/>
<content type="html" xml:base="http://www.tutorialspoint.com/forums/viewtopic.php?t=2105&amp;p=2361#p2361"><![CDATA[
###Having trouble passing through words not in the dictionary. Can anyone help?<br /><br />dictionary = \<br />[['r', 'are'],<br /> ['txt', 'text'],<br /> ['k', 'okay'],<br /> ['2moro', 'tomorrow'],<br /> ['4', 'for'],<br /> ['b', 'be'],<br /> ['ne', 'any'],<br /> ['nite', 'night'],<br /> ['b4', 'before']]   #Plus lots more words in the compete dictionary<br /><br />import string<br />import re<br /><br />item = &quot;&quot;&quot;c u r 2 wk y hello evry1 sed pix r gd&quot;&quot;&quot;   #the word hello doesn't make it through because it's not in the dictionary but I need it to come through.<br /><br />##Convert sms to english starts here...<br />def sms_to_english(item):<br />    sms=[]<br />    item_split = item.split()     <br />    for word in item_split:<br />        for j in range(len(dictionary)):<br />            if word == dictionary[j][0]:<br />                sms.append(dictionary[j][1])<br />                <br />                    <br />    return &quot; &quot;.join(sms)<p>Statistics: Posted by <a href="http://www.tutorialspoint.com/forums/memberlist.php?mode=viewprofile&amp;u=15477">arichards</a> — Wed Aug 29, 2012 8:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rasu1988]]></name></author>
<updated>2012-05-02T18:07:59+00:00</updated>
<published>2012-05-02T18:07:59+00:00</published>
<id>http://www.tutorialspoint.com/forums/viewtopic.php?t=2091&amp;p=2333#p2333</id>
<link href="http://www.tutorialspoint.com/forums/viewtopic.php?t=2091&amp;p=2333#p2333"/>
<title type="html"><![CDATA[Python Programming • Integration with c]]></title>

<category term="Python Programming" scheme="http://www.tutorialspoint.com/forums/viewforum.php?f=26" label="Python Programming"/>
<content type="html" xml:base="http://www.tutorialspoint.com/forums/viewtopic.php?t=2091&amp;p=2333#p2333"><![CDATA[
I am new to python programming. I learned basic programming in python. But i want to know how to call c function from python code. Any simple example to understand<br /><br />Thanks in advance<p>Statistics: Posted by <a href="http://www.tutorialspoint.com/forums/memberlist.php?mode=viewprofile&amp;u=15027">rasu1988</a> — Wed May 02, 2012 6:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[sunilkaushal83]]></name></author>
<updated>2012-04-25T10:08:52+00:00</updated>
<published>2012-04-25T10:08:52+00:00</published>
<id>http://www.tutorialspoint.com/forums/viewtopic.php?t=2090&amp;p=2332#p2332</id>
<link href="http://www.tutorialspoint.com/forums/viewtopic.php?t=2090&amp;p=2332#p2332"/>
<title type="html"><![CDATA[Python Programming • Need Pseudocode]]></title>

<category term="Python Programming" scheme="http://www.tutorialspoint.com/forums/viewforum.php?f=26" label="Python Programming"/>
<content type="html" xml:base="http://www.tutorialspoint.com/forums/viewtopic.php?t=2090&amp;p=2332#p2332"><![CDATA[
# program to administer shoe warehouse dispatching service<br /># author: &lt;enter your id&gt;<br /># date last modified:<br /><br />import string<br /><br /># This program is written to read the file &quot;orders.txt&quot; that stores separate order details <br /># on each line in the file, with six items per line as follows :<br /># ShoeStyle(e.g. Womens/Mens/Children)  ShoeType (sandals/runners/dress/school/boat) <br /># Shoeitemcode(NNNNX) ShoeSize Price ShopAddress<br /><br /># list of constants used to access each column of order details in the orders.txt file.<br />DATA_FILE = &quot;orders.txt&quot;<br />SHOE_STYLE = 0<br />SHOE_TYPE = 1<br />ITEM_CODE = 2<br />SIZE = 3<br />PRICE = 4<br />SHOPADDRESS = 5<br /><br />def menu():<br />    print &quot;\n\tWarehouse dispatch system Menu\n&quot;<br />    print &quot;1. Display all the orders on file&quot;<br />    print &quot;2. Display a list of the ShoeStyle and ShoeType of all items ordered&quot;<br />    print &quot;3. Display the order details given a particular item code&quot;<br />    print &quot;4. Display the item number of the cheapest item on order&quot;<br />    print &quot;5. Display the order details for the largest shoe size on order&quot;<br />    print &quot;6. Display the total number of items in the order&quot;<br />    print &quot;7. Count and display the Shoe Style and ShoeType of all shoes ordered for a specified Shop Address&quot;<br />    print &quot;8. Display the Shoe Type and price for all ordered items in a given Shoe Style (womens/mens/children)&quot;<br />    print &quot;9. Has a specified Shoe Code been ordered? For which Store Location?&quot;<br />    print &quot;10. Display the cost of a particular item, given the line of data from the orders file&quot;<br />    print &quot;11. Calculate the total cost of the entire order&quot;<br />    print &quot;12. Add details for a new order to the orders file&quot;<br />    print &quot;20. Exit&quot;<br /><br />    option = input(&quot;\nEnter the number shown to select a menu item: &quot;);<br />    return option<br /><br /># Displays (unformatted) all details of all of the orders in the orders.txt input file<br />def displayFile(inf):<br />    for line in inf:<br />        # display the current line without the end-of-line character, '\n'<br />        print line[:-1]<br />    return <br /><br /># displays a list of ShoeStyle and ShoeType of all the items ordered<br />def displayItemNames (inf):<br />    print &quot;not yet implemented&quot;<br />    #for line in inf:<br />      # not yet implemented<br />    return<br /><br /># displays the order details (formatted) of a particular item, given item number <br />def displayItemDetails(inf, itemcode):<br />    print &quot;Details for ordered item:&quot;,itemcode <br />    for line in inf:<br />#display details for line<br />        splitLine = string.split(line)<br />        if splitLine[ITEM_CODE] == itemcode:<br />            print &quot;Shoe Style: &quot;, splitLine[SHOE_STYLE]<br />            print &quot;Shoe Type: &quot;, splitLine[SHOE_TYPE]<br />            # print &quot;Shoe Size: &quot;, <br />            # print &quot;Price: $ &quot;,<br />            # print &quot;Store Location: &quot;,<br />    return<br /><br /># displays, in formatted form, the details of a single<br /># purchase, given a line of the purchases file<br />def displayLineDetails(lineString):<br />    splitLine = string.split(lineString)<br />    print &quot;Order details for this item are: &quot;<br />    print &quot;Shoe Style: &quot;, splitLine[SHOE_STYLE]<br />    print &quot;Shoe Type: &quot;, splitLine[SHOE_TYPE]<br />    print &quot;Shoe Size: &quot;, splitLine[SIZE]<br />    print &quot;Item price: $&quot;, splitLine[PRICE]<br />    print &quot;Store Location: &quot;,splitLine[SHOPADDRESS]<br />    return<br />            <br /># Returns the item number of the cheapest item purchased<br />def findCheapestItem(inf):<br />    # initialise starting value for minprice well above typical shoe prices<br />    minprice = 0<br />    for line in inf:<br />        #itemcode = string.split(line)[ITEM_CODE]<br />        price = eval(string.split(line)[PRICE])<br />        if minprice&gt;price<br />          print minprice<br />          else<br />            minprice=price<br />            minItem=minprice<br />          # identify the item number<br />          # identify the item price<br />          # if the item price is below the current minimum then<br />                   # change the stored minimum price and the associated item code<br />       <br />    return minItem  # return result to be displayed in main()<br /><br /># Returns the itemcode of the largest (size) shoe purchased<br />def findLargestItem(inf):<br />    maxsize = 0  # this initial value is set to be zero so that the real max is found<br />    for line in inf:<br />        itemcode = string.split(line)[ITEM_CODE]      # identify the item code<br />        size = eval(string.split(line)[SIZE])  # identify the item size<br />        # if the item size is below the current minimum then<br />        # change the stored minimum size and the associated item name<br />        if size &gt; maxsize:<br />            maxsize = size<br />            maxitem = itemcode<br />    return maxitem   #return itemcode found as maximum<br /><br /># Find the total number of purchased items in the order<br />def findNumberOfItems(inf):<br />    total = 0   # temporary only, for testing choice == 6 main()<br />    # not yet implemented<br />    # count all lines in file and return total count<br />    return total<br /><br /># Count and display the Shoe Style and Shoe Type of all items ordered for a particular store location<br />def displaySectionItems(inf, givenAddress):<br />    #print &quot;Items ordered from Store &quot;, givenAddress, &quot;: &quot;<br />    count =0<br />    print &quot;not yet implemented&quot;<br />    #for each line in file<br />#get location from file<br />#location = string.split(line)[SHOPADDRESS]<br />   # if location matches givenAddress<br />        #if givenAddress = location:<br />            #print &quot;Order details: &quot;<br />    # display line details<br />    # increment count value<br />    return 1  #return count to main<br /><br /># Display the Shoe Type and price for all ordered items in a given Shoe Style (womens/mens/children)&quot;<br />def displayItemsforStyle (inf, specifiedStyle):<br />    print &quot;Not yet implemented&quot; <br />    return<br /><br /># Check whether a specified item has been ordered and if so, which store location<br />def itemPurchased(inf, specifiedItem):<br />    # set variable found to False<br />    found = False<br />    # for each line of the file<br />        # identify the item code<br />        # if the item code matches the specified item<br />            #set found to True<br />    if found:<br />       return string.split(line)[SHOPADDRESS]<br />    else:<br />       return &quot;&quot;<br />    # return the value of purchased to main()<br /><br />    <br /># Calculate the total cost of purchasing a given single item<br /># not yet implemented - add function here<br /><br /><br /><br /># Calculate total cost of all purchases<br /># not yet implemented - add function here<br /><br /><br /># add details of another purchase to the file (closed) <br /># not yet implemented - add function here<br />def findNumberOfItems(inf):<br />    total_items=0<br />    for line in inf:<br />    total_items=<br /><br />  <br />def main():<br />    # Open file and display menu<br />    infile = open(DATA_FILE, 'r')<br />    choice = menu()<br /><br />    # Execute menu choice<br />    while choice != 20:<br />        if choice == 1:<br />            displayFile(infile)<br />        elif choice == 2:<br />            displayItemNames (infile)<br />        elif choice == 3:<br />            itemName = raw_input(&quot;Enter the code of an item ordered: &quot;)<br />            displayItemDetails(infile, itemName)<br />        elif choice == 4:<br />            item = findCheapestItem(infile)<br />            print &quot;The cheapest item is :&quot;, item<br />        elif choice == 5:<br />            item = findLargestItem(infile)<br />            print &quot;The largest shoe on order is :&quot;, item, &quot;Details below: &quot;<br />            infile.seek(0)<br />            displayItemDetails(infile,item)<br />        elif choice == 6:<br />            total = findNumberOfItems(infile)<br />            print &quot;The total number of items purchased is &quot;, total<br />        elif choice == 7:<br />            location = raw_input(&quot;Enter the name of a store location: &quot;)<br />            print &quot;The items purchased from store &quot;, location, &quot;were : &quot;<br />            itemCount = displaySectionItems(infile, location)<br />            if itemCount ==1:<br />               print &quot;There was only&quot;, itemCount, &quot;item ordered from this store&quot;<br />            else:<br />               print &quot;There were&quot;, itemCount, &quot;different items ordered from this store&quot;<br />        elif choice == 8:<br />            style = raw_input(&quot;Enter a Shoe Style:&quot;)<br />            print &quot;The listed items in this style are ordered:&quot;, style<br />            displayItemsforStyle(infile, style)<br />        elif choice == 9:<br />            item = raw_input(&quot;Enter the item Code to search for: &quot;)<br />            location = itemPurchased(infile, item)<br />            print &quot;Location &quot;, location<br />            if location != &quot;&quot; :<br />                print &quot;This item has been ordered for &quot;, location<br />            else:<br />                print &quot;This item has not yet been ordered&quot;<br />        elif choice == 10:<br />            # next line provides a temporary test for function calculateCostOfItem()<br />            # print calculateCostOfItem(&quot;womens sandals 2653F 7 89.65 Stockland&quot;)<br />            print &quot;Not yet implemented&quot;<br />        elif choice == 11:<br />            print &quot;Total purchases: Not yet implemented&quot;<br />            #print &quot;Total purchases cost: $&quot;, calculateTotalCost(infile)<br />        elif choice == 12:<br />            print &quot;Not yet implemented&quot;<br />            <br />        else:<br />            print &quot;Wrong number chosen - try again&quot;<br /><br />        # Reset file reading position to start of file and display menu again<br />        infile.seek(0)<br />        choice = menu()<br />        <br />    # Close file and end program<br />    infile.close()<br />    print &quot;End of program&quot;<br /><br /># Execute main function<br />main()<br />    <br /><br />Q. The following pseudocode describes the logic of the function findNumberOfItems() (option 6). Convert the pseudocode to Python code:<br />Define function findNumberOfItems(inf)<br />initialise the total<br />for each line in the file,<br />add 1 to the total<br />return the total<p>Statistics: Posted by <a href="http://www.tutorialspoint.com/forums/memberlist.php?mode=viewprofile&amp;u=14995">sunilkaushal83</a> — Wed Apr 25, 2012 10:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[sunilkaushal83]]></name></author>
<updated>2012-04-25T09:54:40+00:00</updated>
<published>2012-04-25T09:54:40+00:00</published>
<id>http://www.tutorialspoint.com/forums/viewtopic.php?t=2089&amp;p=2331#p2331</id>
<link href="http://www.tutorialspoint.com/forums/viewtopic.php?t=2089&amp;p=2331#p2331"/>
<title type="html"><![CDATA[Python Programming • Convert into python Code]]></title>

<category term="Python Programming" scheme="http://www.tutorialspoint.com/forums/viewforum.php?f=26" label="Python Programming"/>
<content type="html" xml:base="http://www.tutorialspoint.com/forums/viewtopic.php?t=2089&amp;p=2331#p2331"><![CDATA[
# program to administer shoe warehouse dispatching service<br /># author: &lt;enter your id&gt;<br /># date last modified:<br /><br />import string<br /><br /># This program is written to read the file &quot;orders.txt&quot; that stores separate order details <br /># on each line in the file, with six items per line as follows :<br /># ShoeStyle(e.g. Womens/Mens/Children)  ShoeType (sandals/runners/dress/school/boat) <br /># Shoeitemcode(NNNNX) ShoeSize Price ShopAddress<br /><br /># list of constants used to access each column of order details in the orders.txt file.<br />DATA_FILE = &quot;orders.txt&quot;<br />SHOE_STYLE = 0<br />SHOE_TYPE = 1<br />ITEM_CODE = 2<br />SIZE = 3<br />PRICE = 4<br />SHOPADDRESS = 5<br /><br />def menu():<br />    print &quot;\n\tWarehouse dispatch system Menu\n&quot;<br />    print &quot;1. Display all the orders on file&quot;<br />    print &quot;2. Display a list of the ShoeStyle and ShoeType of all items ordered&quot;<br />    print &quot;3. Display the order details given a particular item code&quot;<br />    print &quot;4. Display the item number of the cheapest item on order&quot;<br />    print &quot;5. Display the order details for the largest shoe size on order&quot;<br />    print &quot;6. Display the total number of items in the order&quot;<br />    print &quot;7. Count and display the Shoe Style and ShoeType of all shoes ordered for a specified Shop Address&quot;<br />    print &quot;8. Display the Shoe Type and price for all ordered items in a given Shoe Style (womens/mens/children)&quot;<br />    print &quot;9. Has a specified Shoe Code been ordered? For which Store Location?&quot;<br />    print &quot;10. Display the cost of a particular item, given the line of data from the orders file&quot;<br />    print &quot;11. Calculate the total cost of the entire order&quot;<br />    print &quot;12. Add details for a new order to the orders file&quot;<br />    print &quot;20. Exit&quot;<br /><br />    option = input(&quot;\nEnter the number shown to select a menu item: &quot;);<br />    return option<br /><br /># Displays (unformatted) all details of all of the orders in the orders.txt input file<br />def displayFile(inf):<br />    for line in inf:<br />        # display the current line without the end-of-line character, '\n'<br />        print line[:-1]<br />    return <br /><br /># displays a list of ShoeStyle and ShoeType of all the items ordered<br />def displayItemNames (inf):<br />    print &quot;not yet implemented&quot;<br />    #for line in inf:<br />      # not yet implemented<br />    return<br /><br /># displays the order details (formatted) of a particular item, given item number <br />def displayItemDetails(inf, itemcode):<br />    print &quot;Details for ordered item:&quot;,itemcode <br />    for line in inf:<br />#display details for line<br />        splitLine = string.split(line)<br />        if splitLine[ITEM_CODE] == itemcode:<br />            print &quot;Shoe Style: &quot;, splitLine[SHOE_STYLE]<br />            print &quot;Shoe Type: &quot;, splitLine[SHOE_TYPE]<br />            # print &quot;Shoe Size: &quot;, <br />            # print &quot;Price: $ &quot;,<br />            # print &quot;Store Location: &quot;,<br />    return<br /><br /># displays, in formatted form, the details of a single<br /># purchase, given a line of the purchases file<br />def displayLineDetails(lineString):<br />    splitLine = string.split(lineString)<br />    print &quot;Order details for this item are: &quot;<br />    print &quot;Shoe Style: &quot;, splitLine[SHOE_STYLE]<br />    print &quot;Shoe Type: &quot;, splitLine[SHOE_TYPE]<br />    print &quot;Shoe Size: &quot;, splitLine[SIZE]<br />    print &quot;Item price: $&quot;, splitLine[PRICE]<br />    print &quot;Store Location: &quot;,splitLine[SHOPADDRESS]<br />    return<br />            <br /># Returns the item number of the cheapest item purchased<br />def findCheapestItem(inf):<br />    # initialise starting value for minprice well above typical shoe prices<br />    minprice = 0<br />    for line in inf:<br />        #itemcode = string.split(line)[ITEM_CODE]<br />        price = eval(string.split(line)[PRICE])<br />        if minprice&gt;price<br />          print minprice<br />          else<br />            minprice=price<br />            minItem=minprice<br />          # identify the item number<br />          # identify the item price<br />          # if the item price is below the current minimum then<br />                   # change the stored minimum price and the associated item code<br />       <br />    return minItem  # return result to be displayed in main()<br /><br /># Returns the itemcode of the largest (size) shoe purchased<br />def findLargestItem(inf):<br />    maxsize = 0  # this initial value is set to be zero so that the real max is found<br />    for line in inf:<br />        itemcode = string.split(line)[ITEM_CODE]      # identify the item code<br />        size = eval(string.split(line)[SIZE])  # identify the item size<br />        # if the item size is below the current minimum then<br />        # change the stored minimum size and the associated item name<br />        if size &gt; maxsize:<br />            maxsize = size<br />            maxitem = itemcode<br />    return maxitem   #return itemcode found as maximum<br /><br /># Find the total number of purchased items in the order<br />def findNumberOfItems(inf):<br />    total = 0   # temporary only, for testing choice == 6 main()<br />    # not yet implemented<br />    # count all lines in file and return total count<br />    return total<br /><br /># Count and display the Shoe Style and Shoe Type of all items ordered for a particular store location<br />def displaySectionItems(inf, givenAddress):<br />    #print &quot;Items ordered from Store &quot;, givenAddress, &quot;: &quot;<br />    count =0<br />    print &quot;not yet implemented&quot;<br />    #for each line in file<br />#get location from file<br />#location = string.split(line)[SHOPADDRESS]<br />   # if location matches givenAddress<br />        #if givenAddress = location:<br />            #print &quot;Order details: &quot;<br />    # display line details<br />    # increment count value<br />    return 1  #return count to main<br /><br /># Display the Shoe Type and price for all ordered items in a given Shoe Style (womens/mens/children)&quot;<br />def displayItemsforStyle (inf, specifiedStyle):<br />    print &quot;Not yet implemented&quot; <br />    return<br /><br /># Check whether a specified item has been ordered and if so, which store location<br />def itemPurchased(inf, specifiedItem):<br />    # set variable found to False<br />    found = False<br />    # for each line of the file<br />        # identify the item code<br />        # if the item code matches the specified item<br />            #set found to True<br />    if found:<br />       return string.split(line)[SHOPADDRESS]<br />    else:<br />       return &quot;&quot;<br />    # return the value of purchased to main()<br /><br />    <br /># Calculate the total cost of purchasing a given single item<br /># not yet implemented - add function here<br /><br /><br /><br /># Calculate total cost of all purchases<br /># not yet implemented - add function here<br /><br /><br /># add details of another purchase to the file (closed) <br /># not yet implemented - add function here<br /><br />  <br />def main():<br />    # Open file and display menu<br />    infile = open(DATA_FILE, 'r')<br />    choice = menu()<br /><br />    # Execute menu choice<br />    while choice != 20:<br />        if choice == 1:<br />            displayFile(infile)<br />        elif choice == 2:<br />            displayItemNames (infile)<br />        elif choice == 3:<br />            itemName = raw_input(&quot;Enter the code of an item ordered: &quot;)<br />            displayItemDetails(infile, itemName)<br />        elif choice == 4:<br />            item = findCheapestItem(infile)<br />            print &quot;The cheapest item is :&quot;, item<br />        elif choice == 5:<br />            item = findLargestItem(infile)<br />            print &quot;The largest shoe on order is :&quot;, item, &quot;Details below: &quot;<br />            infile.seek(0)<br />            displayItemDetails(infile,item)<br />        elif choice == 6:<br />            total = findNumberOfItems(infile)<br />            print &quot;The total number of items purchased is &quot;, total<br />        elif choice == 7:<br />            location = raw_input(&quot;Enter the name of a store location: &quot;)<br />            print &quot;The items purchased from store &quot;, location, &quot;were : &quot;<br />            itemCount = displaySectionItems(infile, location)<br />            if itemCount ==1:<br />               print &quot;There was only&quot;, itemCount, &quot;item ordered from this store&quot;<br />            else:<br />               print &quot;There were&quot;, itemCount, &quot;different items ordered from this store&quot;<br />        elif choice == 8:<br />            style = raw_input(&quot;Enter a Shoe Style:&quot;)<br />            print &quot;The listed items in this style are ordered:&quot;, style<br />            displayItemsforStyle(infile, style)<br />        elif choice == 9:<br />            item = raw_input(&quot;Enter the item Code to search for: &quot;)<br />            location = itemPurchased(infile, item)<br />            print &quot;Location &quot;, location<br />            if location != &quot;&quot; :<br />                print &quot;This item has been ordered for &quot;, location<br />            else:<br />                print &quot;This item has not yet been ordered&quot;<br />        elif choice == 10:<br />            # next line provides a temporary test for function calculateCostOfItem()<br />            # print calculateCostOfItem(&quot;womens sandals 2653F 7 89.65 Stockland&quot;)<br />            print &quot;Not yet implemented&quot;<br />        elif choice == 11:<br />            print &quot;Total purchases: Not yet implemented&quot;<br />            #print &quot;Total purchases cost: $&quot;, calculateTotalCost(infile)<br />        elif choice == 12:<br />            print &quot;Not yet implemented&quot;<br />            <br />        else:<br />            print &quot;Wrong number chosen - try again&quot;<br /><br />        # Reset file reading position to start of file and display menu again<br />        infile.seek(0)<br />        choice = menu()<br />        <br />    # Close file and end program<br />    infile.close()<br />    print &quot;End of program&quot;<br /><br /># Execute main function<br />main()<br />    <br /><br />Convert the pseudocode to Python code:<br />Define function findNumberOfItems(inf)<br />initialise the total<br />for each line in the file,<br />add 1 to the total<br />return the total<br /><br /><br /><br /><br /><br />I am new in programming so that I am facing problem. Please help me<p>Statistics: Posted by <a href="http://www.tutorialspoint.com/forums/memberlist.php?mode=viewprofile&amp;u=14995">sunilkaushal83</a> — Wed Apr 25, 2012 9:54 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[sunilkaushal83]]></name></author>
<updated>2012-04-25T09:49:10+00:00</updated>
<published>2012-04-25T09:49:10+00:00</published>
<id>http://www.tutorialspoint.com/forums/viewtopic.php?t=2088&amp;p=2330#p2330</id>
<link href="http://www.tutorialspoint.com/forums/viewtopic.php?t=2088&amp;p=2330#p2330"/>
<title type="html"><![CDATA[Python Programming • Code is not working for Cheapest Item function]]></title>

<category term="Python Programming" scheme="http://www.tutorialspoint.com/forums/viewforum.php?f=26" label="Python Programming"/>
<content type="html" xml:base="http://www.tutorialspoint.com/forums/viewtopic.php?t=2088&amp;p=2330#p2330"><![CDATA[
# program to administer shoe warehouse dispatching service<br /># author: &lt;enter your id&gt;<br /># date last modified:<br /><br />import string<br /><br /># This program is written to read the file &quot;orders.txt&quot; that stores separate order details <br /># on each line in the file, with six items per line as follows :<br /># ShoeStyle(e.g. Womens/Mens/Children)  ShoeType (sandals/runners/dress/school/boat) <br /># Shoeitemcode(NNNNX) ShoeSize Price ShopAddress<br /><br /># list of constants used to access each column of order details in the orders.txt file.<br />DATA_FILE = &quot;orders.txt&quot;<br />SHOE_STYLE = 0<br />SHOE_TYPE = 1<br />ITEM_CODE = 2<br />SIZE = 3<br />PRICE = 4<br />SHOPADDRESS = 5<br /><br />def menu():<br />    print &quot;\n\tWarehouse dispatch system Menu\n&quot;<br />    print &quot;1. Display all the orders on file&quot;<br />    print &quot;2. Display a list of the ShoeStyle and ShoeType of all items ordered&quot;<br />    print &quot;3. Display the order details given a particular item code&quot;<br />    print &quot;4. Display the item number of the cheapest item on order&quot;<br />    print &quot;5. Display the order details for the largest shoe size on order&quot;<br />    print &quot;6. Display the total number of items in the order&quot;<br />    print &quot;7. Count and display the Shoe Style and ShoeType of all shoes ordered for a specified Shop Address&quot;<br />    print &quot;8. Display the Shoe Type and price for all ordered items in a given Shoe Style (womens/mens/children)&quot;<br />    print &quot;9. Has a specified Shoe Code been ordered? For which Store Location?&quot;<br />    print &quot;10. Display the cost of a particular item, given the line of data from the orders file&quot;<br />    print &quot;11. Calculate the total cost of the entire order&quot;<br />    print &quot;12. Add details for a new order to the orders file&quot;<br />    print &quot;20. Exit&quot;<br /><br />    option = input(&quot;\nEnter the number shown to select a menu item: &quot;);<br />    return option<br /><br /># Displays (unformatted) all details of all of the orders in the orders.txt input file<br />def displayFile(inf):<br />    for line in inf:<br />        # display the current line without the end-of-line character, '\n'<br />        print line[:-1]<br />    return <br /><br /># displays a list of ShoeStyle and ShoeType of all the items ordered<br />def displayItemNames (inf):<br />    print &quot;not yet implemented&quot;<br />    #for line in inf:<br />      # not yet implemented<br />    return<br /><br /># displays the order details (formatted) of a particular item, given item number <br />def displayItemDetails(inf, itemcode):<br />    print &quot;Details for ordered item:&quot;,itemcode <br />    for line in inf:<br />#display details for line<br />        splitLine = string.split(line)<br />        if splitLine[ITEM_CODE] == itemcode:<br />            print &quot;Shoe Style: &quot;, splitLine[SHOE_STYLE]<br />            print &quot;Shoe Type: &quot;, splitLine[SHOE_TYPE]<br />            # print &quot;Shoe Size: &quot;, <br />            # print &quot;Price: $ &quot;,<br />            # print &quot;Store Location: &quot;,<br />    return<br /><br /># displays, in formatted form, the details of a single<br /># purchase, given a line of the purchases file<br />def displayLineDetails(lineString):<br />    splitLine = string.split(lineString)<br />    print &quot;Order details for this item are: &quot;<br />    print &quot;Shoe Style: &quot;, splitLine[SHOE_STYLE]<br />    print &quot;Shoe Type: &quot;, splitLine[SHOE_TYPE]<br />    print &quot;Shoe Size: &quot;, splitLine[SIZE]<br />    print &quot;Item price: $&quot;, splitLine[PRICE]<br />    print &quot;Store Location: &quot;,splitLine[SHOPADDRESS]<br />    return<br />            <br /># Returns the item number of the cheapest item purchased<br />def findCheapestItem(inf):<br />    # initialise starting value for minprice well above typical shoe prices<br />    minprice = 0<br />    for line in inf:<br />        #itemcode = string.split(line)[ITEM_CODE]<br />        price = eval(string.split(line)[PRICE])<br />        if minprice&gt;price<br />          print minprice<br />          else<br />            minprice=price<br />            minItem=minprice<br />          # identify the item number<br />          # identify the item price<br />          # if the item price is below the current minimum then<br />                   # change the stored minimum price and the associated item code<br />       <br />    return minItem  # return result to be displayed in main()<br /><br /># Returns the itemcode of the largest (size) shoe purchased<br />def findLargestItem(inf):<br />    maxsize = 0  # this initial value is set to be zero so that the real max is found<br />    for line in inf:<br />        itemcode = string.split(line)[ITEM_CODE]      # identify the item code<br />        size = eval(string.split(line)[SIZE])  # identify the item size<br />        # if the item size is below the current minimum then<br />        # change the stored minimum size and the associated item name<br />        if size &gt; maxsize:<br />            maxsize = size<br />            maxitem = itemcode<br />    return maxitem   #return itemcode found as maximum<br /><br /># Find the total number of purchased items in the order<br />def findNumberOfItems(inf):<br />    total = 0   # temporary only, for testing choice == 6 main()<br />    # not yet implemented<br />    # count all lines in file and return total count<br />    return total<br /><br /># Count and display the Shoe Style and Shoe Type of all items ordered for a particular store location<br />def displaySectionItems(inf, givenAddress):<br />    #print &quot;Items ordered from Store &quot;, givenAddress, &quot;: &quot;<br />    count =0<br />    print &quot;not yet implemented&quot;<br />    #for each line in file<br />#get location from file<br />#location = string.split(line)[SHOPADDRESS]<br />   # if location matches givenAddress<br />        #if givenAddress = location:<br />            #print &quot;Order details: &quot;<br />    # display line details<br />    # increment count value<br />    return 1  #return count to main<br /><br /># Display the Shoe Type and price for all ordered items in a given Shoe Style (womens/mens/children)&quot;<br />def displayItemsforStyle (inf, specifiedStyle):<br />    print &quot;Not yet implemented&quot; <br />    return<br /><br /># Check whether a specified item has been ordered and if so, which store location<br />def itemPurchased(inf, specifiedItem):<br />    # set variable found to False<br />    found = False<br />    # for each line of the file<br />        # identify the item code<br />        # if the item code matches the specified item<br />            #set found to True<br />    if found:<br />       return string.split(line)[SHOPADDRESS]<br />    else:<br />       return &quot;&quot;<br />    # return the value of purchased to main()<br /><br />    <br /># Calculate the total cost of purchasing a given single item<br /># not yet implemented - add function here<br /><br /><br /><br /># Calculate total cost of all purchases<br /># not yet implemented - add function here<br /><br /><br /># add details of another purchase to the file (closed) <br /># not yet implemented - add function here<br /><br />  <br />def main():<br />    # Open file and display menu<br />    infile = open(DATA_FILE, 'r')<br />    choice = menu()<br /><br />    # Execute menu choice<br />    while choice != 20:<br />        if choice == 1:<br />            displayFile(infile)<br />        elif choice == 2:<br />            displayItemNames (infile)<br />        elif choice == 3:<br />            itemName = raw_input(&quot;Enter the code of an item ordered: &quot;)<br />            displayItemDetails(infile, itemName)<br />        elif choice == 4:<br />            item = findCheapestItem(infile)<br />            print &quot;The cheapest item is :&quot;, item<br />        elif choice == 5:<br />            item = findLargestItem(infile)<br />            print &quot;The largest shoe on order is :&quot;, item, &quot;Details below: &quot;<br />            infile.seek(0)<br />            displayItemDetails(infile,item)<br />        elif choice == 6:<br />            total = findNumberOfItems(infile)<br />            print &quot;The total number of items purchased is &quot;, total<br />        elif choice == 7:<br />            location = raw_input(&quot;Enter the name of a store location: &quot;)<br />            print &quot;The items purchased from store &quot;, location, &quot;were : &quot;<br />            itemCount = displaySectionItems(infile, location)<br />            if itemCount ==1:<br />               print &quot;There was only&quot;, itemCount, &quot;item ordered from this store&quot;<br />            else:<br />               print &quot;There were&quot;, itemCount, &quot;different items ordered from this store&quot;<br />        elif choice == 8:<br />            style = raw_input(&quot;Enter a Shoe Style:&quot;)<br />            print &quot;The listed items in this style are ordered:&quot;, style<br />            displayItemsforStyle(infile, style)<br />        elif choice == 9:<br />            item = raw_input(&quot;Enter the item Code to search for: &quot;)<br />            location = itemPurchased(infile, item)<br />            print &quot;Location &quot;, location<br />            if location != &quot;&quot; :<br />                print &quot;This item has been ordered for &quot;, location<br />            else:<br />                print &quot;This item has not yet been ordered&quot;<br />        elif choice == 10:<br />            # next line provides a temporary test for function calculateCostOfItem()<br />            # print calculateCostOfItem(&quot;womens sandals 2653F 7 89.65 Stockland&quot;)<br />            print &quot;Not yet implemented&quot;<br />        elif choice == 11:<br />            print &quot;Total purchases: Not yet implemented&quot;<br />            #print &quot;Total purchases cost: $&quot;, calculateTotalCost(infile)<br />        elif choice == 12:<br />            print &quot;Not yet implemented&quot;<br />            <br />        else:<br />            print &quot;Wrong number chosen - try again&quot;<br /><br />        # Reset file reading position to start of file and display menu again<br />        infile.seek(0)<br />        choice = menu()<br />        <br />    # Close file and end program<br />    infile.close()<br />    print &quot;End of program&quot;<br /><br /># Execute main function<br />main()<br />    <br />Q: Examine the code and comments of function findLargestItem() (option 4) in order to understand how it works. The function findCheapestItem() (option 5) can be modelled on this. Assume there is only one cheapest item.<p>Statistics: Posted by <a href="http://www.tutorialspoint.com/forums/memberlist.php?mode=viewprofile&amp;u=14995">sunilkaushal83</a> — Wed Apr 25, 2012 9:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[killed]]></name></author>
<updated>2012-03-11T20:15:44+00:00</updated>
<published>2012-03-11T20:15:44+00:00</published>
<id>http://www.tutorialspoint.com/forums/viewtopic.php?t=2078&amp;p=2307#p2307</id>
<link href="http://www.tutorialspoint.com/forums/viewtopic.php?t=2078&amp;p=2307#p2307"/>
<title type="html"><![CDATA[Python Programming • Query in For and If problem]]></title>

<category term="Python Programming" scheme="http://www.tutorialspoint.com/forums/viewforum.php?f=26" label="Python Programming"/>
<content type="html" xml:base="http://www.tutorialspoint.com/forums/viewtopic.php?t=2078&amp;p=2307#p2307"><![CDATA[
Hi, I had problem when code with require:<br />_Input anything from keyboard. If words same in Variables, noticed appear<br />_But output problem (see screenshot): many line same<br /><br />IMG: <!-- m --><a class="postlink" href="http://nj9.upanh.com/b5.s25.d3/44dfd2ac1149a921c531605c314eadad_41927379.screenshot20120311at19.png">http://nj9.upanh.com/b5.s25.d3/44dfd2ac ... 11at19.png</a><!-- m --><br /><br />Thank<p>Statistics: Posted by <a href="http://www.tutorialspoint.com/forums/memberlist.php?mode=viewprofile&amp;u=14825">killed</a> — Sun Mar 11, 2012 8:15 pm</p><hr />
]]></content>
</entry>
</feed>